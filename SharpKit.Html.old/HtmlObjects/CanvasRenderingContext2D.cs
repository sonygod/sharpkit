//Generated by a tool of Sebastian Loncar

namespace SharpKit.Html
{

using SharpKit.JavaScript;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields = true, OmitCasts = true)]
public partial class CanvasRenderingContext2D
{

	// CanvasRenderingContext2D
	public HtmlCanvasElement canvas {get; private set; }
	public void save() {}
	public void restore() {}
	public void scale(float x, float y) {}
	public void rotate(float angle) {}
	public void translate(float x, float y) {}
	public void transform(float m11, float m12, float m21, float m22, float dx, float dy) {}
	public void setTransform(float m11, float m12, float m21, float m22, float dx, float dy) {}
	public float globalAlpha {get; set; }
	public JsString globalCompositeOperation {get; set; }
	public object strokeStyle {get; set; }
	public object fillStyle {get; set; }
	public CanvasGradient createLinearGradient(float x0, float y0, float x1, float y1) { return default(CanvasGradient); }
	public CanvasGradient createRadialGradient(float x0, float y0, float r0, float x1, float y1, float r1) { return default(CanvasGradient); }
	public CanvasPattern createPattern(HtmlImageElement image, string repetition) { return default(CanvasPattern); }
	public CanvasPattern createPattern(HtmlCanvasElement image, string repetition) { return default(CanvasPattern); }
	public CanvasPattern createPattern(HtmlVideoElement image, string repetition) { return default(CanvasPattern); }
	public float lineWidth {get; set; }
	public JsString lineCap {get; set; }
	public JsString lineJoin {get; set; }
	public float miterLimit {get; set; }
	public float shadowOffsetX {get; set; }
	public float shadowOffsetY {get; set; }
	public float shadowBlur {get; set; }
	public JsString shadowColor {get; set; }
	public void clearRect(float x, float y, float w, float h) {}
	public void fillRect(float x, float y, float w, float h) {}
	public void strokeRect(float x, float y, float w, float h) {}
	public void beginPath() {}
	public void closePath() {}
	public void moveTo(float x, float y) {}
	public void lineTo(float x, float y) {}
	public void quadraticCurveTo(float cpx, float cpy, float x, float y) {}
	public void bezierCurveTo(float cp1x, float cp1y, float cp2x, float cp2y, float x, float y) {}
	public void arcTo(float x1, float y1, float x2, float y2, float radius) {}
	public void rect(float x, float y, float w, float h) {}
	public void arc(float x, float y, float radius, float startAngle, float endAngle, bool anticlockwise) {}
	public void fill() {}
	public void stroke() {}
	public void clip() {}
	public bool isPointInPath(float x, float y) { return default(bool); }
	public bool drawFocusRing(Element element, float xCaret, float yCaret) { return default(bool); }
	public bool drawFocusRing(Element element, float xCaret, float yCaret, bool canDrawCustom) { return default(bool); }
	public JsString font {get; set; }
	public JsString textAlign {get; set; }
	public JsString textBaseline {get; set; }
	public void fillText(string text, float x, float y) {}
	public void fillText(string text, float x, float y, float maxWidth) {}
	public void strokeText(string text, float x, float y) {}
	public void strokeText(string text, float x, float y, float maxWidth) {}
	public TextMetrics measureText(string text) { return default(TextMetrics); }
	public void drawImage(HtmlImageElement image, float dx, float dy) {}
	public void drawImage(HtmlImageElement image, float dx, float dy, float dw, float dh) {}
	public void drawImage(HtmlImageElement image, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh) {}
	public void drawImage(HtmlCanvasElement image, float dx, float dy) {}
	public void drawImage(HtmlCanvasElement image, float dx, float dy, float dw, float dh) {}
	public void drawImage(HtmlCanvasElement image, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh) {}
	public void drawImage(HtmlVideoElement image, float dx, float dy) {}
	public void drawImage(HtmlVideoElement image, float dx, float dy, float dw, float dh) {}
	public void drawImage(HtmlVideoElement image, float sx, float sy, float sw, float sh, float dx, float dy, float dw, float dh) {}
	public ImageData createImageData(float sw, float sh) { return default(ImageData); }
	public ImageData createImageData(ImageData imagedata) { return default(ImageData); }
	public ImageData getImageData(float sx, float sy, float sw, float sh) { return default(ImageData); }
	public void putImageData(ImageData imagedata, float dx, float dy) {}
	public void putImageData(ImageData imagedata, float dx, float dy, float dirtyX, float dirtyY, float dirtyWidth, float dirtyHeight) {}
}

}
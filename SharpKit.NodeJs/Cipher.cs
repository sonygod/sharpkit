//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace SharpKit.NodeJs
{
    /// <summary>
    /// <p>Class for encrypting data.
    /// </p>
    /// <p>Returned by <code>crypto.createCipher</code> and <code>crypto.createCipheriv</code>.
    /// </p>
    /// </summary>
    public partial class Cipher
    {
        /// <summary>
        /// <p>Returns any remaining enciphered contents, with <code>output_encoding</code> being one of:
        /// <code>&#39;binary&#39;</code>, <code>&#39;base64&#39;</code> or <code>&#39;hex&#39;</code>. Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>Note: <code>cipher</code> object can not be used after <code>final()</code> method been called.
        /// </p>
        /// </summary>
        public object final(){return null;}
        /// <summary>
        /// <p>Returns any remaining enciphered contents, with <code>output_encoding</code> being one of:
        /// <code>&#39;binary&#39;</code>, <code>&#39;base64&#39;</code> or <code>&#39;hex&#39;</code>. Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>Note: <code>cipher</code> object can not be used after <code>final()</code> method been called.
        /// </p>
        /// </summary>
        public object final(object output_encoding){return null;}
        /// <summary>
        /// <p>You can disable automatic padding of the input data to block size. If <code>auto_padding</code> is false,
        /// the length of the entire input data must be a multiple of the cipher&#39;s block size or <code>final</code> will fail.
        /// Useful for non-standard padding, e.g. using <code>0x0</code> instead of PKCS padding. You must call this before <code>cipher.final</code>.
        /// </p>
        /// </summary>
        public object setAutoPadding(object auto_padding){return null;}
        /// <summary>
        /// <p>Updates the cipher with <code>data</code>, the encoding of which is given in
        /// <code>input_encoding</code> and can be <code>&#39;utf8&#39;</code>, <code>&#39;ascii&#39;</code> or <code>&#39;binary&#39;</code>.
        /// Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>The <code>output_encoding</code> specifies the output format of the enciphered data,
        /// and can be <code>&#39;binary&#39;</code>, <code>&#39;base64&#39;</code> or <code>&#39;hex&#39;</code>. Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>Returns the enciphered contents, and can be called many times with new data as it is streamed.
        /// </p>
        /// </summary>
        public object update(object data){return null;}
        /// <summary>
        /// <p>Updates the cipher with <code>data</code>, the encoding of which is given in
        /// <code>input_encoding</code> and can be <code>&#39;utf8&#39;</code>, <code>&#39;ascii&#39;</code> or <code>&#39;binary&#39;</code>.
        /// Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>The <code>output_encoding</code> specifies the output format of the enciphered data,
        /// and can be <code>&#39;binary&#39;</code>, <code>&#39;base64&#39;</code> or <code>&#39;hex&#39;</code>. Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>Returns the enciphered contents, and can be called many times with new data as it is streamed.
        /// </p>
        /// </summary>
        public object update(object data, object output_encoding){return null;}
        /// <summary>
        /// <p>Updates the cipher with <code>data</code>, the encoding of which is given in
        /// <code>input_encoding</code> and can be <code>&#39;utf8&#39;</code>, <code>&#39;ascii&#39;</code> or <code>&#39;binary&#39;</code>.
        /// Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>The <code>output_encoding</code> specifies the output format of the enciphered data,
        /// and can be <code>&#39;binary&#39;</code>, <code>&#39;base64&#39;</code> or <code>&#39;hex&#39;</code>. Defaults to <code>&#39;binary&#39;</code>.
        /// </p>
        /// <p>Returns the enciphered contents, and can be called many times with new data as it is streamed.
        /// </p>
        /// </summary>
        public object update(object data, object input_encoding, object output_encoding){return null;}
    }
}

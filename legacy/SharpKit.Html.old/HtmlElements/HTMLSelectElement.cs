//Generated by a tool of Sebastian Loncar

namespace SharpKit.Html
{

using SharpKit.JavaScript;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields = true, OmitCasts = true)]
public partial class HtmlSelectElement : HtmlElement
{

	// HTMLSelectElement
	public bool autofocus {get; set; }
	public bool disabled {get; set; }
	public HtmlFormElement form {get; private set; }
	public bool multiple {get; set; }
	public JsString name {get; set; }
	public int size {get; set; }
	public JsString type {get; private set; }
	public HtmlOptionsCollection options {get; private set; }
	public int length {get; set; }
	[JsProperty(NativeIndexer = true)]
	public object this[int index] {get { return default(object); } }
	[JsProperty(NativeIndexer = true)]
	public object this[string name] {get { return default(object); } }
	public void add(HtmlElement element) {}
	public void add(HtmlElement element, HtmlElement before) {}
	public void add(HtmlElement element, int before) {}
	public void remove(int index) {}
	public HtmlCollection selectedOptions {get; private set; }
	public int selectedIndex {get; set; }
	public JsString value {get; set; }
	public bool willValidate {get; private set; }
	public ValidityState validity {get; private set; }
	public JsString validationMessage {get; private set; }
	public bool checkValidity() { return default(bool); }
	public void setCustomValidity(string error) {}
	public NodeList labels {get; private set; }
}

}
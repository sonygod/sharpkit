//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.grid.header
namespace Ext.grid.header
{
    #region Container
    /// <summary>
    /// Container which holds headers and is docked at the top or bottom of a TablePanel.
    /// The HeaderContainer drives resizing/moving/hiding of columns within the TableView.
    /// As headers are hidden, moved or resized the headercontainer is responsible for
    /// triggering changes within the view.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Container : Ext.container.Container, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Returns the number of grid columns descended from this HeaderContainer. ...
        /// </summary>
        public object getColumnCount(){return null;}
        /// <summary>
        /// Returns an array of menu CheckItems corresponding to all immediate children of the passed Container which have been c...
        /// </summary>
        public object getColumnMenu(object headerContainer){return null;}
        /// <summary>
        /// Gets the full width of all columns that are visible. ...
        /// </summary>
        public object getFullWidth(object flushCache){return null;}
        /// <summary>
        /// Returns an array of all columns which map to Store fields. ...
        /// </summary>
        public JsArray getGridColumns(bool refreshCache){return null;}
        /// <summary>
        /// Get a leaf level header by index regardless of what the nesting
        /// structure is. ...
        /// </summary>
        public object getHeaderAtIndex(object index){return null;}
        /// <summary>
        /// Get the index of a leaf level header regardless of what the nesting
        /// structure is. ...
        /// </summary>
        public object getHeaderIndex(object header){return null;}
        /// <summary>
        /// Returns an array of menu items to be placed into the shared menu
        /// across all headers in this header container. ...
        /// </summary>
        public JsArray getMenuItems(){return null;}
        /// <summary>
        /// Returns an array of the visible columns in the grid. ...
        /// </summary>
        public JsArray getVisibleGridColumns(bool refreshCache){return null;}
        /// <summary>
        /// Maps the record data to base it on the header id's. ...
        /// </summary>
        public object prepareData(object data, object rowIdx, object record, object view, object panel){return null;}
        public bool isGroupHeader{get;set;}
        public Container(Ext.grid.header.ContainerConfig config){}
        public Container(){}
    }
    #endregion
    #region ContainerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ContainerConfig : Ext.container.ContainerConfig
    {
        /// <summary>
        /// Width of the header if no width or flex is specified. ...
        /// </summary>
        public JsNumber defaultWidth{get;set;}
        /// <summary>
        /// Provides the default sortable state for all Headers within this HeaderContainer. ...
        /// </summary>
        public bool sortable{get;set;}
        /// <summary>
        /// HeaderContainer overrides the default weight of 0 for all docked items to 100. ...
        /// </summary>
        public JsNumber weight{get;set;}
    }
    #endregion
    #region ContainerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ContainerEvents : Ext.container.ContainerEvents
    {
        /// <summary>
        /// ...
        /// </summary>
        public static JsString columnhide="columnhide";
        /// <summary>
        /// ...
        /// </summary>
        public static JsString columnmove="columnmove";
        /// <summary>
        /// ...
        /// </summary>
        public static JsString columnresize="columnresize";
        /// <summary>
        /// ...
        /// </summary>
        public static JsString columnshow="columnshow";
        /// <summary>
        /// ...
        /// </summary>
        public static JsString headerclick="headerclick";
        /// <summary>
        /// ...
        /// </summary>
        public static JsString headertriggerclick="headertriggerclick";
        /// <summary>
        /// Fired immediately after the column header menu is created. ...
        /// </summary>
        public static JsString menucreate="menucreate";
        /// <summary>
        /// ...
        /// </summary>
        public static JsString sortchange="sortchange";
    }
    #endregion
}
#endregion

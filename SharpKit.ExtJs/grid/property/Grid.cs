//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.grid.property
namespace Ext.grid.property
{
    #region Grid
    /// <summary>
    /// A specialized grid implementation intended to mimic the traditional property grid as typically seen in
    /// development IDEs.  Each row in the grid represents a property of some object, and the data is stored
    /// as a set of name/value pairs in Properties.  Example usage: var grid = new Ext.grid.property.Grid({
    /// title: &#39;Properties Grid&#39;,
    /// width: 300,
    /// renderTo: &#39;grid-ct&#39;,
    /// source: {
    /// &quot;(name)&quot;: &quot;My Object&quot;,
    /// &quot;Created&quot;: Ext.Date.parse(&#39;10/15/2006&#39;, &#39;m/d/Y&#39;),
    /// &quot;Available&quot;: false,
    /// &quot;Version&quot;: .01,
    /// &quot;Description&quot;: &quot;A test object&quot;
    /// }
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Grid : Ext.grid.Panel, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Gets the source data object containing the property data. ...
        /// </summary>
        public object getSource(){return null;}
        /// <summary>
        /// Removes a property from the grid. ...
        /// </summary>
        public object removeProperty(JsString prop){return null;}
        /// <summary>
        /// Sets the value of a property. ...
        /// </summary>
        public object setProperty(JsString prop, object value, bool create){return null;}
        /// <summary>
        /// Sets the source data object containing the property data. ...
        /// </summary>
        public object setSource(object source){return null;}
        public Grid(GridConfig config){}
        public Grid(){}
    }
    #endregion
    #region GridConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class GridConfig : Ext.grid.PanelConfig
    {
        /// <summary>
        /// An object containing name/value pairs of custom editor type definitions that allow
        /// the grid to support additional typ...
        /// </summary>
        public object customEditors{get;set;}
        /// <summary>
        /// An object containing name/value pairs of custom renderer type definitions that allow
        /// the grid to support custom rende...
        /// </summary>
        public object customRenderers{get;set;}
        /// <summary>
        /// Optional. ...
        /// </summary>
        public JsNumber nameColumnWidth{get;set;}
        /// <summary>
        /// Optional. ...
        /// </summary>
        public JsString nameField{get;set;}
        /// <summary>
        /// An object containing custom property name/display name pairs. ...
        /// </summary>
        public object propertyNames{get;set;}
        public object source{get;set;}
        /// <summary>
        /// Optional. ...
        /// </summary>
        public JsString valueField{get;set;}
    }
    #endregion
    #region GridEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class GridEvents : Ext.grid.PanelEvents
    {
        /// <summary>
        /// Fires before a property value changes. ...
        /// </summary>
        public static JsString beforepropertychange="beforepropertychange";
        /// <summary>
        /// Fires after a property value has changed. ...
        /// </summary>
        public static JsString propertychange="propertychange";
    }
    #endregion
}
#endregion

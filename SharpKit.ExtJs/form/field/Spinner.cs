//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.form.field
namespace Ext.form.field
{
    #region Spinner
    /// <summary>
    /// A field with a pair of up/down spinner buttons. This class is not normally instantiated directly,
    /// instead it is subclassed and the onSpinUp and onSpinDown methods are implemented
    /// to handle when the buttons are clicked. A good example of this is the Ext.form.field.Number field
    /// which uses the spinner to increment and decrement the field&#39;s value by its step
    /// config value.
    /// For example:  Ext.define(&#39;Ext.ux.CustomSpinner&#39;, {
    /// extend: &#39;Ext.form.field.Spinner&#39;,
    /// alias: &#39;widget.customspinner&#39;,
    /// // override onSpinUp (using step isn&#39;t neccessary)
    /// onSpinUp: function() {
    /// var me = this;
    /// if (!me.readOnly) {
    /// var val = me.step; // set the default value to the step value
    /// if(me.getValue() !== &#39;&#39;) {
    /// val = parseInt(me.getValue().slice(0, -5)); // gets rid of &quot; Pack&quot;
    /// }
    /// me.setValue((val + me.step) + &#39; Pack&#39;);
    /// }
    /// },
    /// // override onSpinDown
    /// onSpinDown: function() {
    /// var me = this;
    /// if (!me.readOnly) {
    /// if(me.getValue() !== &#39;&#39;) {
    /// val = parseInt(me.getValue().slice(0, -5)); // gets rid of &quot; Pack&quot;
    /// }
    /// me.setValue((val - me.step) + &#39; Pack&#39;);
    /// }
    /// }
    /// });
    /// Ext.create(&#39;Ext.form.FormPanel&#39;, {
    /// title: &#39;Form with SpinnerField&#39;,
    /// bodyPadding: 5,
    /// width: 350,
    /// renderTo: Ext.getBody(),
    /// items:[{
    /// xtype: &#39;customspinner&#39;,
    /// fieldLabel: &#39;How Much Beer?&#39;,
    /// step: 6
    /// }]
    /// });
    /// By default, pressing the up and down arrow keys will also trigger the onSpinUp and onSpinDown methods;
    /// to prevent this, set keyNavEnabled = false.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Spinner : Trigger, Labelable, Ext.form.field.Field, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Sets whether the spinner down button is enabled. ...
        /// </summary>
        public object setSpinDownEnabled(bool enabled){return null;}
        /// <summary>
        /// Sets whether the spinner up button is enabled. ...
        /// </summary>
        public object setSpinUpEnabled(bool enabled){return null;}
        /// <summary>
        /// Triggers the spinner to step down; fires the spin and spindown events and calls the
        /// onSpinDown method. ...
        /// </summary>
        public object spinDown(){return null;}
        /// <summary>
        /// Triggers the spinner to step up; fires the spin and spinup events and calls the
        /// onSpinUp method. ...
        /// </summary>
        public object spinUp(){return null;}
        /// <summary>
        /// This method is called when the spinner down button is clicked, or when the down arrow key is pressed
        /// if keyNavEnabled...
        /// </summary>
        public object onSpinDown{get;set;}
        /// <summary>
        /// This method is called when the spinner up button is clicked, or when the up arrow key is pressed
        /// if keyNavEnabled is ...
        /// </summary>
        public object onSpinUp{get;set;}
        public Ext.core.Element spinDownEl{get;set;}
        public Ext.core.Element spinUpEl{get;set;}
        public Spinner(SpinnerConfig config){}
        public Spinner(){}
    }
    #endregion
    #region SpinnerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class SpinnerConfig : TriggerConfig
    {
        /// <summary>
        /// Specifies whether the up and down arrow keys should trigger spinning up and down. ...
        /// </summary>
        public bool keyNavEnabled{get;set;}
        /// <summary>
        /// Specifies whether the mouse wheel should trigger spinning up and down while the field has
        /// focus. ...
        /// </summary>
        public bool mouseWheelEnabled{get;set;}
        /// <summary>
        /// Whether a click repeater should be
        /// attached to the spinner buttons. ...
        /// </summary>
        public new bool repeatTriggerClick{get;set;}
        /// <summary>
        /// Specifies whether the down spinner button is enabled. ...
        /// </summary>
        public bool spinDownEnabled{get;set;}
        /// <summary>
        /// Specifies whether the up spinner button is enabled. ...
        /// </summary>
        public bool spinUpEnabled{get;set;}
    }
    #endregion
    #region SpinnerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class SpinnerEvents : TriggerEvents
    {
        /// <summary>
        /// Fires when the spinner is made to spin up or down. ...
        /// </summary>
        public static JsString spin="spin";
        /// <summary>
        /// Fires when the spinner is made to spin down. ...
        /// </summary>
        public static JsString spindown="spindown";
        /// <summary>
        /// Fires when the spinner is made to spin up. ...
        /// </summary>
        public static JsString spinup="spinup";
    }
    #endregion
}
#endregion

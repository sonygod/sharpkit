//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext
namespace Ext
{
    #region ComponentLoader
    /// <summary>
    /// This class is used to load content via Ajax into a Ext.Component. In general
    /// this class will not be instanced directly, rather a loader configuration will be passed to the
    /// constructor of the Ext.Component. HTML Renderer By default, the content loaded will be processed as raw html. The response text
    /// from the request is taken and added to the component. This can be used in
    /// conjunction with the scripts option to execute any inline scripts in
    /// the resulting content. Using this renderer has the same effect as passing the
    /// Ext.Component.html configuration option. Data Renderer This renderer allows content to be added by using JSON data and a Ext.XTemplate.
    /// The content received from the response is passed to the Ext.Component.update method.
    /// This content is run through the attached Ext.Component.tpl and the data is added to
    /// the Component. Using this renderer has the same effect as using the Ext.Component.data
    /// configuration in conjunction with a Ext.Component.tpl. Component Renderer This renderer can only be used with a Ext.container.Container and subclasses. It allows for
    /// Components to be loaded remotely into a Container. The response is expected to be a single/series of
    /// Ext.Component configuration objects. When the response is received, the data is decoded
    /// and then passed to Ext.container.Container.add. Using this renderer has the same effect as specifying
    /// the Ext.container.Container.items configuration on a Container. Custom Renderer A custom function can be passed to handle any other special case, see the renderer option. Example Usage new Ext.Component({
    /// tpl: &#39;{firstName} - {lastName}&#39;,
    /// loader: {
    /// url: &#39;myPage.php&#39;,
    /// renderer: &#39;data&#39;,
    /// params: {
    /// userId: 1
    /// }
    /// }
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class ComponentLoader : ElementLoader, Ext.util.Observable
    {
        /// <summary>
        /// Get the target of this loader. ...
        /// </summary>
        public Ext.Component setOptions(object active, object options){return null;}
        /// <summary>
        /// Set a {Ext.Component} as the target of this loader. ...
        /// </summary>
        public new object setTarget(object target){return null;}
        public ComponentLoader(ComponentLoaderConfig config){}
        public ComponentLoader(){}
    }
    #endregion
    #region ComponentLoaderConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ComponentLoaderConfig : ElementLoaderConfig
    {
        /// <summary>
        /// True or a Ext.LoadMask configuration to enable masking during loading. ...
        /// </summary>
        public new object loadMask{get;set;}
        /// <summary>
        /// The type of content that is to be loaded into, which can be one of 3 types:
        /// html : Loads raw html content, see Ext....
        /// </summary>
        public new object renderer{get;set;}
        /// <summary>
        /// True to parse any inline script tags in the response. ...
        /// </summary>
        public new bool scripts{get;set;}
        /// <summary>
        /// The target Ext.Component for the loader. ...
        /// </summary>
        public new object target{get;set;}
    }
    #endregion
    #region ComponentLoaderEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ComponentLoaderEvents : ElementLoaderEvents
    {
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.data
namespace Ext.data
{
    #region Errors
    /// <summary>
    /// Wraps a collection of validation error responses and provides convenient functions for
    /// accessing and errors for specific fields. Usually this class does not need to be instantiated directly - instances are instead created
    /// automatically when validate on a model instance: //validate some existing model instance - in this case it returned 2 failures messages
    /// var errors = myModel.validate();
    /// errors.isValid(); //false
    /// errors.length; //2
    /// errors.getByField(&#39;name&#39;);  // [{field: &#39;name&#39;,  message: &#39;must be present&#39;}]
    /// errors.getByField(&#39;title&#39;); // [{field: &#39;title&#39;, message: &#39;is too short&#39;}]
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Errors : Ext.util.MixedCollection, Ext.util.Sortable, Ext.util.Observable
    {
        /// <summary>
        /// Returns all of the errors for the given field ...
        /// </summary>
        public JsArray getByField(JsString fieldName){return null;}
        /// <summary>
        /// Returns true if there are no errors in the collection ...
        /// </summary>
        public bool isValid(){return false;}
        public Errors(ErrorsConfig config){}
        public Errors(){}
    }
    #endregion
    #region ErrorsConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ErrorsConfig : Ext.util.MixedCollectionConfig
    {
    }
    #endregion
    #region ErrorsEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ErrorsEvents : Ext.util.MixedCollectionEvents
    {
    }
    #endregion
}
#endregion

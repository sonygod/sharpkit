<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpKit.FireFox.Firebug</name>
    </assembly>
    <members>
        <member name="M:SharpKit.JavaScript.FirebugConsole.debug(System.Object,System.Object[])">
            <summary>
            Writes a message to the console, including a hyperlink to the line where it was called. 
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.info(System.Object,System.Object[])">
            <summary>
            Writes a message to the console with the visual "info" icon and color coding and a hyperlink to the line where it was called. 
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.warn(System.Object,System.Object[])">
            <summary>
            Writes a message to the console with the visual "warning" icon and color coding and a hyperlink to the line where it was called. 
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.error(System.Object,System.Object[])">
            <summary>
            Writes a message to the console with the visual "error" icon and color coding and a hyperlink to the line where it was called. 
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.assert(System.Object,System.Object[])">
            <summary>
            Tests that an expression is true. If not, it will write a message to the console and throw an exception. 
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.clear">
            <summary>
            Clears the console. 
            </summary>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.dir(System.Object)">
            <summary>
            Prints an interactive listing of all properties of the object. This looks identical to the view that you would see in the DOM tab. 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.dirxml(System.Object)">
            <summary>
            Prints the XML source tree of an HTML or XML element. This looks identical to the view that you would see in the HTML tab. You can click on any node to inspect it in the HTML tab. 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.trace">
            <summary>
            Prints an interactive stack trace of JavaScript execution at the point where it is called. The stack trace details the functions on the stack, as well as the values that were passed as arguments to each function. You can click each function to take you to its source in the Script tab, and click each argument value to inspect it in the DOM or HTML tabs. 
            </summary>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.group(System.Object,System.Object[])">
            <summary>
            Writes a message to the console and opens a nested block to indent all future messages sent to the console. Call console.groupEnd() to close the block. 
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.groupCollapsed(System.Object,System.Object[])">
            <summary>
            Like console.group(), but the block is initially collapsed.
            </summary>
            <param name="obj"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.groupEnd">
            <summary>
            Closes the most recently opened block created by a call to console.group() or console.groupCollapsed()
            </summary>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.time(SharpKit.JavaScript.JsString)">
            <summary>
            Creates a new timer under the given name. Call console.timeEnd(name) with the same name to stop the timer and print the time elapsed.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.timeEnd(SharpKit.JavaScript.JsString)">
            <summary>
            Stops a timer created by a call to console.time(name) and writes the time elapsed.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.profile(SharpKit.JavaScript.JsString)">
            <summary>
            Turns on the JavaScript profiler. The optional argument title would contain the text to be printed in the header of the profile report.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.profileEnd(SharpKit.JavaScript.JsString)">
            <summary>
            Turns off the JavaScript profiler and prints its report.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.count(SharpKit.JavaScript.JsString)">
            <summary>
            Writes the number of times that the line of code where count was called was executed. The optional argument title will print a message in addition to the number of the count.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.exception(System.Object,System.Object[])">
            <summary>
            Prints an error message together with an interactive stack trace of JavaScript execution at the point where the exception occurred.
            </summary>
            <param name="errorObject"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpKit.JavaScript.FirebugConsole.table(System.Object,System.Object[])">
            <summary>
            Prints an error message together with an interactive stack trace of JavaScript execution at the point where the exception occurred.
            </summary>
            <param name="data"></param>
            <param name="columns"></param>
        </member>
        <member name="T:AssemblyDoc">
            <summary>
            <para>SharpKit interface for Firebug Console logging API. 
            This interface was contributed by <a href="http://www.any-techs.co.il" target="_blank">Any Technologies</a></para>
            Having a fancy JavaScript debugger is great, but sometimes the fastest way to find bugs is just to dump as much information to the console as you can. Firebug gives you a set of powerful logging functions that you can call from your own web pages.
            </summary>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpKit.Google.Chrome</name>
    </assembly>
    <members>
        <member name="T:SharpKit.Google.Chrome.alarms">
            <summary>
            Warning: This API is still under development. It is only available for Chrome users on the dev early release channel. Learn more.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.clear(SharpKit.JavaScript.JsString)">
            <summary>
            Clears the alarm with the given name.
            </summary>
            <param name="name">The name of the alarm to clear. Defaults to the empty string.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.clear">
            <summary>
            Clears the alarm with the given name.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.clearAll">
            <summary>
            Clears all alarms.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.create(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.AlarmCreateInfo)">
            <summary>
            Creates an alarm. Near the time(s) specified by 'alarmInfo', the onAlarm event is fired. If there is another alarm with the same name (or no name if none is specified),
            it will be cancelled and replaced by this alarm. Note that granularity is not guaranteed: times are more of a hint to the browser. For performance reasons, alarms may be delayed an arbitrary amount of time before firing. string. be specified by either |when| or |delayInMinutes| (but not both). If minutes after the initial event.
            If neither |when| or |delayInMinutes| is set for a repeating alarm, |periodInMinutes| is used as the default for |delayInMinutes|.
            </summary>
            <param name="name">Optional name to identify this alarm. Defaults to the empty</param>
            <param name="alarmInfo">Describes when the alarm should fire. The initial time must</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.create(SharpKit.Google.Chrome.AlarmCreateInfo)">
            <summary>
            Creates an alarm. Near the time(s) specified by 'alarmInfo', the onAlarm event is fired. If there is another alarm with the same name (or no name if none is specified),
            it will be cancelled and replaced by this alarm. Note that granularity is not guaranteed: times are more of a hint to the browser. For performance reasons, alarms may be delayed an arbitrary amount of time before firing. string. be specified by either |when| or |delayInMinutes| (but not both). If minutes after the initial event.
            If neither |when| or |delayInMinutes| is set for a repeating alarm, |periodInMinutes| is used as the default for |delayInMinutes|.
            </summary>
            <param name="alarmInfo">Describes when the alarm should fire. The initial time must</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.get(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.Alarm})">
            <summary>
            Retrieves details about the specified alarm.
            </summary>
            <param name="name">The name of the alarm to get. Defaults to the empty string.</param>
            <param name="AlarmCallback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.get(SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.Alarm})">
            <summary>
            Retrieves details about the specified alarm.
            </summary>
            <param name="AlarmCallback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.alarms.getAll(SharpKit.JavaScript.JsAction{SharpKit.JavaScript.JsArray{SharpKit.Google.Chrome.Alarm}})">
            <summary>
            Gets an array of all the alarms.
            </summary>
            <param name="AlarmListCallback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.alarms.onAlarm">
            <summary>
            Fired when an alarm has elapsed. Useful for transient background pages.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Alarm.name">
            <summary>
            Name of this alarm.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Alarm.periodInMinutes">
            <summary>
            ( optional )
            If not null, the alarm is a repeating alarm and will fire again in 'periodInMinutes' minutes.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Alarm.scheduledTime">
            <summary>
            Time at which this alarm was scheduled to fire, in milliseconds past the epoch (e.g. Date.now() + n).
            For performance reasons, the alarm may have been delayed an arbitrary amount beyond this.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AlarmCreateInfo.delayInMinutes">
            <summary>
            ( optional )
            Length of time in minutes after which the onAlarm event should fire. TODO: need minimum=0
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AlarmCreateInfo.periodInMinutes">
            <summary>
            ( optional )
            If set, the onAlarm event should fire every |periodInMinutes| minutes after the initial event specified by |when| or |delayInMinutes|.
            If not set, the alarm will only fire once. TODO: need minimum=0
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AlarmCreateInfo.when">
            <summary>
            ( optional )
            Time at which the alarm should fire, in milliseconds past the epoch (e.g. Date.now() + n).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.bookmarks">
            <summary>
            Use the chrome.bookmarks module to create, organize, and otherwise manipulate bookmarks. Also see Override Pages, which you can use to create a custom Bookmark Manager page.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.create(SharpKit.Google.Chrome.Bookmark,SharpKit.JavaScript.JsAction)">
            <summary>
            Creates a bookmark or folder under the specified parentId. If url is NULL or missing, it will be a folder.
            </summary>
            <param name="bookmark"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.get(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the specified BookmarkTreeNode(s).
            </summary>
            <param name="idOrIdList">A single string-valued id, or an array of string-valued ids</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.get(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString},SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the specified BookmarkTreeNode(s).
            </summary>
            <param name="idOrIdList">A single string-valued id, or an array of string-valued ids</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.getChildren(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the children of the specified BookmarkTreeNode id.
            </summary>
            <param name="id"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.getRecent(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the recently added bookmarks.
            </summary>
            <param name="numberOfItems">The maximum number of items to return.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.getSubTree(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves part of the Bookmarks hierarchy, starting at the specified node.
            </summary>
            <param name="id">The ID of the root of the subtree to retrieve.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.getTree(SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the entire Bookmarks hierarchy.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.move(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.BookmarkMoveDestination,SharpKit.JavaScript.JsAction)">
            <summary>
            Moves the specified BookmarkTreeNode to the provided location.
            </summary>
            <param name="id"></param>
            <param name="destination"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.move(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.BookmarkMoveDestination)">
            <summary>
            Moves the specified BookmarkTreeNode to the provided location.
            </summary>
            <param name="id"></param>
            <param name="destination"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.remove(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes a bookmark or an empty bookmark folder.
            </summary>
            <param name="id"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.remove(SharpKit.JavaScript.JsString)">
            <summary>
            Removes a bookmark or an empty bookmark folder.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.removeTree(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Recursively removes a bookmark folder.
            </summary>
            <param name="id"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.removeTree(SharpKit.JavaScript.JsString)">
            <summary>
            Recursively removes a bookmark folder.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.search(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Searches for BookmarkTreeNodes matching the given query.
            </summary>
            <param name="query"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.bookmarks.update(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.BookmarkUpdateChanges,SharpKit.JavaScript.JsAction)">
            <summary>
            Updates the properties of a bookmark or folder. Specify only the properties that you want to change;
            unspecified properties will be left unchanged. Note: Currently, only 'title' and 'url' are supported.
            </summary>
            <param name="id"></param>
            <param name="changes"></param>
            <param name="callback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onChanged">
            <summary>
            Fired when a bookmark or folder changes. Note: Currently, only title and url changes trigger this.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onChildrenReordered">
            <summary>
            Fired when the children of a folder have changed their order due to the order being sorted in the UI. This is not called as a result of a move().
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onCreated">
            <summary>
            Fired when a bookmark or folder is created.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onImportBegan">
            <summary>
            Fired when a bookmark import session is begun.
            Expensive observers should ignore handleCreated updates until onImportEnded is fired. Observers should still handle other notifications immediately.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onImportEnded">
            <summary>
            Fired when a bookmark import session is ended.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onMoved">
            <summary>
            Fired when a bookmark or folder is moved to a different parent folder.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.bookmarks.onRemoved">
            <summary>
            Fired when a bookmark or folder is removed. When a folder is removed recursively, a single notification is fired for the folder, and none for its contents.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Bookmark.parentId">
            <summary>
            ( optional )
            Defaults to the Other Bookmarks folder.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Bookmark.index">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Bookmark.title">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Bookmark.url">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkMoveDestination.parentId">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkMoveDestination.index">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkUpdateChanges.title">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkUpdateChanges.url">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkChangeInfoDestination.url">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.id">
            <summary>
            The unique identifier for the node. IDs are unique within the current profile, and they remain valid even after the browser is restarted.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.parentId">
            <summary>
            ( optional ) The id of the parent folder. Omitted for the root node.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.index">
            <summary>
             ( optional ) The 0-based position of this node within its parent folder.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.url">
            <summary>
            ( optional )The URL navigated to when a user clicks the bookmark. Omitted for folders.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.title">
            <summary>
            The text displayed for the node.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.dateAdded">
            <summary>
            ( optional ) When this node was created, in milliseconds since the epoch (new Date(dateAdded)).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.dateGroupModified">
            <summary>
            ( optional ) When the contents of this folder last changed, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BookmarkTreeNode.children">
            <summary>
            ( optional array of bookmarks.BookmarkTreeNode ) An ordered list of children of this node.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.browserAction">
            <summary>
            Use browser actions to put icons in the main Google Chrome toolbar, to the right of the address bar.
            In addition to its icon, a browser action can also have a tooltip, a badge, and a popup.
            For the best visual impact, follow these guidelines:
            Do use browser actions for features that make sense on most pages.
            Don't use browser actions for features that make sense for only a few pages. Use page actions instead.
            Do use big, colorful icons that make the most of the 19x19-pixel space. Browser action icons should seem a little bigger and heavier than page action icons.
            Don't attempt to mimic Google Chrome's monochrome "wrench" icon. That doesn't work well with themes, and anyway, extensions should stand out a little.
            Do use alpha transparency to add soft edges to your icon. Because many people use themes, your icon should look nice on a variety of background colors.
            Don't constantly animate your icon. That's just annoying.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.getBadgeBackgroundColor(SharpKit.Google.Chrome.BrowserActionBadgeBackgroundColorDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the background color of the browser action.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.getBadgeText(SharpKit.Google.Chrome.BrowserActionBadgeTextDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the badge text of the browser action. If no tab is specified, the non-tab-specific badge text is returned.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.getPopup(SharpKit.Google.Chrome.BrowserActionPopupDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the html document set as the popup for this browser action.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.getTitle(SharpKit.Google.Chrome.BrowserActionTitleDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the title of the browser action.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.setBadgeBackgroundColor(SharpKit.Google.Chrome.BrowserActionBadgeBackgroundColorDetails)">
            <summary>
            Sets the background color for the badge.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.setBadgeText(SharpKit.Google.Chrome.BrowserActionBadgeTextDetails)">
            <summary>
            Sets the badge text for the browser action. The badge is displayed on top of the icon.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.setIcon(SharpKit.Google.Chrome.BrowserActionSetIconDetails)">
            <summary>
            Sets the icon for the browser action. The icon can be specified either as the path to an image file or as the pixel data from a canvas element.
            Either the path or the imageData property must be specified.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.setPopup(SharpKit.Google.Chrome.BrowserActionPopupDetails)">
            <summary>
            Sets the html document to be opened as a popup when the user clicks on the browser action's icon.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browserAction.setTitle(SharpKit.Google.Chrome.BrowserActionTitleDetails)">
            <summary>
            Sets the title of the browser action. This shows up in the tooltip.
            </summary>
            <param name="details"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.browserAction.onClicked">
            <summary>
            Fired when a browser action icon is clicked. This event will not fire if the browser action has a popup.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionBadgeBackgroundColorDetails.colorString">
            <summary>
            This property is available for setter operations only.
            An array of four integers in the range [0,255] that make up the RGBA color of the badge.
            For example, opaque red is [255, 0, 0, 255]. Can also be a string with a CSS value, with opaque red being #FF0000 or #F00.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionBadgeBackgroundColorDetails.color">
            <summary>
            This property is available for setter operations only.
            An array of four integers in the range [0,255] that make up the RGBA color of the badge.
            For example, opaque red is [255, 0, 0, 255]. Can also be a string with a CSS value, with opaque red being #FF0000 or #F00.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionBadgeBackgroundColorDetails.tabId">
            <summary>
            When using the getter operations: Specify the tab to get the badge background color from.
            If no tab is specified, the non-tab-specific badge background color is returned.
            When using the setter operations: Limits the change to when a particular tab is selected. Automatically resets when the tab is closed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionBadgeTextDetails.text">
            <summary>
            This property is available for setter operations only.
            Any number of characters can be passed, but only about four can fit in the space.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionBadgeTextDetails.tabId">
            <summary>
            When using the getter operations: Specify the tab to get the badge text from. If no tab is specified, the non-tab-specific badge text is returned.
            When using the setter operations: Limits the change to when a particular tab is selected. Automatically resets when the tab is closed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionPopupDetails.popup">
            <summary>
            This property is available for setter operations only.
            The html file to show in a popup. If set to the empty string (''), no popup is shown.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionPopupDetails.tabId">
            <summary>
            When using the getter operations: Specify the tab to get the popup from. If no tab is specified, the non-tab-specific popup is returned.
            When using the setter operations: Limits the change to when a particular tab is selected. Automatically resets when the tab is closed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionTitleDetails.title">
            <summary>
            This property is available for setter operations only.
            The string the browser action should display when moused over.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionTitleDetails.tabId">
            <summary>
            When using the getter operations: Specify the tab to get the title from. If no tab is specified, the non-tab-specific title is returned.
            When using the setter operations: Limits the change to when a particular tab is selected. Automatically resets when the tab is closed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionSetIconDetails.imageData">
            <summary>
            ( optional )
            Pixel data for an image. Must be an ImageData object (for example, from a canvas element).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionSetIconDetails.path">
            <summary>
            ( optional )
            Relative path to an image in the extension to show in the browser action.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionSetIconDetails.tabId">
            <summary>
            ( optional )
            Limits the change to when a particular tab is selected. Automatically resets when the tab is closed.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.browsingData">
            <summary>
            Use the chrome.browsingData module to remove browsing data from a user's local profile.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.remove(SharpKit.Google.Chrome.RemovalOptions,SharpKit.Google.Chrome.BrowsingDataDataToRemove,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears various types of browsing data stored in a user's profile.
            </summary>
            <param name="options"></param>
            <param name="dataToRemove"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.remove(SharpKit.Google.Chrome.RemovalOptions,SharpKit.Google.Chrome.BrowsingDataDataToRemove)">
            <summary>
            Clears various types of browsing data stored in a user's profile.
            </summary>
            <param name="options"></param>
            <param name="dataToRemove"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeAppcache(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears websites' appcache data.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional )Called when websites' appcache data has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeAppcache(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears websites' appcache data.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeCache(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the browser's cache.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional )Called when the browser's cache has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeCache(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears the browser's cache.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeCookies(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the browser's cookies modified within a particular timeframe.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when the browser's cookies have been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeCookies(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears the browser's cookies modified within a particular timeframe.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeDownloads(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the browser's list of downloaded files (not the downloaded files themselves).
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when the browser's list of downloaded files has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeDownloads(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears the browser's list of downloaded files (not the downloaded files themselves).
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeFileSystems(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears websites' file system data.
            </summary>
            <param name="options"></param>
            <param name="callback"> ( optional ) Called when websites' file systems have been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeFileSystems(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears websites' file system data.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeFormData(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the browser's stored form data (autofill).
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when the browser's form data has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeFormData(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears the browser's stored form data (autofill).
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeHistory(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the browser's history.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when the browser's history has cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeHistory(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears the browser's history.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeIndexedDB(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears websites' IndexedDB data.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when websites' IndexedDB data has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeIndexedDB(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears websites' IndexedDB data.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeLocalStorage(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears websites' local storage data.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when websites' local storage has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeLocalStorage(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears websites' local storage data.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removePasswords(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the browser's stored passwords.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when the browser's passwords have been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removePasswords(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears the browser's stored passwords.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removePluginData(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears plugins' data.
            </summary>
            <param name="options"></param>
            <param name="callback">( optional ) Called when plugins' data has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removePluginData(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears plugins' data.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeWebSQL(SharpKit.Google.Chrome.RemovalOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears websites' WebSQL data.
            </summary>
            <param name="options"></param>
            <param name="callback"> ( optional ) Called when websites' WebSQL databases have been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.browsingData.removeWebSQL(SharpKit.Google.Chrome.RemovalOptions)">
            <summary>
            Clears websites' WebSQL data.
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.appcache">
            <summary>
            ( optional )
            Should websites' appcaches be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.cache">
            <summary>
            ( optional )
            Should the browser's cache be cleared? Note: this clears the entire cache: it is not limited to the range you specify.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.cookies">
            <summary>
            ( optional )
            Should the browser's cookies be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.downloads">
            <summary>
            ( optional )
            Should the browser's download list be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.fileSystems">
            <summary>
            ( optional )
            Should websites' file systems be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.formData">
            <summary>
            ( optional )
            Should the browser's stored form data be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.history">
            <summary>
            ( optional )
            Should the browser's history be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.indexedDB">
            <summary>
            ( optional )
            Should websites' IndexedDB data be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.localStorage">
            <summary>
            ( optional )
            Should websites' local storage data be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.serverBoundCertificates">
            <summary>
            ( optional )
            Should server-bound certificates be removed?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.pluginData">
            <summary>
            ( optional )
            Should plugins' data be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.passwords">
            <summary>
            ( optional )
            Should the stored passwords be cleared?
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowsingDataDataToRemove.webSQL">
            <summary>
            ( optional )
            Should websites' WebSQL data be cleared?
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RemovalOptions">
            <summary>
            Options that determine exactly what data will be removed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemovalOptions.since">
            <summary>
            Remove data accumulated on or after this date, represented in milliseconds since the epoch(accessible via the getTime method of the JavaScript Date object).
            If absent, defaults to 0 (which would remove all browsing data).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemovalOptions.originTypes">
            <summary>
            An object whose properties specify which origin types ought to be cleared. If this object isn't specified, it defaults to clearing only "unprotected" origins.
            Please ensure that you really want to remove application data before adding 'protectedWeb' or 'extensions'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemovalOptionsOriginTypes.unprotectedWeb">
            <summary>
            ( optional )Normal websites.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemovalOptionsOriginTypes.protectedWeb">
            <summary>
            ( optional )Websites that have been installed as hosted applications (be careful!).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemovalOptionsOriginTypes.extension">
            <summary>
            ( optional ) Extensions and packaged applications a user has installed (be _really_ careful!).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.contentSettings">
            <summary>
            The content settings module allows you to change settings that control whether websites can use features such as cookies, JavaScript, and plug-ins.
            More generally speaking, content settings allow you to customize Chrome's behavior on a per-site basis instead of globally.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.contentSettings.cookies">
            <summary>
            Whether to allow cookies and other local data to be set by websites. One of
            allow: Accept cookies,
            block: Block cookies,
            session_only: Accept cookies only for the current session. 
            Default is allow.
            The primary URL is the URL representing the cookie origin. The secondary URL is the URL of the top-level frame.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.contentSettings.images">
            <summary>
            Whether to show images. One of
            allow: Show images,
            block: Don't show images. 
            Default is allow.
            The primary URL is the main-frame URL. The secondary URL is the URL of the image.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.contentSettings.javascript">
            <summary>
            Whether to run JavaScript. One of
            allow: Run JavaScript,
            block: Don't run JavaScript. 
            Default is allow.
            The primary URL is the main-frame URL. The secondary URL is not used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.contentSettings.plugins">
            <summary>
            Whether to run plug-ins. One of
            allow: Run plug-ins automatically,
            block: Don't run plug-ins automatically. 
            Default is allow.
            The primary URL is the main-frame URL. The secondary URL is not used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.contentSettings.popups">
            <summary>
            Whether to allow sites to show pop-ups. One of
            allow: Allow sites to show pop-ups,
            block: Don't allow sites to show pop-ups. 
            Default is block.
            The primary URL is the main-frame URL. The secondary URL is not used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.contentSettings.notifications">
            <summary>
            Whether to allow sites to show desktop notifications. One of
            allow: Allow sites to show desktop notifications,
            block: Don't allow sites to show desktop notifications,
            ask: Ask when a site wants to show desktop notifications. 
            Default is ask.
            The primary URL is the main-frame URL. The secondary URL is not used.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.ContentSetting.clear(SharpKit.Google.Chrome.ContentSettingClearDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Clear all content setting rules set by this extension.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ContentSetting.clear(SharpKit.Google.Chrome.ContentSettingClearDetails)">
            <summary>
            Clear all content setting rules set by this extension.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ContentSetting.get(SharpKit.Google.Chrome.ContentSettingGetDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the current content setting for a given pair of URLs.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ContentSetting.set(SharpKit.Google.Chrome.ContentSettingSetDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Applies a new content setting rule.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ContentSetting.set(SharpKit.Google.Chrome.ContentSettingSetDetails)">
            <summary>
            Applies a new content setting rule.
            </summary>
            <param name="details"></param>
        </member>
        <member name="T:SharpKit.Google.Chrome.ResourceIdentifier">
            <summary>
            The only content type using resource identifiers is plugins. For more information, see Resource Identifiers.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ResourceIdentifier.id">
            <summary>
            The resource identifier for the given content type.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ResourceIdentifier.description">
            <summary>
            ( optional )A human readable description of the resource.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingClearDetails.scope">
            <summary>
            ( optional enumerated string ["regular", "incognito_session_only"] ). Where to set the setting (default: regular). 
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ContentSettingScopeType.regular">
            <summary>
            setting for regular profile (which is inherited by the incognito profile if not overridden elsewhere),
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ContentSettingScopeType.incognito_session_only">
            <summary>
            setting for incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular settings).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingGetDetails.primaryUrl">
            <summary>
            The primary URL for which the content setting should be retrieved. Note that the meaning of a primary URL depends on the content type.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingGetDetails.secondaryUrl">
            <summary>
            ( optional ) The secondary URL for which the content setting should be retrieved. Defaults to the primary URL.
            Note that the meaning of a secondary URL depends on the content type, and not all content types use secondary URLs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingGetDetails.resourceIdentifier">
            <summary>
             ( optional ) A more specific identifier of the type of content for which the settings should be retrieved.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingGetDetails.incognito">
            <summary>
            ( optional ) Whether to check the content settings for an incognito session. (default false)
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingSetDetails.primaryPattern">
            <summary>
            The pattern for the primary URL. For details on the format of a pattern, see Content Setting Patterns.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingSetDetails.secondaryPattern">
            <summary>
            ( optional ) The pattern for the secondary URL. Defaults to matching all URLs. For details on the format of a pattern, see Content Setting Patterns.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingSetDetails.resourceIdentifier">
            <summary>
             ( optional ) The resource identifier for the content type.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingSetDetails.setting">
            <summary>
            The setting applied by this rule. See the description of the individual ContentSetting objects for the possible values.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentSettingSetDetails.scope">
            <summary>
            ( optional enumerated string ["regular", "incognito_session_only"] ).Where to clear the setting (default: regular). 
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.create(SharpKit.Google.Chrome.CreateProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Creates a new context menu item. Note that if an error occurs during creation,
            you may not find out until the creation callback fires (the details will be in chrome.extension.lastError).
            </summary>
            <param name="createProperties"></param>
            <param name="callback">( optional )Called when the item has been created in the browser.
            If there were any problems creating the item, details will be available in chrome.extension.lastError.</param>
            <returns></returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.create(SharpKit.Google.Chrome.CreateProperties)">
            <summary>
            Creates a new context menu item. Note that if an error occurs during creation,
            you may not find out until the creation callback fires (the details will be in chrome.extension.lastError).
            </summary>
            <param name="createProperties"></param>
            <returns></returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.remove(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes a context menu item.
            </summary>
            <param name="menuItemId">The ID of the context menu item to remove.</param>
            <param name="callback">( optional function ) Called when the context menu has been removed.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.remove(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes a context menu item.
            </summary>
            <param name="menuItemId">The ID of the context menu item to remove.</param>
            <param name="callback">( optional function ) Called when the context menu has been removed.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.remove(SharpKit.JavaScript.JsNumber)">
            <summary>
            Removes a context menu item.
            </summary>
            <param name="menuItemId">The ID of the context menu item to remove.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.remove(SharpKit.JavaScript.JsString)">
            <summary>
            Removes a context menu item.
            </summary>
            <param name="menuItemId">The ID of the context menu item to remove.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.removeAll(SharpKit.JavaScript.JsAction)">
            <summary>
            Removes all context menu items added by this extension.
            </summary>
            <param name="callback">( optional )Called when removal is complete.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.removeAll">
            <summary>
            Removes all context menu items added by this extension.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.update(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.UpdateProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Updates a previously created context menu item.
            </summary>
            <param name="id">The ID of the item to update</param>
            <param name="updateProperties">The properties to update. Accepts the same values as the create function.</param>
            <param name="callback"> ( optional ) Called when the context menu has been updated.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.update(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.UpdateProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Updates a previously created context menu item.
            </summary>
            <param name="id">The ID of the item to update</param>
            <param name="updateProperties">The properties to update. Accepts the same values as the create function.</param>
            <param name="callback"> ( optional ) Called when the context menu has been updated.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.update(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.UpdateProperties)">
            <summary>
            Updates a previously created context menu item.
            </summary>
            <param name="id">The ID of the item to update</param>
            <param name="updateProperties">The properties to update. Accepts the same values as the create function.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.contextMenus.update(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.UpdateProperties)">
            <summary>
            Updates a previously created context menu item.
            </summary>
            <param name="id">The ID of the item to update</param>
            <param name="updateProperties">The properties to update. Accepts the same values as the create function.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.contextMenus.onClicked">
            <summary>
            Fired when a context menu item is clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.type">
            <summary>
             ( optional enumerated string ["normal", "checkbox", "radio", "separator"] )
             The type of menu item. Defaults to 'normal' if not specified.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.id">
            <summary>
            ( optional )
            The unique ID to assign to this item. Mandatory for event pages. Cannot be the same as another ID for this extension.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.title">
            <summary>
            ( optional )
            The text to be displayed in the item; this is required unless type is 'separator'. When the context is 'selection', you can use %s within the string to show the selected text.
            For example, if this parameter's value is "Translate '%s' to Pig Latin" and the user selects the word "cool",the context menu item for the selection is "Translate 'cool' to Pig Latin".
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.checked">
            <summary>
            ( optional )
            The initial state of a checkbox or radio item: true for selected and false for unselected. Only one radio item can be selected at a time in a given group of radio items.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.contexts">
            <summary>
            ( optional array of string ["all", "page", "frame", "selection", "link", "editable", "image", "video", "audio"] )
            List of contexts this menu item will appear in. Defaults to ['page'] if not specified.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.onclick">
            <summary>
            ( optional )
            A function that will be called back when the menu item is clicked.
            Event pages cannot use this; instead, they should register a listener for chrome.contextMenus.onClicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.parentIdString">
            <summary>
            ( optional )
            The ID of a parent menu item; this makes the item a child of a previously added item.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.parentId">
            <summary>
            ( optional )
            The ID of a parent menu item; this makes the item a child of a previously added item.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.documentUrlPatterns">
            <summary>
            ( optional )
            Lets you restrict the item to apply only to documents whose URL matches one of the given patterns.
            (This applies to frames as well.) For details on the format of a pattern, see Match Patterns.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.targetUrlPatterns">
            <summary>
            ( optional )
            Similar to documentUrlPatterns, but lets you filter based on the src attribute of img/audio/video tags and the href of anchor tags.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CreateProperties.enabled">
            <summary>
            ( optional )
            Whether this context menu item is enabled or disabled. Defaults to true.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.OnClickData">
            <summary>
            Information sent when a context menu item is clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.menuItemIdString">
            <summary>
            The ID of the menu item that was clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.menuItemId">
            <summary>
            The ID of the menu item that was clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.parentMenuItemIdString">
            <summary>
            ( optional ) The parent ID, if any, for the item clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.parentMenuItemId">
            <summary>
            ( optional ) The parent ID, if any, for the item clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.mediaType">
            <summary>
            ( optional ) One of 'image', 'video', or 'audio' if the context menu was activated on one of these types of elements.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.linkUrl">
            <summary>
            ( optional ) If the element is a link, the URL it points to.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.srcUrl">
            <summary>
            ( optional ) Will be present for elements with a 'src' URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.pageUrl">
            <summary>
            The URL of the page where the menu item was clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.frameUrl">
            <summary>
            ( optional ) The URL of the frame of the element where the context menu was clicked, if it was in a frame.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.selectionText">
            <summary>
            ( optional ) The text for the context selection, if any.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.editable">
            <summary>
            ( optional ) A flag indicating whether the element is editable (text input, textarea, etc.).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.wasChecked">
            <summary>
            ( optional ) A flag indicating the state of a checkbox or radio item before it was clicked.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OnClickData.checked">
            <summary>
            ( optional ) A flag indicating the state of a checkbox or radio item after it is clicked.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.get(SharpKit.Google.Chrome.CookiesGetDetails,SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.Cookie})">
            <summary>
            Retrieves information about a single cookie. If more than one cookie of the same name exists for the given URL, the one with the longest path will be returned.
            For cookies with the same path length, the cookie with the earliest creation time will be returned.
            </summary>
            <param name="details">Details to identify the cookie being retrieved.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.getAll(SharpKit.Google.Chrome.CookiesGetAllDetails,SharpKit.JavaScript.JsAction{SharpKit.JavaScript.JsArray{SharpKit.Google.Chrome.Cookie}})">
            <summary>
            Retrieves all cookies from a single cookie store that match the given information. The cookies returned will be sorted, with those with the longest path first.
            If multiple cookies have the same path length, those with the earliest creation time will be first.
            </summary>
            <param name="details">Information to filter the cookies being retrieved.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.getAllCookieStores(SharpKit.JavaScript.JsAction{SharpKit.JavaScript.JsArray{SharpKit.Google.Chrome.CookieStore}})">
            <summary>
            Lists all existing cookie stores.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.remove(SharpKit.Google.Chrome.CookiesRemoveDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Deletes a cookie by name.
            </summary>
            <param name="details">Information to identify the cookie to remove.</param>
            <param name="callback">( optional ) This parameter was added in version 11.0.674.0. You must omit this parameter in earlier versions, and you may omit it in any version.
            If you require this parameter, the manifest key minimum_chrome_version can ensure that your extension won't be run in an earlier browser version.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.remove(SharpKit.Google.Chrome.CookiesRemoveDetails)">
            <summary>
            Deletes a cookie by name.
            </summary>
            <param name="details">Information to identify the cookie to remove.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.set(SharpKit.Google.Chrome.CookiesSetAllDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Sets a cookie with the given cookie data; may overwrite equivalent cookies if they exist.
            </summary>
            <param name="details">Details about the cookie being set.</param>
            <param name="callback"> ( optional ) This parameter was added in version 11.0.674.0. You must omit this parameter in earlier versions, and you may omit it in any version.
            If you require this parameter, the manifest key minimum_chrome_version can ensure that your extension won't be run in an earlier browser version.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.cookies.set(SharpKit.Google.Chrome.CookiesSetAllDetails)">
            <summary>
            Sets a cookie with the given cookie data; may overwrite equivalent cookies if they exist.
            </summary>
            <param name="details">Details about the cookie being set.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetDetails.url">
            <summary>
            The URL with which the cookie to retrieve is associated. This argument may be a full URL, in which case any data following the URL path (e.g. the query string) is simply ignored.
            If host permissions for this URL are not specified in the manifest file, the API call will fail.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetDetails.name">
            <summary>
            The name of the cookie to retrieve.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetDetails.storeId">
            <summary>
            ( optional ) The ID of the cookie store in which to look for the cookie. By default, the current execution context's cookie store will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.url">
            <summary>
            ( optional ) Restricts the retrieved cookies to those that would match the given URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.name">
            <summary>
            ( optional ) Filters the cookies by name.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.domain">
            <summary>
            ( optional ) Restricts the retrieved cookies to those whose domains match or are subdomains of this one.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.path">
            <summary>
            ( optional ) Restricts the retrieved cookies to those whose path exactly matches this string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.secure">
            <summary>
            ( optional ) Filters the cookies by their Secure property.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.session">
            <summary>
            ( optional ) Filters out session vs. persistent cookies.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesGetAllDetails.storeId">
            <summary>
            ( optional ) The cookie store to retrieve cookies from. If omitted, the current execution context's cookie store will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesRemoveDetails.url">
            <summary>
            The URL associated with the cookie. If host permissions for this URL are not specified in the manifest file, the API call will fail.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesRemoveDetails.name">
            <summary>
            The name of the cookie to remove.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesRemoveDetails.storeId">
            <summary>
            ( optional ) The ID of the cookie store to look in for the cookie. If unspecified, the cookie is looked for by default in the current execution context's cookie store.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.url">
            <summary>
            ( optional ) The request-URI to associate with the setting of the cookie. This value can affect the default domain and path values of the created cookie.
            If host permissions for this URL are not specified in the manifest file, the API call will fail.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.name">
            <summary>
            ( optional ) The name of the cookie. Empty by default if omitted.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.value">
            <summary>
            ( optional ) The value of the cookie. Empty by default if omitted.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.domain">
            <summary>
            ( optional ) The domain of the cookie. If omitted, the cookie becomes a host-only cookie.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.path">
            <summary>
            ( optional ) The path of the cookie. Defaults to the path portion of the url parameter.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.secure">
            <summary>
            ( optional ) Whether the cookie should be marked as Secure. Defaults to false.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.httpOnly">
            <summary>
            ( optional ) Whether the cookie should be marked as HttpOnly. Defaults to false.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.expirationDate">
            <summary>
            ( optional ) The expiration date of the cookie as the number of seconds since the UNIX epoch. If omitted, the cookie becomes a session cookie.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookiesSetAllDetails.storeId">
            <summary>
            ( optional ) The ID of the cookie store in which to set the cookie. By default, the cookie is set in the current execution context's cookie store.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.Cookie">
            <summary>
            Represents information about an HTTP cookie.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.name">
            <summary>
            The name of the cookie.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.value">
            <summary>
            The value of the cookie.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.domain">
            <summary>
            The domain of the cookie (e.g. "www.google.com", "example.com").
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.hostOnly">
            <summary>
            True if the cookie is a host-only cookie (i.e. a request's host must exactly match the domain of the cookie).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.path">
            <summary>
            The path of the cookie.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.secure">
            <summary>
            True if the cookie is marked as Secure (i.e. its scope is limited to secure channels, typically HTTPS).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.httpOnly">
            <summary>
            True if the cookie is marked as HttpOnly (i.e. the cookie is inaccessible to client-side scripts).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.session">
            <summary>
            True if the cookie is a session cookie, as opposed to a persistent cookie with an expiration date.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.expirationDate">
            <summary>
            The expiration date of the cookie as the number of seconds since the UNIX epoch. Not provided for session cookies.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Cookie.storeId">
            <summary>
            The ID of the cookie store containing this cookie, as provided in getAllCookieStores().
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.CookieStore">
            <summary>
            Represents a cookie store in the browser. An incognito mode window, for instance, uses a separate cookie store from a non-incognito window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookieStore.id">
            <summary>
            The unique identifier for the cookie store.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CookieStore.tabIds">
            <summary>
            Identifiers of all the browser tabs that share this cookie store.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.attach(SharpKit.Google.Chrome.Debuggee,SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Attaches debugger to the given target.
            </summary>
            <param name="target">Debugging target to which you want to attach.</param>
            <param name="requiredVersion">Required debugging protocol version ("0.1"). One can only attach to the debuggee with matching major version and greater or equal minor version.
            List of the protocol versions can be obtained here: https://developers.google.com/chrome-developer-tools/docs/remote-debugging </param>
            <param name="callback">( optional )Called once the attach operation succeeds or fails. Callback receives no arguments. If the attach fails, chrome.extension.lastError will be set to the error message.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.attach(SharpKit.Google.Chrome.Debuggee,SharpKit.JavaScript.JsString)">
            <summary>
            Attaches debugger to the given target.
            </summary>
            <param name="target">Debugging target to which you want to attach.</param>
            <param name="requiredVersion">Required debugging protocol version ("0.1"). One can only attach to the debuggee with matching major version and greater or equal minor version.
            List of the protocol versions can be obtained here: https://developers.google.com/chrome-developer-tools/docs/remote-debugging </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.detach(SharpKit.Google.Chrome.Debuggee,SharpKit.JavaScript.JsAction)">
            <summary>
            Detaches debugger from the given target.
            </summary>
            <param name="target">Debugging target from which you want to detach.</param>
            <param name="callback">( optional ) Called once the detach operation succeeds or fails. Callback receives no arguments.
            If the detach fails, chrome.extension.lastError will be set to the error message.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.detach(SharpKit.Google.Chrome.Debuggee)">
            <summary>
            Detaches debugger from the given target.
            </summary>
            <param name="target">Debugging target from which you want to detach.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.sendCommand(SharpKit.Google.Chrome.Debuggee,SharpKit.JavaScript.JsString,System.Object,SharpKit.JavaScript.JsAction)">
            <summary>
            Sends given command to the debugging target.
            </summary>
            <param name="target">Debugging target to which you want to send the command.</param>
            <param name="method">Method name. Should be one of the methods defined by the remote debugging protocol.</param>
            <param name="params">JSON object with request parameters. This object must conform to the remote debugging params scheme for given method.</param>
            <param name="callback">Response body. If an error occurs while posting the message, the callback will be called with no arguments and chrome.extension.lastError will be set to the error message.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.sendCommand(SharpKit.Google.Chrome.Debuggee,SharpKit.JavaScript.JsString,System.Object)">
            <summary>
            Sends given command to the debugging target.
            </summary>
            <param name="target">Debugging target to which you want to send the command.</param>
            <param name="method">Method name. Should be one of the methods defined by the remote debugging protocol.</param>
            <param name="params">JSON object with request parameters. This object must conform to the remote debugging params scheme for given method.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.debugger.sendCommand(SharpKit.Google.Chrome.Debuggee,SharpKit.JavaScript.JsString)">
            <summary>
            Sends given command to the debugging target.
            </summary>
            <param name="target">Debugging target to which you want to send the command.</param>
            <param name="method">Method name. Should be one of the methods defined by the remote debugging protocol.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.debugger.onDetach">
            <summary>
            Fired when browser terminates debugging session for the tab. This happens when either the tab is being closed or Chrome DevTools is being invoked for the attached tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.debugger.onEvent">
            <summary>
            Fired whenever debugging target issues instrumentation event.
            Listener parameters:
            source ( debugger.Debuggee )
            The debuggee that generated this event.
            method ( string )
            Method name. Should be one of the notifications defined by the remote debugging protocol.
            params ( optional object )
            JSON object with the response. Structure of the response varies depending on the method and is defined by the remote debugging protocol.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.Debuggee">
            <summary>
            Debuggee identifier.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Debuggee.tabId">
            <summary>
            The id of the tab which you intend to debug.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RedirectByRegEx">
            <summary>
            Redirects a request by applying a regular expression on the URL. The regular expressions use the RE2 syntax.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RedirectByRegEx.from">
            <summary>
            A match pattern that may contain capture groups. Capture groups are referenced in the Perl syntax
            ($1, $2, ...) instead of the RE2 syntax (\1, \2, ...) in order to be closer to JavaScript Regular Expressions.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RedirectByRegEx.to">
            <summary>
            Destination pattern.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RequestMatcher">
            <summary>
            Matches network events by various criteria.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestMatcher.url">
            <summary>
            ( optional events.UrlFilter ) Matches if the condition of the UrlFilter are fulfilled for the URL of the request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestMatcher.resourceType">
            <summary>
            ( optional array of string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] ) Matches if the request type of a request is contained in the list. Requests that cannot match any of the types will be filtered out.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestMatcher.instanceType">
            <summary>
            ( enumerated string ["declarativeWebRequest.RequestMatcher"] )
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RedirectRequest">
            <summary>
            Declarative event action that redirects a network request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RedirectRequest.instanceType">
            <summary>
            ( enumerated string ["declarativeWebRequest.RedirectRequest"] )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RedirectRequest.redirectUrl">
            <summary>
            Destination to where the request is redirected.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RedirectToTransparentImage">
            <summary>
            Declarative event action that redirects a network request to a transparent image.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RedirectToEmptyDocument">
            <summary>
            Declarative event action that redirects a network request to an empty document.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.CancelRequest">
            <summary>
            Declarative event action that cancels a network request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.CancelRequest.instanceType">
            <summary>
            ( enumerated string ["declarativeWebRequest.CancelRequest"] )
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.SetRequestHeader">
            <summary>
            Sets the request header of the specified name to the specified value. If a header with the specified name did not exist before, a new one is created.
            Header name comparison is always case-insensitive. Each request header name occurs only once in each request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.SetRequestHeader.name">
            <summary>
            HTTP request header name.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.SetRequestHeader.value">
            <summary>
            HTTP request header value.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RemoveRequestHeader">
            <summary>
            Removes the request header of the specified name. Do not use SetRequestHeader and RemoveRequestHeader with the same header name on the same request.
            Each request header name occurs only once in each request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemoveRequestHeader.name">
            <summary>
            HTTP request header name (case-insensitive).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.AddResponseHeader">
            <summary>
            Adds the response header to the response of this web request.
            As multiple response headers may share the same name, you need to first remove and then add a new response header in order to replace one.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AddResponseHeader.name">
            <summary>
            HTTP request header name.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AddResponseHeader.value">
            <summary>
            HTTP request header value.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RemoveResponseHeader">
            <summary>
            Removes all response headers of the specified names and values.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemoveResponseHeader.name">
            <summary>
            HTTP request header name.(case-insensitive).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RemoveResponseHeader.value">
             <summary>
            ( optional ) HTTP request header value.(case-insensitive).
             </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.IgnoreRules">
            <summary>
            Masks all rules that match the specified criteria.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.IgnoreRules.lowerPriorityThan">
            <summary>
            If set, rules with a lower priority than the specified value are ignored.
            This boundary is not persited, it affects only rules and their actions of the same network request stage. TODO(battre): Explain network request stages.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.addRules(SharpKit.JavaScript.JsArray{SharpKit.Google.Chrome.Rule},SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.AddRulesDetails})">
            <summary>
            Registers rules to handle events.
            </summary>
            <param name="rules">Rules to be registered. These do not replace previously registered rules.</param>
            <param name="callback">( optional ) Called with registered rules.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.addRules(SharpKit.JavaScript.JsArray{SharpKit.Google.Chrome.Rule})">
            <summary>
            Registers rules to handle events.
            </summary>
            <param name="rules">Rules to be registered. These do not replace previously registered rules.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.getRules(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString},SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.AddRulesDetails})">
            <summary>
            Returns currently registered rules.
            </summary>
            <param name="ruleIdentifiers">( optional ) If an array is passed, only rules with identifiers contained in this array are returned.</param>
            <param name="callback">Called with registered rules.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.getRules(SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.AddRulesDetails})">
            <summary>
            Returns currently registered rules.
            </summary>
            <param name="callback">Called with registered rules.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.removeRules(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString},SharpKit.JavaScript.JsAction)">
            <summary>
            Unregisters currently registered rules.
            </summary>
            <param name="ruleIdentifiers"> ( optional ) If an array is passed, only rules with identifiers contained in this array are unregistered.</param>
            <param name="callback">( optional ) Called when rules were unregistered.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.removeRules(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString})">
            <summary>
            Unregisters currently registered rules.
            </summary>
            <param name="ruleIdentifiers"> ( optional ) If an array is passed, only rules with identifiers contained in this array are unregistered.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.Event`1.removeRules">
            <summary>
            Unregisters currently registered rules.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.Rule">
            <summary>
            Description of a declarative rule for handling events.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Rule.id">
            <summary>
            Optional identifier that allows referencing this rule.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Rule.conditions">
            <summary>
            List of conditions that can trigger the actions.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Rule.actions">
            <summary>
            List of actions that are triggered if one of the condtions is fulfilled.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Rule.priority">
            <summary>
            Optional priority of this rule. Defaults to 100.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.UrlFilter">
            <summary>
            Filters URLs for various criteria
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.hostContains">
            <summary>
            ( optional ) Matches if the host name of the URL contains a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.hostEquals">
            <summary>
            ( optional ) Matches if the host name of the URL is equal to a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.hostPrefix">
            <summary>
            ( optional ) Matches if the host name of the URL starts with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.hostSuffix">
            <summary>
            ( optional ) Matches if the host name of the URL ends with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.pathContains">
            <summary>
            ( optional ) Matches if the path segment of the URL contains a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.pathEquals">
            <summary>
            ( optional ) Matches if the path segment of the URL is equal to a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.pathPrefix">
            <summary>
            ( optional ) Matches if the path segment of the URL starts with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.pathSuffix">
            <summary>
            ( optional ) Matches if the path segment of the URL ends with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.queryContains">
            <summary>
            ( optional ) Matches if the query segment of the URL contains a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.queryEquals">
            <summary>
            ( optional ) Matches if the query segment of the URL is equal to a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.queryPrefix">
            <summary>
            ( optional ) Matches if the query segment of the URL starts with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.querySuffix">
            <summary>
            ( optional ) Matches if the query segment of the URL ends with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.urlContains">
            <summary>
            ( optional ) Matches if the URL contains a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.urlEquals">
            <summary>
            ( optional ) Matches if the URL is equal to a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.urlPrefix">
            <summary>
            ( optional ) Matches if the URL starts with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.urlSuffix">
            <summary>
            ( optional ) Matches if the URL ends with a specified string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.schemes">
            <summary>
            ( optional ) Matches if the scheme of the URL is equal to any of the schemes specified in the array.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.UrlFilter.ports">
            <summary>
            ( optional ) Matches if the port of the URL is contained in any of the specified port lists.
            For example [80, 443, [1000, 1200]] matches all requests on port 80, 443 and in the range 1000-1200.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.connect(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.ExtensionConnectInfo)">
            <summary>
            Attempts to connect to other listeners within the extension (such as the extension's background page).
            This is primarily useful for content scripts connecting to their extension processes.
            Extensions may connect to content scripts embedded in tabs via chrome.tabs.connect().
            </summary>
            <param name="extensionId"> ( optional ) The extension ID of the extension you want to connect to. If omitted, default is your own extension.</param>
            <param name="connectInfo">( optional )</param>
            <returns>Port through which messages can be sent and received with the extension. The port's onDisconnect event is fired if extension does not exist.</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.connect(SharpKit.JavaScript.JsString)">
            <summary>
            Attempts to connect to other listeners within the extension (such as the extension's background page).
            This is primarily useful for content scripts connecting to their extension processes.
            Extensions may connect to content scripts embedded in tabs via chrome.tabs.connect().
            </summary>
            <param name="extensionId"> ( optional ) The extension ID of the extension you want to connect to. If omitted, default is your own extension.</param>
            <returns>Port through which messages can be sent and received with the extension. The port's onDisconnect event is fired if extension does not exist.</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.connect">
            <summary>
            Attempts to connect to other listeners within the extension (such as the extension's background page).
            This is primarily useful for content scripts connecting to their extension processes.
            Extensions may connect to content scripts embedded in tabs via chrome.tabs.connect().
            </summary>
            <returns>Port through which messages can be sent and received with the extension. The port's onDisconnect event is fired if extension does not exist.</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.getBackgroundPage">
            <summary>
            Returns the JavaScript 'window' object for the background page running inside the current extension. Returns null if the extension has no background page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.getURL(SharpKit.JavaScript.JsString)">
            <summary>
            Converts a relative path within an extension install directory to a fully-qualified URL.
            </summary>
            <param name="path">A path to a resource within an extension expressed relative to its install directory.</param>
            <returns>The fully-qualified URL to the resource.</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.getViews(SharpKit.Google.Chrome.ExtensionFetchProperties)">
            <summary>
            Returns an array of the JavaScript 'window' objects for each of the pages running inside the current extension.
            </summary>
            <param name="fetchProperties"></param>
            <returns>Array of global objects</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.getViews">
            <summary>
            Returns an array of the JavaScript 'window' objects for each of the pages running inside the current extension.
            </summary>
            <returns>Array of global objects</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.isAllowedFileSchemeAccess(SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the state of the extension's access to the 'file://' scheme (as determined by the user-controlled 'Allow access to File URLs' checkbox.
            *This function was added in version 12.0.706.0.
            If you require this function, the manifest key minimum_chrome_version can ensure that your extension won't be run in an earlier browser version.*
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.isAllowedIncognitoAccess(SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the state of the extension's access to Incognito-mode (as determined by the user-controlled 'Allowed in Incognito' checkbox.
            *This function was added in version 12.0.706.0.
            If you require this function, the manifest key minimum_chrome_version can ensure that your extension won't be run in an earlier browser version.*
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.sendMessage(SharpKit.JavaScript.JsString,System.Object,SharpKit.JavaScript.JsAction{System.Object})">
            <summary>
            Sends a single message to other listeners within the extension. Similar to chrome.extension.connect, but only sends a single message with an optional response.
            The chrome.extension.onMessage event is fired in each page of the extension.
            </summary>
            <param name="extensionId">( optional ) The extension ID of the extension you want to connect to. If omitted, default is your own extension.</param>
            <param name="message"></param>
            <param name="responseCallback">( optional ) The JSON response object sent by the handler of the message. If an error occurs while connecting to the extension,
            the callback will be called with no arguments and chrome.extension.lastError will be set to the error message.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.sendMessage(SharpKit.JavaScript.JsString,System.Object)">
            <summary>
            Sends a single message to other listeners within the extension. Similar to chrome.extension.connect, but only sends a single message with an optional response.
            The chrome.extension.onMessage event is fired in each page of the extension.
            </summary>
            <param name="extensionId">( optional ) The extension ID of the extension you want to connect to. If omitted, default is your own extension.</param>
            <param name="message"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.sendMessage(System.Object,SharpKit.JavaScript.JsAction{System.Object})">
            <summary>
            Sends a single message to other listeners within the extension. Similar to chrome.extension.connect, but only sends a single message with an optional response.
            The chrome.extension.onMessage event is fired in each page of the extension.
            </summary>
            <param name="message"></param>
            <param name="responseCallback">( optional ) The JSON response object sent by the handler of the message. If an error occurs while connecting to the extension,
            the callback will be called with no arguments and chrome.extension.lastError will be set to the error message.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.sendMessage(System.Object)">
            <summary>
            Sends a single message to other listeners within the extension. Similar to chrome.extension.connect, but only sends a single message with an optional response.
            The chrome.extension.onMessage event is fired in each page of the extension.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.extension.setUpdateUrlData(SharpKit.JavaScript.JsString)">
            <summary>
            Sets the value of the ap CGI parameter used in the extension's update URL.
            This value is ignored for extensions that are hosted in the Chrome Extension Gallery.
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.extension.lastError">
            <summary>
            ( optional ) Set for the lifetime of a callback if an ansychronous extension api has resulted in an error.
            If no error has occured lastError will be undefined.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.extension.inIncognitoContext">
            <summary>
            ( optional ) True for content scripts running inside incognito tabs, and for extension pages running inside an incognito process.
            The latter only applies to extensions with 'split' incognito_behavior.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.extension.onConnect">
            <summary>
            Fired when a connection is made from either an extension process or a content script.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.extension.onConnectExternal">
            <summary>
            Fired when a connection is made from another extension.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.extension.onMessage">
            <summary>
            Fired when a message is sent from either an extension process or a content script.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.extension.onMessageExternal">
            <summary>
            Fired when a message is sent from another extension.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionLastError.message">
            <summary>
            Description of the error that has taken place.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionConnectInfo.name">
            <summary>
            ( optional ) Will be passed into onConnect for extension processes that are listening for the connection event.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionFetchProperties.type">
            <summary>
            type ( optional enumerated string ["tab", "infobar", "notification", "popup"] )
            The type of view to get. If omitted, returns all views (including background pages and tabs). Valid values: 'tab', 'infobar', 'notification', 'popup'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionFetchProperties.windowId">
            <summary>
            The window to restrict the search to. If omitted, returns all views.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionOnMessageDetails.message">
            <summary>
            The message sent by the calling script.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionOnMessageDetails.sendResponse">
            <summary>
            Function to call (at most once) when you have a response. The argument should be any JSON-ifiable object.
            If you have more than one onMessage listener in the same document, then only one may send a response.
            This function becomes invalid when the event listener returns, unless you return true from the event listener to indicate you wish to send a response asynchronously
            (this will keep the message channel open to the other end until sendResponse is called).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.MessageSender">
            <summary>
            An object containing information about the script context that sent a message or request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.MessageSender.tab">
            <summary>
            ( optional tabs.Tab ) This property will only be present when the connection was opened from a tab or content script.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.MessageSender.id">
            <summary>
            The extension ID of the extension that opened the connection.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.Port">
            <summary>
            An object which allows two way communication with other pages.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.fileBrowserHandler">
            <summary>
            Use the chrome.fileBrowserHandler module to extend the Chrome OS file browser.
            For example, you can use this API to enable users to upload files to your website.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.fileBrowserHandler.selectFile(SharpKit.Google.Chrome.SelectionParams,SharpKit.JavaScript.JsAction)">
            <summary>
            Prompts user to select file path under which a new file will be created.
            When the user selects file, the file gets created or, if it already existed, truncated. The function has to be called with a user gesture.
            </summary>
            <param name="selectionParams">Parameters that will be used to create a new file.</param>
            <param name="callback">Function called upon completion.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.fileBrowserHandler.onExecute">
            <summary>
            Fired when file system action is executed from ChromeOS file browser.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.SelectionParams.suggestedName">
            <summary>
            Suggested name for the new file.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.FileHandlerExecuteEventDetails">
            <summary>
            Event details payload for fileBrowserHandler.onExecute event.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.FileHandlerExecuteEventDetails.entries">
            <summary>
            Array of Entry instances representing files that are targets of this action (selected in ChromeOS file browser).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.FileHandlerExecuteEventDetails.tab_id">
            <summary>
            ( optional ) The ID of the tab that raised this event. Tab IDs are unique within a browser session.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.history">
            <summary>
            Use the chrome.history module to interact with the browser's record of visited pages.
            You can add, remove, and query for URLs in the browser's history. To override the history page with your own version, see Override Pages.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.addUrl(SharpKit.Google.Chrome.HistoryAddUrlDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Adds a URL to the history at the current time with a transition type of "link".
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.addUrl(SharpKit.Google.Chrome.HistoryAddUrlDetails)">
            <summary>
            Adds a URL to the history at the current time with a transition type of "link".
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.deleteAll(SharpKit.JavaScript.JsAction)">
            <summary>
            Deletes all items from the history.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.deleteRange(SharpKit.Google.Chrome.HistoryDeleteRange,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes all items within the specified date range from the history. Pages will not be removed from the history unless all visits fall within the range.
            </summary>
            <param name="range"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.deleteUrl(SharpKit.Google.Chrome.HistoryDeleteUrlDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes all occurrences of the given URL from the history.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.deleteUrl(SharpKit.Google.Chrome.HistoryDeleteUrlDetails)">
            <summary>
            Removes all occurrences of the given URL from the history.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.getVisits(SharpKit.Google.Chrome.HistoryGetVisitsDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves information about visits to a URL.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.history.search(SharpKit.Google.Chrome.HistorySearchQuery,SharpKit.JavaScript.JsAction)">
            <summary>
            Searches the history for the last visit time of each page matching the query.
            </summary>
            <param name="query"></param>
            <param name="callback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.history.onVisitRemoved">
            <summary>
            Fired when one or more URLs are removed from the history service. When all visits have been removed the URL is purged from history.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.history.onVisited">
            <summary>
            Fired when a URL is visited, providing the HistoryItem data for that URL. This event fires before the page has loaded.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryAddUrlDetails.url">
            <summary>
            The URL to add.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryDeleteRange.startTime">
            <summary>
            Items added to history after this date, represented in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryDeleteRange.endTime">
            <summary>
            Items added to history before this date, represented in milliseconds since the epoch
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryDeleteUrlDetails.url">
            <summary>
            The URL to remove.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryGetVisitsDetails.url">
            <summary>
            The URL for which to retrieve visit information. It must be in the format as returned from a call to history.search.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistorySearchQuery.text">
            <summary>
            A free-text query to the history service. Leave empty to retrieve all pages.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistorySearchQuery.startTime">
            <summary>
            ( optional ) Limit results to those visited after this date, represented in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistorySearchQuery.endTime">
            <summary>
            ( optional )Limit results to those visited before this date, represented in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistorySearchQuery.maxResults">
            <summary>
            ( optional )The maximum number of results to retrieve. Defaults to 100.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryOnVisitRemoved.allHistory">
            <summary>
            True if all history was removed. If true, then urls will be empty.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryOnVisitRemoved.urls">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.HistoryItem">
            <summary>
            An object encapsulating one result of a history query.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryItem.id">
            <summary>
            The unique identifier for the item.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryItem.url">
            <summary>
            ( optional ) The URL navigated to by a user.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryItem.title">
            <summary>
            ( optional ) The title of the page when it was last loaded.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryItem.lastVisitTime">
            <summary>
            ( optional ) When this page was last loaded, represented in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryItem.visitCount">
            <summary>
            ( optional ) The number of times the user has navigated to this page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HistoryItem.typedCount">
            <summary>
            ( optional ) The number of times the user has navigated to this page by typing in the address.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.VisitItem">
            <summary>
            An object encapsulating one visit to a URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.VisitItem.id">
            <summary>
            The unique identifier for the item.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.VisitItem.visitId">
            <summary>
            The unique identifier for this visit.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.VisitItem.visitTime">
            <summary>
            ( optional ) When this visit occurred, represented in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.VisitItem.referringVisitId">
            <summary>
            The visit ID of the referrer.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.VisitItem.transition">
            <summary>
            ( enumerated string ["link", "typed", "auto_bookmark", "auto_subframe", "manual_subframe", "generated", "start_page", "form_submit", "reload", "keyword", "keyword_generated"] )
            The transition type for this visit from its referrer.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TransitionType">
            <summary>
            The history API uses a transition type to describe how the browser navigated to a particular URL on a particular visit.
            For example, if a user visits a page by clicking a link on another page, the transition type is "link".
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.link">
            <summary>
            The user got to this page by clicking a link on another page.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.typed">
            <summary>
            The user got this page by typing the URL in the address bar. Also used for other explicit navigation actions.
            See also generated, which is used for cases where the user selected a choice that didn't look at all like a URL.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.auto_bookmark">
            <summary>
            The user got to this page through a suggestion in the UI — for example, through a menu item.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.auto_subframe">
            <summary>
            Subframe navigation. This is any content that is automatically loaded in a non-top-level frame.
            For example, if a page consists of several frames containing ads, those ad URLs have this transition type.
            The user may not even realize the content in these pages is a separate frame, and so may not care about the URL (see also manual_subframe).
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.manual_subframe">
            <summary>
            For subframe navigations that are explicitly requested by the user and generate new navigation entries in the back/forward list.
            An explicitly requested frame is probably more important than an automatically loaded frame because the user probably cares about 
            he fact that the requested frame was loaded.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.generated">
            <summary>
            The user got to this page by typing in the address bar and selecting an entry that did not look like a URL.
            For example, a match might have the URL of a Google search result page, but it might appear to the user as "Search Google for ...".
            These are not quite the same as typed navigations because the user didn't type or see the destination URL. See also keyword.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.start_page">
            <summary>
            The page was specified in the command line or is the start page.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.form_submit">
            <summary>
            The user filled out values in a form and submitted it.
            Note that in some situations — such as when a form uses script to submit contents — submitting a form does not result in this transition type.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.reload">
            <summary>
            The user reloaded the page, either by clicking the reload button or by pressing Enter in the address bar.
            Session restore and Reopen closed tab use this transition type, too.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.keyword">
            <summary>
            The URL was generated from a replaceable keyword other than the default search provider. See also keyword_generated.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionType.keyword_generated">
            <summary>
            Corresponds to a visit generated for a keyword. See also keyword.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.i18n">
            <summary>
            An internationalized extension can be easily localized — adapted to languages and regions that it didn't originally support.
            To internationalize your extension, you need to put all of its user-visible strings into a file named messages.json.
            Each time you localize your extension you add a messages file under a directory named _locales/localeCode, where localeCode is a code such as en for English.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.i18n.getAcceptLanguages(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the accept-languages of the browser. This is different from the locale used by the browser; to get the locale, use window.navigator.language.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.i18n.getMessage(SharpKit.JavaScript.JsString,System.Object)">
            <summary>
            Gets the localized string for the specified message.
            If the message is missing, this method returns an empty string (''). If the format of the getMessage() call is wrong — for example, essageName is not a string or the substitutions array has more than 9 elements — this method returns undefined.
            </summary>
            <param name="messageName">The name of the message, as specified in the messages.json file.</param>
            <param name="substitutions">( optional ) Up to 9 substitution strings, if the message requires any.</param>
            <returns>Message localized for current locale</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.i18n.getMessage(SharpKit.JavaScript.JsString)">
            <summary>
            Gets the localized string for the specified message.
            If the message is missing, this method returns an empty string (''). If the format of the getMessage() call is wrong — for example, essageName is not a string or the substitutions array has more than 9 elements — this method returns undefined.
            </summary>
            <param name="messageName">The name of the message, as specified in the messages.json file.</param>
            <returns>Message localized for current locale</returns>
        </member>
        <member name="T:SharpKit.Google.Chrome.idle">
            <summary>
            You must declare the "idle" permission in your extension's manifest to use the idle API.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.idle.queryState(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Returns the current state of the browser.
            </summary>
            <param name="thresholdSeconds">Threshold, in seconds, used to determine when a machine is in the idle state.</param>
            <param name="callback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.idle.onStateChanged">
            <summary>
            Fired when the browser changes to an active state. Currently only reports the transition from idle to active.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.clearComposition(SharpKit.Google.Chrome.InputImeClearCompositionParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Clear the current composition. If this extension does not own the active IME, this fails.
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, chrome.extension.lastError is set.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.clearComposition(SharpKit.Google.Chrome.InputImeClearCompositionParameter)">
            <summary>
            Clear the current composition. If this extension does not own the active IME, this fails.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.commitText(SharpKit.Google.Chrome.InputImeCommitTextParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Commits the provided text to the current input.
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, chrome.extension.lastError is set.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.commitText(SharpKit.Google.Chrome.InputImeCommitTextParameter)">
            <summary>
            Commits the provided text to the current input.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setCandidateWindowProperties(SharpKit.Google.Chrome.InputImeCandidateWindowParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Sets the properties of the candidate window. This fails if the extension doesn’t own the active IME
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setCandidateWindowProperties(SharpKit.Google.Chrome.InputImeCandidateWindowParameter)">
            <summary>
            Sets the properties of the candidate window. This fails if the extension doesn’t own the active IME
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setCandidates(SharpKit.Google.Chrome.InputImeCandidatesParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Sets the current candidate list. This fails if this extension doesn’t own the active IME
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setCandidates(SharpKit.Google.Chrome.InputImeCandidatesParameter)">
            <summary>
            Sets the current candidate list. This fails if this extension doesn’t own the active IME
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setComposition(SharpKit.Google.Chrome.InputImeCompositionParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Set the current composition. If this extension does not own the active IME, this fails.
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, chrome.extension.lastError is set.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setComposition(SharpKit.Google.Chrome.InputImeCompositionParameter)">
            <summary>
            Set the current composition. If this extension does not own the active IME, this fails.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setCursorPosition(SharpKit.Google.Chrome.InputImeCursorPositionParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Set the position of the cursor in the candidate window. This is a no-op if this extension does not own the active IME.
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setCursorPosition(SharpKit.Google.Chrome.InputImeCursorPositionParameter)">
            <summary>
            Set the position of the cursor in the candidate window. This is a no-op if this extension does not own the active IME.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setMenuItems(SharpKit.Google.Chrome.InputImeMenuItemsParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Adds the provided menu items to the language menu when this IME is active.
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.setMenuItems(SharpKit.Google.Chrome.InputImeMenuItemsParameter)">
            <summary>
            Adds the provided menu items to the language menu when this IME is active.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.updateMenuItems(SharpKit.Google.Chrome.InputImeMenuItemsParameter,SharpKit.JavaScript.JsAction)">
            <summary>
            Updates the state of the MenuItems specified
            </summary>
            <param name="parameters"></param>
            <param name="callback">( optional ) Called when the operation completes</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.InputIme.updateMenuItems(SharpKit.Google.Chrome.InputImeMenuItemsParameter)">
            <summary>
            Updates the state of the MenuItems specified
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onActivate">
            <summary>
            This event is sent when an IME is activated. It signals that the IME will be receiving onKeyPress events.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onBlur">
            <summary>
            This event is sent when focus leaves a text box. It is sent to all extensions that are listening to this event, and enabled by the user.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onCandidateClicked">
            <summary>
            This event is sent if this extension owns the active IME.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onDeactivated">
            <summary>
            This event is sent when an IME is deactivated. It signals that the IME will no longer be receiving onKeyPress events.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onFocus">
            <summary>
            This event is sent when focus enters a text box. It is sent to all extensions that are listening to this event, and enabled by the user.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onInputContextUpdate">
            <summary>
            This event is sent when the properties of the current InputContext change, such as the the type.
            It is sent to all extensions that are listening to this event, and enabled by the user.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onKeyEvent">
            <summary>
            This event is sent if this extension owns the active IME.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputIme.onMenuItemActivated">
            <summary>
            Called when the user selects a menu item
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeClearCompositionParameter.contextID">
            <summary>
            ID of the context where the composition will be cleared
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCommitTextParameter.contextID">
            <summary>
            ID of the context where the text will be committed
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCommitTextParameter.text">
            <summary>
            The text to commit
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameter.engineID">
            <summary>
            ID of the engine to set properties on.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameterProperties.visible">
            <summary>
            ( optional )True to show the Candidate window, false to hide it.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameterProperties.cursorVisible">
            <summary>
            ( optional ) True to show the cursor, false to hide it.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameterProperties.vertical">
            <summary>
            ( optional )True if the candidate window should be rendered vertical, false to make it horizontal.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameterProperties.pageSize">
            <summary>
            ( optional ) The number of candidates to display per page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameterProperties.auxiliaryText">
            <summary>
            ( optional )Text that is shown at the bottom of the candidate window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidateWindowParameterProperties.auxiliaryTextVisible">
            <summary>
            ( optional )True to display the auxiliary text, false to hide it.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameter.contextID">
            <summary>
            ID of the context that owns the candidate window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameter.candidates">
            <summary>
            List of candidates to show in the candidate window
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameterCandidates.candidate">
            <summary>
            The candidate
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameterCandidates.id">
            <summary>
            The candidate's id
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameterCandidates.parentId">
            <summary>
            ( optional ) The id to add these candidates under
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameterCandidates.label">
            <summary>
            ( optional ) Short string displayed to next to the candidate, often the shortcut key or index
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCandidatesParameterCandidates.annotation">
            <summary>
            ( optional ) Additional text describing the candidate
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameter.contextID">
            <summary>
            ID of the context where the composition text will be set
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameter.text">
            <summary>
            Text to set
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameter.selectionStart">
            <summary>
             ( optional ) Position in the text that the selection starts at.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameter.selectionEnd">
            <summary>
            ( optional ) Position in the text that the selection ends at.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameter.cursor">
            <summary>
            Position in the text of the cursor.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameter.segments">
            <summary>
            List of segments and their associated types.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.InputImeCompositionParameterSegment">
            <summary>
            List of segments and their associated types.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameterSegment.start">
            <summary>
            Index of the character to start this segment at
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameterSegment.end">
            <summary>
            Index of the character to end this segment after.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCompositionParameterSegment.style">
            <summary>
            ( enumerated string ["underline", "doubleUnderline"] ) How to render this segment
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCursorPositionParameter.contextID">
            <summary>
            ID of the context that owns the candidate window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeCursorPositionParameter.candidateID">
            <summary>
            ID of the candidate to select.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameter.engineID">
            <summary>
            ID of the engine to use
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameter.items">
            <summary>
            ID of the candidate to select.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameterItem.id">
            <summary>
            String that will be passed to callbacks referencing this MenuItem.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameterItem.label">
            <summary>
            ( optional ) Text displayed in the menu for this item.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameterItem.style">
            <summary>
            ( optional enumerated string ["none", "check", "radio", "separator"] ) Enum representing if this item is: none, check, radio, or a separator.
            Radio buttons between separators are considered grouped.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameterItem.visible">
            <summary>
            ( optional ) Indicates this item is visible.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameterItem.checked">
            <summary>
            ( optional ) Indicates this item should be drawn with a check.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputImeMenuItemsParameterItem.enabled">
            <summary>
            ( optional ) Indicates this item is enabled.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.KeyboardEvent">
            <summary>
            See http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.KeyboardEvent.type">
            <summary>
            One of keyup or keydown.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.KeyboardEvent.requestId">
            <summary>
            The ID of the request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.KeyboardEvent.key">
            <summary>
            Value of the key being pressed
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.KeyboardEvent.altKey">
            <summary>
            ( optional )Whether or not the ALT key is pressed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.KeyboardEvent.ctrlKey">
            <summary>
            ( optional )Whether or not the CTRL key is pressed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.KeyboardEvent.shiftKey">
            <summary>
            ( optional )Whether or not the SHIFT key is pressed.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.InputContext">
            <summary>
            Describes an input Context
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputContext.contextID">
            <summary>
            This is used to specify targets of text field operations. This ID becomes invalid as soon as onBlur is called.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.InputContext.type">
            <summary>
            Type of value this text field edits, (Text, Number, Password, etc)
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.InputContextType">
            <summary>
            Type of value this text field edits, (Text, Number, Password, etc)
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.management">
            <summary>
            You must declare the "management" permission in the extension manifest to use the management API. 
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.get(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Returns information about the installed extension or app that has the given ID.
            </summary>
            <param name="id">The ID from an item of $ref:ExtensionInfo.</param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.get(SharpKit.JavaScript.JsString)">
            <summary>
            Returns information about the installed extension or app that has the given ID.
            </summary>
            <param name="id">The ID from an item of $ref:ExtensionInfo.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.getAll(SharpKit.JavaScript.JsAction)">
            <summary>
            Returns a list of information about installed extensions and apps.
            </summary>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.getAll">
            <summary>
            Returns a list of information about installed extensions and apps.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.getPermissionWarningsById(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Returns a list of permission warnings for the given extension id.
            </summary>
            <param name="id">The ID of an already installed extension.</param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.getPermissionWarningsById(SharpKit.JavaScript.JsString)">
            <summary>
            Returns a list of permission warnings for the given extension id.
            </summary>
            <param name="id">The ID of an already installed extension.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.getPermissionWarningsByManifest(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Returns a list of permission warnings for the given extension manifest string.
            Note: This function can be used without requesting the 'management' permission in the manifest.
            </summary>
            <param name="manifestStr">Extension manifest JSON string.</param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.getPermissionWarningsByManifest(SharpKit.JavaScript.JsString)">
            <summary>
            Returns a list of permission warnings for the given extension manifest string.
            Note: This function can be used without requesting the 'management' permission in the manifest.
            </summary>
            <param name="manifestStr">Extension manifest JSON string.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.launchApp(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Launches an application.
            </summary>
            <param name="id">The extension id of the application.</param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.launchApp(SharpKit.JavaScript.JsString)">
            <summary>
            Launches an application.
            </summary>
            <param name="id">The extension id of the application.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.setEnabled(SharpKit.JavaScript.JsString,System.Boolean,SharpKit.JavaScript.JsAction)">
            <summary>
            Enables or disables an app or extension.
            </summary>
            <param name="id">This should be the id from an item of $ref:ExtensionInfo.</param>
            <param name="enabled">Whether this item should be enabled or disabled.</param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.setEnabled(SharpKit.JavaScript.JsString,System.Boolean)">
            <summary>
            Enables or disables an app or extension.
            </summary>
            <param name="id">This should be the id from an item of $ref:ExtensionInfo.</param>
            <param name="enabled">Whether this item should be enabled or disabled.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.uninstall(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.ManagementUninstallOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Uninstalls a currently installed app or extension.
            </summary>
            <param name="id">This should be the id from an item of $ref:ExtensionInfo.</param>
            <param name="options"></param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.management.uninstall(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.ManagementUninstallOptions)">
            <summary>
            Uninstalls a currently installed app or extension.
            </summary>
            <param name="id">This should be the id from an item of $ref:ExtensionInfo.</param>
            <param name="options"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.management.onDisabled">
            <summary>
            Fired when an app or extension has been disabled
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.management.onEnabled">
            <summary>
            Fired when an app or extension has been enabled.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.management.onInstalled">
            <summary>
            Fired when an app or extension has been installed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.management.onUninstalled">
            <summary>
            Fired when an app or extension has been uninstalled.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.IconInfo">
            <summary>
            Information about an icon belonging to an extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.IconInfo.size">
            <summary>
            A number representing the width and height of the icon. Likely values include (but are not limited to) 128, 48, 24, and 16.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.IconInfo.url">
            <summary>
            The URL for this icon image. To display a grayscale version of the icon (to indicate that an extension is disabled, for example), append ?grayscale=true to the URL.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ExtensionInfo">
            <summary>
            Information about an installed extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.id">
            <summary>
            The extension's unique identifier.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.name">
            <summary>
            The name of this extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.description">
            <summary>
            The description of this extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.version">
            <summary>
            The version of this extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.mayDisable">
            <summary>
            Whether this extension can be disabled or uninstalled by the user.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.enabled">
            <summary>
            Whether it is currently enabled or disabled.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.disabledReason">
            <summary>
            ( optional enumerated string ["unknown", "permissions_increase"] ) A reason the item is disabled.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.isApp">
            <summary>
            True if this is an app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.appLaunchUrl">
            <summary>
            ( optional ) The launch url (only present for apps).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.homepageUrl">
            <summary>
            ( optional ) The URL of the homepage of this extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.updateUrl">
            <summary>
             ( optional string ) The update URL of this extension or app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.offlineEnabled">
            <summary>
            Whether the extension or app declares that it supports offline.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.optionsUrl">
            <summary>
            The url for the item's options page, if it has one.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.icons">
            <summary>
            ( optional )  A list of icon information. Note that this just reflects what was declared in the manifest, and the actual image at that url may be larger or smaller than
            what was declared, so you might consider using explicit width and height attributes on img tags referencing these images. See the manifest documentation on icons for more details.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.permissions">
            <summary>
            Returns a list of API based permissions.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ExtensionInfo.hostPermissions">
            <summary>
            Returns a list of host based permissions.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ManagementUninstallOptions.showConfirmDialog">
            <summary>
            Whether or not a confirm-uninstall dialog should prompt the user. Defaults to false.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.omnibox">
            <summary>
            The omnibox API allows you to register a keyword with Google Chrome's address bar, which is also known as the omnibox.
            Note: Chrome automatically creates a grayscale version of your 16x16-pixel icon. You should provide a full-color version so that it can also be used in other situations that require color.
            For example, the context menus API also uses a 16x16-pixel icon, but it is displayed in color.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.omnibox.setDefaultSuggestion(SharpKit.Google.Chrome.OmniboxDefaultSuggestion)">
            <summary>
            Sets the description and styling for the default suggestion. The default suggestion is the text that is displayed in the first suggestion row underneath the URL bar.
            </summary>
            <param name="suggestion">A partial SuggestResult object, without the 'content' parameter. See SuggestResult for a description of the parameters.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.omnibox.onInputCancelled">
            <summary>
            User has ended the keyword input session without accepting the input.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.omnibox.onInputChanged">
            <summary>
            User has changed what is typed into the omnibox.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.omnibox.onInputEntered">
            <summary>
            User has accepted what is typed into the omnibox.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.omnibox.onInputStarted">
            <summary>
            User has started a keyword input session by typing the extension's keyword.
            This is guaranteed to be sent exactly once per input session, and before any onInputChanged events.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.OmniboxDefaultSuggestion">
            <summary>
            A partial SuggestResult object, without the 'content' parameter. See SuggestResult for a description of the parameters.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.OmniboxDefaultSuggestion.description">
            <summary>
            The text to display in the default suggestion. The placeholder string '%s' can be included and will be replaced with the user's input.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.SuggestResult">
            <summary>
            A suggest result.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.SuggestResult.content">
            <summary>
            The text that is put into the URL bar, and that is sent to the extension when the user chooses this entry.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.SuggestResult.description">
            <summary>
            The text that is displayed in the URL dropdown. Can contain XML-style markup for styling. The supported tags are 'url' (for a literal URL),
            'match' (for highlighting text that matched what the user's query), and 'dim' (for dim helper text). The styles can be nested, eg. dimmed match
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.pageAction">
            <summary>
            Use page actions to put icons inside the address bar. Page actions represent actions that can be taken on the current page, but that aren't applicable to all pages. Some examples:
            Subscribe to this page's RSS feed
            Make a slideshow out of this page's photos
            The RSS icon in the following screenshot represents a page action that lets you subscribe to the RSS feed for the current page.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.getPopup(SharpKit.Google.Chrome.PageActionPopupDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the html document set as the popup for this browser action.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.getTitle(SharpKit.Google.Chrome.PageActionTitleDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the title of the browser action.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.hide(SharpKit.JavaScript.JsNumber)">
            <summary>
            Hides the page action.
            </summary>
            <param name="tabId">The id of the tab for which you want to modify the page action.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.setIcon(SharpKit.Google.Chrome.PageActionIconDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Sets the icon for the page action. The icon can be specified either as the path to an image file
            or as the pixel data from a canvas element. Either the path or the imageData property must be specified.
            </summary>
            <param name="details"></param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.setIcon(SharpKit.Google.Chrome.PageActionIconDetails)">
            <summary>
            Sets the icon for the page action. The icon can be specified either as the path to an image file
            or as the pixel data from a canvas element. Either the path or the imageData property must be specified.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.setPopup(SharpKit.Google.Chrome.PageActionPopupDetails)">
            <summary>
            Sets the html document to be opened as a popup when the user clicks on the page action's icon.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.setTitle(SharpKit.Google.Chrome.PageActionTitleDetails)">
            <summary>
            Sets the title of the page action. This is displayed in a tooltip over the page action.
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageAction.show(SharpKit.JavaScript.JsNumber)">
            <summary>
            Shows the page action. The page action is shown whenever the tab is selected.
            </summary>
            <param name="tabId">The id of the tab for which you want to modify the page action.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.pageAction.onClicked">
            <summary>
            Fired when a page action icon is clicked. This event will not fire if the page action has a popup.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionPopupDetails.popup">
            <summary>
            This property is available for setter operations only.
            The html file to show in a popup. If set to the empty string (''), no popup is shown.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionPopupDetails.tabId">
            <summary>
            for get operation: Specify the tab to get the popup from.
            for set operation:The id of the tab for which you want to modify the page action.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionTitleDetails.title">
            <summary>
            This property is available for setter operations only.
            The tooltip string.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionTitleDetails.tabId">
            <summary>
            for get operation: Specify the tab to get the title from.
            for set operation:The id of the tab for which you want to modify the page action.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionIconDetails.tabId">
            <summary>
            The id of the tab for which you want to modify the page action.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionIconDetails.imageData">
            <summary>
            ( optional ) Pixel data for an image. Must be an ImageData object (for example, from a canvas element).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionIconDetails.path">
            <summary>
            ( optional ) Relative path to an image in the extension to show in the browser action.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionIconDetails.iconIndex">
            <summary>
            ( optional ) Deprecated. The zero-based index into the icons vector specified in the manifest.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.pageCapture">
            <summary>
            The pageCapture API allows you to save a tab as MHTML.
            MHTML is a standard format supported by most browsers. It encapsulates in a single file a page and all its resources (CSS files, images..).
            Note that for security reasons a MHTML file can only be loaded from the file system and that it can only be loaded in the main frame.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.pageCapture.saveAsMHTML(SharpKit.Google.Chrome.PageCaptureDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Saves the content of the tab with given id as MHTML.
            </summary>
            <param name="details"></param>
            <param name="callback">Called when the MHTML has been generated.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageCaptureDetails.tabId">
            <summary>
            The id of the tab to save as MHTML.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.permissions">
            <summary>
            Use the chrome.permissions module to implement optional permissions.
            You can request optional permissions during your extension's regular application flow rather than at install time,
            so users understand why the permissions are needed and use only those that are necessary.
            For general information about permissions and details about each permission, see the permissions section of the manifest documentation.
            
            You can specify any of the following as optional permissions:
            host permissions
            appNotifications
            background
            bookmarks
            clipboardRead
            clipboardWrite
            contentSettings
            contextMenusk
            cookies
            debugger
            histokry
            idle
            management
            notifications
            pageCapture
            tabs
            topSites
            webNavigation
            webRequest
            webRequestBlocking
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.permissions.contains(SharpKit.Google.Chrome.Permissions,SharpKit.JavaScript.JsAction)">
            <summary>
            Checks if the extension has the specified permissions.
            </summary>
            <param name="permissions"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.permissions.getAll(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the extension's current set of permissions.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.permissions.remove(SharpKit.Google.Chrome.Permissions,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes access to the specified permissions. If there are any problems removing the permissions, chrome.extension.lastError will be set.
            </summary>
            <param name="permissions"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.permissions.remove(SharpKit.Google.Chrome.Permissions)">
            <summary>
            Removes access to the specified permissions. If there are any problems removing the permissions, chrome.extension.lastError will be set.
            </summary>
            <param name="permissions"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.permissions.request(SharpKit.Google.Chrome.Permissions,SharpKit.JavaScript.JsAction)">
            <summary>
            Requests access to the specified permissions. These permissions must be defined in the optional_permissions field of the manifest.
            If there are any problems requesting the permissions, chrome.extension.lastError will be set.
            </summary>
            <param name="permissions"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.permissions.request(SharpKit.Google.Chrome.Permissions)">
            <summary>
            Requests access to the specified permissions. These permissions must be defined in the optional_permissions field of the manifest.
            If there are any problems requesting the permissions, chrome.extension.lastError will be set.
            </summary>
            <param name="permissions"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.permissions.onAdded">
            <summary>
            Fired when the extension acquires new permissions.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.permissions.onRemoved">
            <summary>
            Fired when access to permissions has been removed from the extension.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Permissions.permissions">
            <summary>
            ( optional ) List of named permissions (does not include hosts or origins).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.privacy">
            <summary>
            Use the chrome.privacy module to control usage of the features in Chrome that can affect a user's privacy.
            This module relies on the ChromeSetting prototype of the type API for getting and setting Chrome's configuration.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.privacy.network">
            <summary>
            Settings that influence Chrome's handling of network connections in general.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.privacy.services">
            <summary>
            Settings that enable or disable features that require third-party network services provided by Google and your default search provider.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.privacy.websites">
            <summary>
            Settings that determine what information Chrome makes available to websites.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.PrivacyNetworkSetting">
            <summary>
            Settings that influence Chrome's handling of network connections in general.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyNetworkSetting.networkPredictionEnabled">
            <summary>
            If enabled, Chrome attempts to speed up your web browsing experience by pre-resolving DNS entries, prerendering sites (&lt;link rel='prefetch' ...>),
            and preemptively opening TCP and SSL connections to servers. This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.PrivacyServicesSetting">
            <summary>
            Settings that enable or disable features that require third-party network services provided by Google and your default search provider.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.alternateErrorPagesEnabled">
            <summary>
            If enabled, Chrome uses a web service to help resolve navigation errors. This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.autofillEnabled">
            <summary>
            If enabled, Chrome offers to automatically fill in forms. This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.NameinstantEnabled">
            <summary>
            If enabled, Chrome automatically performs and displays search requests for text you type into the Omnibox as you type it.
            This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.safeBrowsingEnabled">
            <summary>
            If enabled, Chrome does its best to protect you from phishing and malware. This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.searchSuggestEnabled">
            <summary>
            If enabled, Chrome sends the text you type into the Omnibox to your default search engine, which provides predictions of websites and searches that are likely completions of what you've typed so far.
            This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.spellingServiceEnabled">
            <summary>
            If enabled, Chrome uses a web service to help correct spelling errors. This preference's value is a boolean, defaulting to false.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyServicesSetting.translationServiceEnabled">
            <summary>
            If enabled, Chrome offers to translate pages that aren't in a language you read. This preference's value is a boolean, defaulting to true.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.PrivacyWebsitesSetting">
            <summary>
            Settings that determine what information Chrome makes available to websites.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyWebsitesSetting.thirdPartyCookiesAllowed">
            <summary>
            If disabled, Chrome blocks third-party sites from setting cookies. The value of this preference is of type boolean, and the default value is true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyWebsitesSetting.hyperlinkAuditingEnabled">
            <summary>
            If enabled, Chrome sends auditing pings when requested by a website (&lt;a ping>). The value of this preference is of type boolean, and the default value is true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyWebsitesSetting.referrersEnabled">
            <summary>
            If enabled, Chrome sends referer headers with your requests. Yes, the name of this preference doesn't match the misspelled header.
            No, we're not going to change it. The value of this preference is of type boolean, and the default value is true.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PrivacyWebsitesSetting.protectedContentEnabled">
            <summary>
            Available on ChromeOS only: If enabled, Chrome provides a unique ID to plugins in order to run protected content.
            The value of this preference is of type boolean, and the default value is true.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.proxy">
            <summary>
            Use the chrome.proxy module to manage Chrome's proxy settings.
            This module relies on the ChromeSetting prototype of the type API for getting and setting the proxy configuration.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.proxy.settings">
            <summary>
            Proxy settings to be used. The value of this setting is a ProxyConfig object
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.proxy.onProxyError">
            <summary>
            Notifies about proxy errors.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyErrorDetails.fatal">
            <summary>
            If true, the error was fatal and the network transaction was aborted. Otherwise, a direct connection is used instead.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyErrorDetails.error">
            <summary>
            The error description.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyErrorDetails.details">
            <summary>
            Additional details about the error such as a JavaScript runtime error..
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ProxyServer">
            <summary>
            An object encapsulating a single proxy server's specification.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyServer.scheme">
            <summary>
             ( optional enumerated string ["http", "https", "socks4", "socks5"] )
             The scheme (protocol) of the proxy server itself. Defaults to 'http'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyServer.host">
            <summary>
            The URI of the proxy server. This must be an ASCII hostname (in Punycode format). IDNA is not supported, yet.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyServer.port">
            <summary>
            ( optional ) The port of the proxy server. Defaults to a port that depends on the scheme.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ProxyRules">
            <summary>
            An object encapsulating the set of proxy rules for all protocols.
            Use either 'singleProxy' or (a subset of) 'proxyForHttp', 'proxyForHttps', 'proxyForFtp' and 'fallbackProxy'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyRules.singleProxy">
            <summary>
             ( optional )The proxy server to be used for all per-URL requests (that is http, https, and ftp).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyRules.proxyForHttp">
            <summary>
             ( optional ) The proxy server to be used for HTTP requests.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyRules.proxyForHttps">
            <summary>
             ( optional ) The proxy server to be used for HTTPS requests.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyRules.proxyForFtp">
            <summary>
             ( optional )The proxy server to be used for FTP requests.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyRules.fallbackProxy">
            <summary>
             ( optional )The proxy server to be used for everthing else or if any of the specific proxyFor... is not specified.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyRules.bypassList">
            <summary>
             ( optional ) List of servers to connect to without a proxy server.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.PacScript">
            <summary>
            An object holding proxy auto-config information. Exactly one of the fields should be non-empty.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PacScript.url">
            <summary>
            ( optional ) URL of the PAC file to be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PacScript.data">
            <summary>
            ( optional ) A PAC script.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PacScript.mandatory">
            <summary>
            ( optional ) If true, an invalid PAC script will prevent the network stack from falling back to direct connections. Defaults to false.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ProxyConfig">
            <summary>
            An object encapsulating a complete proxy configuration.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyConfig.rules">
            <summary>
            ( optional ) The proxy rules describing this configuration. Use this for 'fixed_servers' mode.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyConfig.pacScript">
            <summary>
            ( optional ) The proxy auto-config (PAC) script for this configuration. Use this for 'pac_script' mode.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ProxyConfig.mode">
            <summary>
            ( enumerated string ["direct", "auto_detect", "pac_script", "fixed_servers", "system"] )
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ProxyConfigModeType.direct">
            <summary>
            Never use a proxy
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ProxyConfigModeType.auto_detect">
            <summary>
            Auto detect proxy settings
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ProxyConfigModeType.pac_script">
            <summary>
            Use specified PAC script
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ProxyConfigModeType.fixed_servers">
            <summary>
            Manually specify proxy servers
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ProxyConfigModeType.system">
            <summary>
            Use system proxy settings
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.runtime">
            <summary>
            Warning: This API is still under development. It is only available for Chrome users on the dev early release channel. Learn more.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.runtime.getBackgroundPage(SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves the JavaScript 'window' object for the background page running inside the current extension.
            If the background page is transient, the system will ensure it is loaded before calling the callback. If there is no background page, an error is set.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.runtime.onBackgroundPageUnloadingSoon">
            <summary>
            Sent to the transient background page just before it is unloaded. This gives the extension opportunity to do some clean up.
            Note that since the page is unloading, any asynchronous operations started while handling this event are not guaranteed to complete.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.runtime.onInstalled">
            <summary>
            Fired when the extension is first installed.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.storage">
            <summary>
            Use the chrome.storage module to store, retrieve, and track changes to user data. This API has been optimized to meet the specific storage needs of extensions. It provides the same storage capabilities as the localStorage API with the following key differences:
            User data can be automatically synced with Chrome sync (using storage.sync).
            Your extension's content scripts can directly access user data without the need for a background page.
            A user's extension settings can be persisted even when using split incognito behavior.
            User data can be stored as objects (the localStorage API stores data in strings).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.storage.sync">
            <summary>
            Items under the "sync" namespace are synced using Chrome Sync.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.storage.local">
            <summary>
            Items under the "local" namespace are local to each machine.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.storage.onChanged">
            <summary>
            Fired when one or more items change.
            Listener parameters:
            changes ( object )
            Object mapping each key that changed to its corresponding StorageChange for that item.
            namespace ( string )
            The namespace ("sync" or "local") of the storage area the changes are for.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.SyncStorageChange">
            <summary>
            Items under the "sync" namespace are synced using Chrome Sync.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.clear(SharpKit.JavaScript.JsAction)">
            <summary>
            Removes all items from storage.
            </summary>
            <param name="callback"> ( optional ) Callback on success, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.clear">
            <summary>
            Removes all items from storage.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.get(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets one or more items from storage.
            </summary>
            <param name="keys">( optional string or array of string or object ) 
            A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).
            An empty list or object will return an empty result object. Pass in null to get the entire contents of storage.</param>
            <param name="callback">Callback with storage items, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.get(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString},SharpKit.JavaScript.JsAction)">
            <summary>
            Gets one or more items from storage.
            </summary>
            <param name="keys">( optional string or array of string or object ) 
            A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).
            An empty list or object will return an empty result object. Pass in null to get the entire contents of storage.</param>
            <param name="callback">Callback with storage items, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.get(System.Object,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets one or more items from storage.
            </summary>
            <param name="keys">( optional string or array of string or object ) 
            A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).
            An empty list or object will return an empty result object. Pass in null to get the entire contents of storage.</param>
            <param name="callback">Callback with storage items, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.get(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets one or more items from storage.
            </summary>
            <param name="callback">Callback with storage items, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.getBytesInUse(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the amount of space (in bytes) being used by one or more items.
            </summary>
            <param name="keys">( optional string or array of string )
            A single key or list of keys to get the total usage for. An empty list will return 0. Pass in null to get the total usage of all of storage.</param>
            <param name="callback">Callback with the amount of space being used by storage, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.getBytesInUse(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString},SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the amount of space (in bytes) being used by one or more items.
            </summary>
            <param name="keys">( optional string or array of string )
            A single key or list of keys to get the total usage for. An empty list will return 0. Pass in null to get the total usage of all of storage.</param>
            <param name="callback">Callback with the amount of space being used by storage, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.getBytesInUse(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the amount of space (in bytes) being used by one or more items.
            </summary>
            <param name="callback">Callback with the amount of space being used by storage, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.remove(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes one or more items from storage.
            </summary>
            <param name="keys">A single key or a list of keys for items to remove.</param>
            <param name="callback"> ( optional ) Callback on success, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.remove(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsString},SharpKit.JavaScript.JsAction)">
            <summary>
            Removes one or more items from storage.
            </summary>
            <param name="keys">A single key or a list of keys for items to remove.</param>
            <param name="callback"> ( optional ) Callback on success, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.remove(SharpKit.JavaScript.JsString)">
            <summary>
            Removes one or more items from storage.
            </summary>
            <param name="keys">A single key or a list of keys for items to remove.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.set(System.Object,SharpKit.JavaScript.JsAction)">
            <summary>
            Sets multiple items.
            </summary>
            <param name="items">Object specifying items to augment storage with. Values that cannot be serialized (functions, etc) will be ignored.</param>
            <param name="callback"> ( optional ) Callback on success, or on failure (in which case chrome.extension.lastError will be set).</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.StorageArea.set(System.Object)">
            <summary>
            Sets multiple items.
            </summary>
            <param name="items">Object specifying items to augment storage with. Values that cannot be serialized (functions, etc) will be ignored.</param>
        </member>
        <member name="F:SharpKit.Google.Chrome.SyncStorageChange.QUOTA_BYTES">
            <summary>
            The maximum total amount (in bytes) of data that can be stored in sync storage.
            Updates that would cause this limit to be exceeded fail immediately and set chrome.extension.lastError.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.SyncStorageChange.QUOTA_BYTES_PER_ITEM">
            <summary>
            The maximum size (in bytes) of each individual item in sync storage. Updates containing items larger than this limit will fail.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.SyncStorageChange.MAX_ITEMS">
            <summary>
            The maximum number of items that can be stored in sync storage. Updates that would cause this limit to be exceeded will fail
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.SyncStorageChange.MAX_WRITE_OPERATIONS_PER_HOUR">
            <summary>
            The maximum number of set, remove, or clear operations that can be performed each hour. Updates that would cause this limit to be exceeded fail.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.SyncStorageChange.MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE">
            <summary>
            The maximum number of set, remove, or clear operations that can be performed each minute, sustained over 10 minutes.
            Updates that would cause this limit to be exceeded fail.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.LocalStorageChange">
            <summary>
            Items under the "local" namespace are local to each machine.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.LocalStorageChange.QUOTA_BYTES">
            <summary>
            The maximum amount (in bytes) of data that can be stored in local storage.
            This value will be ignored if the extension has the unlimitedStorage permission. Updates that would cause this limit to be exceeded fail.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.StorageChange.oldValue">
            <summary>
            The old value of the item, if there was an old value.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.StorageChange.newValue">
            <summary>
            The new value of the item, if there is a new value.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.captureVisibleTab(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsCaptureVisibleTabOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Captures the visible area of the currently active tab in the specified window. You must have host permission for the URL displayed by the tab.
            </summary>
            <param name="windowId">( optional ) The target window. Defaults to the current window.</param>
            <param name="options">( optional ) Set parameters of image capture, such as the format of the resulting image.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.captureVisibleTab(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Captures the visible area of the currently active tab in the specified window. You must have host permission for the URL displayed by the tab.
            </summary>
            <param name="windowId">( optional ) The target window. Defaults to the current window.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.captureVisibleTab(SharpKit.JavaScript.JsAction)">
            <summary>
            Captures the visible area of the currently active tab in the specified window. You must have host permission for the URL displayed by the tab.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.connect(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsConnectInfo)">
            <summary>
            Connects to the content script(s) in the specified tab.
            The chrome.extension.onConnect event is fired in each content script running in the specified tab for the current extension.
            For more details, see Content Script Messaging.
            </summary>
            <param name="tabId"></param>
            <param name="connectInfo"></param>
            <returns>A port that can be used to communicate with the content scripts running in the specified tab.
            The port's onDisconnect event is fired if the tab closes or does not exist.</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.connect(SharpKit.JavaScript.JsNumber)">
            <summary>
            Connects to the content script(s) in the specified tab.
            The chrome.extension.onConnect event is fired in each content script running in the specified tab for the current extension.
            For more details, see Content Script Messaging.
            </summary>
            <param name="tabId"></param>
            <returns>A port that can be used to communicate with the content scripts running in the specified tab.
            The port's onDisconnect event is fired if the tab closes or does not exist.</returns>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.create(SharpKit.Google.Chrome.TabsCreateProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Creates a new tab. Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="createProperties"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.create(SharpKit.Google.Chrome.TabsCreateProperties)">
            <summary>
            Creates a new tab. Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="createProperties"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.detectLanguage(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Detects the primary language of the content in a tab.
            </summary>
            <param name="tabId"> ( optional ) Defaults to the active tab of the current window.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.detectLanguage(SharpKit.JavaScript.JsAction)">
            <summary>
            Detects the primary language of the content in a tab.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.executeScript(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsExecuteScriptDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Injects JavaScript code into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="tabId">( optional ) The ID of the tab in which to run the script; defaults to the active tab of the current window.</param>
            <param name="details">Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time.</param>
            <param name="callback">( optional ) Called after all the JavaScript has been executed.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.executeScript(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsExecuteScriptDetails)">
            <summary>
            Injects JavaScript code into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="tabId">( optional ) The ID of the tab in which to run the script; defaults to the active tab of the current window.</param>
            <param name="details">Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.executeScript(SharpKit.Google.Chrome.TabsExecuteScriptDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Injects JavaScript code into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="details">Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time.</param>
            <param name="callback">( optional ) Called after all the JavaScript has been executed.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.executeScript(SharpKit.Google.Chrome.TabsExecuteScriptDetails)">
            <summary>
            Injects JavaScript code into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="details">Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.get(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves details about the specified tab.
            </summary>
            <param name="tabId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.getCurrent(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the tab that this script call is being made from. May be undefined if called from a non-tab context (for example: a background page or popup view).
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.highlight(SharpKit.Google.Chrome.TabsHighlightInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Highlights the given tabs.
            </summary>
            <param name="highlightInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.insertCSS(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsInsertCSSDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Injects CSS into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="tabId">( optional ) The ID of the tab in which to insert the CSS; defaults to the active tab of the current window.</param>
            <param name="details">Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time.</param>
            <param name="callback">( optional ) Called when all the CSS has been inserted.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.insertCSS(SharpKit.Google.Chrome.TabsInsertCSSDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Injects CSS into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="details">Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time.</param>
            <param name="callback">( optional ) Called when all the CSS has been inserted.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.insertCSS(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsInsertCSSDetails)">
            <summary>
            Injects CSS into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="tabId">( optional ) The ID of the tab in which to insert the CSS; defaults to the active tab of the current window.</param>
            <param name="details">Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.insertCSS(SharpKit.Google.Chrome.TabsInsertCSSDetails)">
            <summary>
            Injects CSS into a page. For details, see the programmatic injection section of the content scripts doc.
            </summary>
            <param name="details">Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.move(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsMoveProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Moves one or more tabs to a new position within its window, or to a new window. Note that tabs can only be moved to and from normal (window.type === "normal") windows.
            </summary>
            <param name="tabIds">The tab or list of tabs to move.</param>
            <param name="moveProperties"></param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.move(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsMoveProperties)">
            <summary>
            Moves one or more tabs to a new position within its window, or to a new window. Note that tabs can only be moved to and from normal (window.type === "normal") windows.
            </summary>
            <param name="tabIds">The tab or list of tabs to move.</param>
            <param name="moveProperties"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.move(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsNumber},SharpKit.Google.Chrome.TabsMoveProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Moves one or more tabs to a new position within its window, or to a new window. Note that tabs can only be moved to and from normal (window.type === "normal") windows.
            </summary>
            <param name="tabIds">The tab or list of tabs to move.</param>
            <param name="moveProperties"></param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.move(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsNumber},SharpKit.Google.Chrome.TabsMoveProperties)">
            <summary>
            Moves one or more tabs to a new position within its window, or to a new window. Note that tabs can only be moved to and from normal (window.type === "normal") windows.
            </summary>
            <param name="tabIds">The tab or list of tabs to move.</param>
            <param name="moveProperties"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.query(SharpKit.Google.Chrome.TabsQueryInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets all tabs that have the specified properties, or all tabs if no properties are specified.
            </summary>
            <param name="queryInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.name(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsReloadProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Reload a tab.
            </summary>
            <param name="tabId">( optional ) The ID of the tab to reload; defaults to the selected tab of the current window.</param>
            <param name="reloadProperties">( optional ) </param>
            <param name="callback">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.name(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsReloadProperties)">
            <summary>
            Reload a tab.
            </summary>
            <param name="tabId">( optional ) The ID of the tab to reload; defaults to the selected tab of the current window.</param>
            <param name="reloadProperties">( optional ) </param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.name(SharpKit.JavaScript.JsNumber)">
            <summary>
            Reload a tab.
            </summary>
            <param name="tabId">( optional ) The ID of the tab to reload; defaults to the selected tab of the current window.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.name">
            <summary>
            Reload a tab.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.remove(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Closes one or more tabs. Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="tabIds">The tab or list of tabs to close.</param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.remove(SharpKit.JavaScript.JsNumber)">
            <summary>
            Closes one or more tabs. Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="tabIds">The tab or list of tabs to close.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.remove(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsNumber},SharpKit.JavaScript.JsAction)">
            <summary>
            Closes one or more tabs. Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="tabIds">The tab or list of tabs to close.</param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.remove(SharpKit.JavaScript.JsArray{SharpKit.JavaScript.JsNumber})">
            <summary>
            Closes one or more tabs. Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="tabIds">The tab or list of tabs to close.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.sendMessage(SharpKit.JavaScript.JsNumber,System.Object,SharpKit.JavaScript.JsAction{System.Object})">
            <summary>
            Sends a single message to the content script(s) in the specified tab, with an optional callback to run when a response is sent back.
            The chrome.extension.onMessage event is fired in each content script running in the specified tab for the current extension.
            </summary>
            <param name="tabId"></param>
            <param name="message"></param>
            <param name="responseCallback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.sendMessage(SharpKit.JavaScript.JsNumber,System.Object)">
            <summary>
            Sends a single message to the content script(s) in the specified tab, with an optional callback to run when a response is sent back.
            The chrome.extension.onMessage event is fired in each content script running in the specified tab for the current extension.
            </summary>
            <param name="tabId"></param>
            <param name="message"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.update(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsUpdateProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Modifies the properties of a tab. Properties that are not specified in updateProperties are not modified.
            Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="tabId">( optional ) Defaults to the selected tab of the current window.</param>
            <param name="updateProperties"></param>
            <param name="callback"> ( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.update(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.TabsUpdateProperties)">
            <summary>
            Modifies the properties of a tab. Properties that are not specified in updateProperties are not modified.
            Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="tabId">( optional ) Defaults to the selected tab of the current window.</param>
            <param name="updateProperties"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.update(SharpKit.Google.Chrome.TabsUpdateProperties)">
            <summary>
            Modifies the properties of a tab. Properties that are not specified in updateProperties are not modified.
            Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="updateProperties"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tabs.update(SharpKit.Google.Chrome.TabsUpdateProperties,SharpKit.JavaScript.JsAction)">
            <summary>
            Modifies the properties of a tab. Properties that are not specified in updateProperties are not modified.
            Note: This function can be used without requesting the 'tabs' permission in the manifest.
            </summary>
            <param name="updateProperties"></param>
            <param name="callback"> ( optional )</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onActivated">
            <summary>
            Fires when the active tab in a window changes.
            Note that the tab's URL may not be set at the time this event fired, but you can listen to onUpdated events to be notified when a URL is set.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onAttached">
            <summary>
            Fired when a tab is attached to a window, for example because it was moved between windows.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onCreated">
            <summary>
            Fired when a tab is created.
            Note that the tab's URL may not be set at the time this event fired, but you can listen to onUpdated events to be notified when a URL is set.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onDetached">
            <summary>
            Fired when a tab is detached from a window, for example because it is being moved between windows.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onHighlighted">
            <summary>
            Fired when the highlighted or selected tabs in a window changes.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onMoved">
            <summary>
            Fired when a tab is moved within a window. Only one move event is fired, representing the tab the user directly moved.
            Move events are not fired for the other tabs that must move in response.
            This event is not fired when a tab is moved between windows. For that, see onDetached.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onRemoved">
            <summary>
            Fired when a tab is closed. Note: A listener can be registered for this event without requesting the 'tabs' permission in the manifest.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.tabs.onUpdated">
            <summary>
            Fired when a tab is updated.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TabsCaptureVisibleTabOptions">
            <summary>
            Set parameters of image capture, such as the format of the resulting image.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCaptureVisibleTabOptions.format">
            <summary>
            ( optional enumerated string ["jpeg", "png"] ) The format of the resulting image. Default is jpeg.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCaptureVisibleTabOptions.quality">
            <summary>
            When format is 'jpeg', controls the quality of the resulting image. This value is ignored for PNG images.
            As quality is decreased, the resulting image will have more visual artifacts, and the number of bytes needed to store it will decrease.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsConnectInfo.name">
            <summary>
             ( optional ) Will be passed into onConnect for content scripts that are listening for the connection event.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCreateProperties.windowId">
            <summary>
            ( optional ) The window to create the new tab in. Defaults to the current window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCreateProperties.index">
            <summary>
            ( optional ) The position the tab should take in the window. The provided value will be clamped to between zero and the number of tabs in the window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCreateProperties.url">
            <summary>
            ( optional ) The URL to navigate the tab to initially. Fully-qualified URLs must include a scheme (i.e. 'http://www.google.com', not 'www.google.com').
            Relative URLs will be relative to the current page within the extension. Defaults to the New Tab Page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCreateProperties.active">
            <summary>
            ( optional ) Whether the tab should become the active tab in the window. Defaults to true
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCreateProperties.pinned">
            <summary>
            ( optional ) Whether the tab should be pinned. Defaults to false
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsCreateProperties.openerTabId">
            <summary>
            ( optional ) The ID of the tab that opened this tab. If specified, the opener tab must be in the same window as the newly created tab.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TabsExecuteScriptDetails">
            <summary>
            Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsExecuteScriptDetails.code">
            <summary>
            ( optional ) JavaScript code to execute.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsExecuteScriptDetails.windowId">
            <summary>
            ( optional ) The window to create the new tab in. Defaults to the current window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsExecuteScriptDetails.file">
            <summary>
            ( optional ) JavaScript file to execute.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsExecuteScriptDetails.allFrames">
            <summary>
            ( optional ) If allFrames is true, this function injects script into all frames of current page.
            By default, it's false and script is injected only into the top main frame.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsExecuteScriptDetails.runAt">
            <summary>
            ( optional enumerated string ["document_start", "document_end", "document_idle"] )
            The soonest that the script will be injected into the tab. Defaults to "document_idle".
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsHighlightInfo.windowId">
            <summary>
            ( optional ) The window that contains the tabs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsHighlightInfo.tabs">
            <summary>
            One or more tab indices to highlight.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsHighlightInfo.tabsNumber">
            <summary>
            One or more tab indices to highlight.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TabsInsertCSSDetails">
            <summary>
            Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsInsertCSSDetails.code">
            <summary>
            ( optional ) CSS code to be injected.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsInsertCSSDetails.file">
            <summary>
            ( optional ) CSS file to be injected.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsInsertCSSDetails.allFrames">
            <summary>
            ( optional ) If allFrames is true, this function injects CSS text into all frames of current page.
            By default, it's false and CSS is injected only into the top main frame.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsInsertCSSDetails.runAt">
            <summary>
            ( optional enumerated string ["document_start", "document_end", "document_idle"] )
            The soonest that the CSS will be injected into the tab. Defaults to "document_idle".
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsMoveProperties.windowId">
            <summary>
            ( optional ) Defaults to the window the tab is currently in.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsMoveProperties.index">
            <summary>
            The position to move the window to. -1 will place the tab at the end of the window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.active">
            <summary>
            ( optional ) Whether the tabs are active in their windows.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.pinned">
            <summary>
            ( optional ) Whether the tabs are pinned.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.highlighted">
            <summary>
            ( optional ) Whether the tabs are highlighted.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.currentWindow">
            <summary>
            ( optional ) Whether the tabs are in the current window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.lastFocusedWindow">
            <summary>
            ( optional ) Whether the tabs are in the last focused window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.status">
            <summary>
            ( optional enumerated string ["loading", "complete"] ) Whether the tabs have completed loading.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.title">
            <summary>
            ( optional ) Match page titles against a pattern.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.url">
            <summary>
            ( optional ) Match tabs against a URL pattern.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.windowId">
            <summary>
            ( optional ) The ID of the parent window, or chrome.windows.WINDOW_ID_CURRENT for the current window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.windowType">
            <summary>
            ( optional ) The type of window the tabs are in.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsQueryInfo.index">
            <summary>
            ( optional ) The position of the tabs within their windows.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsReloadProperties.bypassCache">
            <summary>
            Whether using any local cache. Default is false.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsUpdateProperties.url">
            <summary>
            ( optional ) A URL to navigate the tab to.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsUpdateProperties.active">
            <summary>
            ( optional ) Whether the tab should be active.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsUpdateProperties.highlighted">
            <summary>
            ( optional ) Adds or removes the tab from the current selection.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsUpdateProperties.pinned">
            <summary>
            ( optional ) Whether the tab should be pinned.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsUpdateProperties.openerTabId">
            <summary>
            ( optional ) The ID of the tab that opened this tab. If specified, the opener tab must be in the same window as this tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsActiveInfo.tabId">
            <summary>
            The ID of the tab that has become active.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsActiveInfo.windowId">
            <summary>
            The ID of the window the active tab changed inside of.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsOnHighlightInfo.windowId">
            <summary>
            The window whose tabs changed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsOnHighlightInfo.tabIds">
            <summary>
            All highlighted tabs in the window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsRemoveInfo.isWindowClosing">
            <summary>
            True when the tab is being closed because its window is being closed.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TabsChangeInfo">
            <summary>
            Lists the changes to the state of the tab that was updated.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsChangeInfo.status">
            <summary>
             ( optional ) The status of the tab. Can be either loading or complete.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsChangeInfo.url">
            <summary>
            The tab's URL if it has changed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TabsChangeInfo.pinned">
            <summary>
            ( optional ) The tab's new pinned state.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.id">
            <summary>
            The ID of the tab. Tab IDs are unique within a browser session.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.index">
            <summary>
            The zero-based index of the tab within its window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.windowId">
            <summary>
            The ID of the window the tab is contained within.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.openerTabId">
            <summary>
            ( optional ) The ID of the tab that opened this tab, if any. This will only be present if the opener tab still exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.highlighted">
            <summary>
            Whether the tab is highlighted.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.active">
            <summary>
            Whether the tab is active in its window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.pinned">
            <summary>
            Whether the tab is pinned.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.url">
            <summary>
            The URL the tab is displaying.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.title">
            <summary>
            ( optional ) The title of the tab. This may not be available if the tab is loading.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.favIconUrl">
            <summary>
            ( optional ) The URL of the tab's favicon. This may not be available if the tab is loading.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.status">
            <summary>
            ( optional ) Either loading or complete.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Tab.incognito">
            <summary>
            ( optional ) Whether the tab is in an incognito window.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.topSites">
            <summary>
            The top sites module allows access to the top sites that are displayed on the new tab page.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.topSites.get(SharpKit.JavaScript.JsAction{SharpKit.Google.Chrome.MostVisitedURL})">
            <summary>
            Gets a list of top sites.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="T:SharpKit.Google.Chrome.MostVisitedURL">
            <summary>
            An object encapsulating a most visited URL, such as the URLs on the new tab page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.MostVisitedURL.url">
            <summary>
            The most visited URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.MostVisitedURL.title">
            <summary>
            The title of the page
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.tts">
            <summary>
            Use the chrome.tts module to play synthesized text-to-speech (TTS) from your extension or packaged app.
            See also the related ttsEngine module, which allows an extension to implement a speech engine.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.tts.getVoices(SharpKit.JavaScript.JsAction{SharpKit.JavaScript.JsArray{SharpKit.Google.Chrome.TtsVoice}})">
            <summary>
            Gets an array of all available voices.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tts.isSpeaking(SharpKit.JavaScript.JsAction{System.Boolean})">
            <summary>
            Checks whether the engine is currently speaking.
            On Mac OS X, the result is true whenever the system speech engine is speaking, even if the speech wasn't initiated by Chrome.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tts.speak(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.TtsSpeakOptions,SharpKit.JavaScript.JsAction)">
            <summary>
            Speaks text using a text-to-speech engine.
            </summary>
            <param name="utterance">The text to speak, either plain text or a complete, well-formed SSML document.
            Speech engines that do not support SSML will strip away the tags and speak the text. The maximum length of the text is 32,768 characters.</param>
            <param name="options">( optional )The speech options.</param>
            <param name="callback">( optional )Called right away, before speech finishes. Check chrome.extension.lastError to make sure there were no errors.
            Use options.onEvent to get more detailed feedback.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tts.speak(SharpKit.JavaScript.JsString,SharpKit.Google.Chrome.TtsSpeakOptions)">
            <summary>
            Speaks text using a text-to-speech engine.
            </summary>
            <param name="utterance">The text to speak, either plain text or a complete, well-formed SSML document.
            Speech engines that do not support SSML will strip away the tags and speak the text. The maximum length of the text is 32,768 characters.</param>
            <param name="options">( optional )The speech options.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.tts.speak(SharpKit.JavaScript.JsString)">
            <summary>
            Speaks text using a text-to-speech engine.
            </summary>
            <param name="utterance">The text to speak, either plain text or a complete, well-formed SSML document.
            Speech engines that do not support SSML will strip away the tags and speak the text. The maximum length of the text is 32,768 characters.</param>
        </member>
        <member name="T:SharpKit.Google.Chrome.TtsSpeakOptions">
            <summary>
            The speech options.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.enqueue">
            <summary>
            ( optional ) If true, enqueues this utterance if TTS is already in progress.
            If false (the default), interrupts any current speech and flushes the speech queue before speaking this new utterance.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.voiceName">
            <summary>
            ( optional ) The name of the voice to use for synthesis. If empty, uses any available voice.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.extensionId">
            <summary>
            ( optional )The extension ID of the speech engine to use, if known.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.lang">
            <summary>
            ( optional ) The language to be used for synthesis, in the form language-region. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.gender">
            <summary>
            ( optional enumerated string ["male", "female"] )
            Gender of voice for synthesized speech.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.rate">
            <summary>
            ( optional ) Speaking rate relative to the default rate for this voice. 1.0 is the default rate, normally around 180 to 220 words per minute.
            2.0 is twice as fast, and 0.5 is half as fast. Values below 0.1 or above 10.0 are strictly disallowed,
            but many voices will constrain the minimum and maximum rates further—for example a particular voice may not actually speak faster than 3 times normal
            even if you specify a value larger than 3.0.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.pitch">
            <summary>
            ( optional ) Speaking pitch between 0 and 2 inclusive, with 0 being lowest and 2 being highest. 1.0 corresponds to a voice's default pitch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.volume">
            <summary>
            ( optional ) Speaking volume between 0 and 1 inclusive, with 0 being lowest and 1 being highest, with a default of 1.0.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.requiredEventTypes">
            <summary>
            ( optional ) The TTS event types the voice must support.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.desiredEventTypes">
            <summary>
            ( optional )The TTS event types that you are interested in listening to. If missing, all event types may be sent.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsSpeakOptions.onEvent">
            <summary>
            ( optional )This function is called with events that occur in the process of speaking the utterance.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TtsEvent">
            <summary>
            An event from the TTS engine to communicate the status of an utterance.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsEvent.type">
            <summary>
            ( enumerated string ["start", "end", "word", "sentence", "marker", "interrupted", "cancelled", "error"] )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsEvent.charIndex">
            <summary>
            ( optional ) The index of the current character in the utterance.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsEvent.errorMessage">
            <summary>
            ( optional ) The error description, if the event type is 'error'.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.EventType">
            <summary>
            Each event includes an event type, the character index of the current speech relative to the utterance, and for error events, an optional error message.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.start">
            <summary>
            The engine has started speaking the utterance.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.word">
            <summary>
             A word boundary was reached. Use event.charIndex to determine the current speech position.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.sentence">
            <summary>
             A sentence boundary was reached. Use event.charIndex to determine the current speech position.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.marker">
            <summary>
            An SSML marker was reached. Use event.charIndex to determine the current speech position
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.end">
            <summary>
            The engine has finished speaking the utterance.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.interrupted">
            <summary>
            This utterance was interrupted by another call to speak() or stop() and did not finish.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.cancelled">
            <summary>
             This utterance was queued, but then cancelled by another call to speak() or stop() and never began to speak at all.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.EventType.error">
            <summary>
             An engine-specific error occurred and this utterance cannot be spoken. Check event.errorMessage for details.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.TtsVoice">
            <summary>
            A description of a voice available for speech synthesis.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsVoice.voiceName">
            <summary>
            ( optional )The name of the voice.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsVoice.lang">
            <summary>
            ( optional ) The language that this voice supports, in the form language-region. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsVoice.gender">
            <summary>
            ( optional )This voice's gender.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsVoice.extensionId">
            <summary>
            ( optional )The ID of the extension providing this voice.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.TtsVoice.eventTypes">
            <summary>
            ( optional )All of the callback event types that this voice is capable of sending.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.types">
            <summary>
            The chrome.types module contains type declarations for Chrome.
            Currently this comprises only a prototype for giving other modules access to manage Chrome browser settings.
            This prototype is used, for example, for chrome.proxy.settings.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ChromeSetting">
            <summary>
            An interface which allows access to a Chrome browser setting.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.ChromeSetting.clear(SharpKit.Google.Chrome.ChromeSettingClearDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Clears the setting. This way default settings can become effective again.
            </summary>
            <param name="details">What setting to clear.</param>
            <param name="callback">( optional )Called after the setting has been cleared.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ChromeSetting.clear(SharpKit.Google.Chrome.ChromeSettingClearDetails)">
            <summary>
            Clears the setting. This way default settings can become effective again.
            </summary>
            <param name="details">What setting to clear.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ChromeSetting.get(SharpKit.Google.Chrome.ChromeSettingGetDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the value of a setting.
            </summary>
            <param name="details">What setting to consider.</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ChromeSetting.set(SharpKit.Google.Chrome.ChromeSettingSetDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Sets the value of a setting.
            </summary>
            <param name="details">What setting to change.</param>
            <param name="callback"> ( optional )Called after the setting has been set.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.ChromeSetting.set(SharpKit.Google.Chrome.ChromeSettingSetDetails)">
            <summary>
            Sets the value of a setting.
            </summary>
            <param name="details">What setting to change.</param>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSetting.onChange">
            <summary>
            Fired when the value of the setting changes.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ChromeSettingClearDetails">
            <summary>
            What setting to clear.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingClearDetails.scope">
            <summary>
            ( optional enumerated string ["regular", "incognito_persistent", "incognito_session_only"] )
            Where to clear the setting (default: regular). 
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingScopeType.regular">
            <summary>
            setting for the regular profile (which is inherited by the incognito profile if not overridden elsewhere),
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingScopeType.regular_only">
            <summary>
            setting for the regular profile only (not inherited by the incognito profile),
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingScopeType.incognito_persistent">
            <summary>
            setting for the incognito profile that survives browser restarts (overrides regular preferences),
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingScopeType.incognito_session_only">
            <summary>
            setting for the incognito profile that can only be set during an incognito session and is deleted when the incognito session ends
            (overrides regular and incognito_persistent preferences).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ChromeSettingGetDetails">
            <summary>
            What setting to consider.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingGetDetails.incognito">
            <summary>
             ( optional ) Whether to return the setting that applies to the incognito session (default false).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ChromeSettingSetDetails">
            <summary>
            What setting to change.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingSetDetails.value">
            <summary>
            The value of the setting. 
            Note that every setting has a specific value type, which is described together with the setting. An extension should not set a value of a different type.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingSetDetails.scope">
            <summary>
            ( optional enumerated string ["regular", "regular_only", "incognito_persistent", "incognito_session_only"] )
            Where to set the setting (default: regular).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingChangeDetails.value">
            <summary>
            The value of the setting.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingChangeDetails.levelOfControl">
            <summary>
            ( enumerated string ["not_controllable", "controlled_by_other_extensions", "controllable_by_this_extension", "controlled_by_this_extension"] )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ChromeSettingChangeDetails.incognitoSpecific">
            <summary>
            ( optional )
            Whether the value that has changed is specific to the incognito session.
            This property will only be present if the user has enabled the extension in incognito mode.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingLevelOfControl.not_controllable">
            <summary>
            cannot be controlled by any extension
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingLevelOfControl.controlled_by_other_extensions">
            <summary>
            controlled by extensions with higher precedence
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingLevelOfControl.controllable_by_this_extension">
            <summary>
            can be controlled by this extension
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.ChromeSettingLevelOfControl.controlled_by_this_extension">
            <summary>
             controlled by this extension
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.webNavigation">
            <summary>
            Use the chrome.webNavigation module to receive notifications about the status of navigations requests in-flight.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.webNavigation.getAllFrames(SharpKit.Google.Chrome.WebNavigationAllFramesDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves information about all frames of a given tab.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.webNavigation.getFrame(SharpKit.Google.Chrome.WebNavigationFrameDetails,SharpKit.JavaScript.JsAction)">
            <summary>
            Retrieves information about the given frame. A frame refers to an &lt;iframe> or a &lt;frame> of a web page and is identified by a tab ID and a frame ID.
            </summary>
            <param name="details"></param>
            <param name="callback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onBeforeNavigate">
            <summary>
            Fired when a navigation is about to occur.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onCommitted">
            <summary>
            Fired when a navigation is committed. The document (and the resources it refers to, such as images and subframes) might still be downloading,
            but at least part of the document has been received from the server and the browser has decided to switch to the new document.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onCompleted">
            <summary>
            Fired when a document, including the resources it refers to, is completely loaded and initialized.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onCreatedNavigationTarget">
            <summary>
            Fired when a new window, or a new tab in an existing window, is created to host a navigation.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onDOMContentLoaded">
            <summary>
            Fired when the page's DOM is fully constructed, but the referenced resources may not finish loading.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onErrorOccurred">
            <summary>
            Fired when an error occurs and the navigation is aborted. This can happen if either a network error occurred, or the user aborted the navigation.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webNavigation.onReferenceFragmentUpdated">
            <summary>
            Fired when the reference fragment of a frame was updated. All future events for that frame will use the updated URL.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.WebNavigationAllFramesDetails">
            <summary>
            Information about the tab to retrieve all frames from.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationAllFramesDetails.tabId">
            <summary>
            The ID of the tab.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.WebNavigationFrameDetails">
            <summary>
            Information about the frame to retrieve information about.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationFrameDetails.tabId">
            <summary>
            The ID of the tab in which the frame is.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationFrameDetails.frameId">
            <summary>
            The ID of the frame in the given tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationBeforeNavigateDetails.tabId">
            <summary>
            The ID of the tab in which the navigation is about to occur.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationBeforeNavigateDetails.frameId">
            <summary>
            0 indicates the navigation happens in the tab content window; a positive value indicates navigation in a subframe. Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationBeforeNavigateDetails.timeStamp">
            <summary>
            The time when the browser was about to start the navigation, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCommittedDetails.tabId">
            <summary>
            The ID of the tab in which the navigation is about to occur.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCommittedDetails.frameId">
            <summary>
            0 indicates the navigation happens in the tab content window; a positive value indicates navigation in a subframe. Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCommittedDetails.transitionType">
            <summary>
            ( enumerated string ["link", "typed", "auto_bookmark", "auto_subframe", "manual_subframe", "generated", "start_page", "form_submit", "reload", "keyword", "keyword_generated"] )
            Cause of the navigation. The same transition types as defined in the history API are used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCommittedDetails.transitionQualifiers">
            <summary>
            ( array of string ["client_redirect", "server_redirect", "forward_back", "from_address_bar"] )
            A list of transition qualifiers.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCommittedDetails.timeStamp">
            <summary>
            The time when the navigation was committed, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCompletedDetails.tabId">
            <summary>
            The ID of the tab in which the navigation occurs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCompletedDetails.frameId">
            <summary>
            0 indicates the navigation happens in the tab content window; a positive value indicates navigation in a subframe. Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCompletedDetails.timeStamp">
            <summary>
            The time when the document finished loading, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCreatedNavigationTargetDetails.sourceTabId">
            <summary>
            The ID of the tab in which the navigation is triggered.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCreatedNavigationTargetDetails.sourceFrameId">
            <summary>
            The ID of the frame with sourceTabId in which the navigation is triggered. 0 indicates the main frame.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCreatedNavigationTargetDetails.tabId">
            <summary>
            The ID of the tab in which the url is opened
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationCreatedNavigationTargetDetails.timeStamp">
            <summary>
            The time when the browser was about to create a new view, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationDOMContentLoadedDetails.tabId">
            <summary>
            The ID of the tab in which the navigation occurs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationDOMContentLoadedDetails.frameId">
            <summary>
            0 indicates the navigation happens in the tab content window; a positive value indicates navigation in a subframe. Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationDOMContentLoadedDetails.timeStamp">
            <summary>
            The time when the page's DOM was fully constructed, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationErrorOccurredDetails.tabId">
            <summary>
            The ID of the tab in which the navigation occurs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationErrorOccurredDetails.frameId">
            <summary>
            0 indicates the navigation happens in the tab content window; a positive value indicates navigation in a subframe. Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationErrorOccurredDetails.error">
            <summary>
            The error description.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationErrorOccurredDetails.timeStamp">
            <summary>
            The time when the error occurred, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationReferenceFragmentUpdatedDetails.tabId">
            <summary>
            The ID of the tab in which the navigation occurs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationReferenceFragmentUpdatedDetails.frameId">
            <summary>
            0 indicates the navigation happens in the tab content window; a positive value indicates navigation in a subframe. Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationReferenceFragmentUpdatedDetails.transitionType">
            <summary>
            ( enumerated string ["link", "typed", "auto_bookmark", "auto_subframe", "manual_subframe", "generated", "start_page", "form_submit", "reload", "keyword", "keyword_generated"] )
            Cause of the navigation. The same transition types as defined in the history API are used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationReferenceFragmentUpdatedDetails.transitionQualifiers">
            <summary>
            ( array of string ["client_redirect", "server_redirect", "forward_back", "from_address_bar"] )
            A list of transition qualifiers.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebNavigationReferenceFragmentUpdatedDetails.timeStamp">
            <summary>
            The time when the navigation was committed, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionQualifiers.client_redirect">
            <summary>
            One or more redirects caused by JavaScript or meta refresh tags on the page happened during the navigation.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionQualifiers.server_redirect">
            <summary>
            One or more redirects caused by HTTP headers sent from the server happened during the navigation.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionQualifiers.forward_back">
            <summary>
            The user used the Forward or Back button to initiate the navigation.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.TransitionQualifiers.from_address_bar">
            <summary>
            The user initiated the navigation from the address bar (aka Omnibox).
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.webRequest.handlerBehaviorChanged(SharpKit.JavaScript.JsAction)">
            <summary>
            Needs to be called when the behavior of the webRequest handlers has changed to prevent incorrect handling due to caching.
            This function call is expensive. Don't call it often.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onAuthRequired">
            <summary>
            Fired when an authentication failure is received. The listener has three options: it can provide authentication credentials,
            it can cancel the request and display the error page, or it can take no action on the challenge.
            If bad user credentials are provided, this may be called multiple times for the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onBeforeRedirect">
            <summary>
            Fired when a server-initiated redirect is about to occur.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onBeforeRequest">
            <summary>
            Fired when a request is about to occur.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onBeforeSendHeaders">
            <summary>
            Fired before sending an HTTP request, once the request headers are available.
            This may occur after a TCP connection is made to the server, but before any HTTP data is sent.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onCompleted">
            <summary>
            Fired when a request is completed.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onErrorOccurred">
            <summary>
            Fired when an error occurs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onHeadersReceived">
            <summary>
            Fired when HTTP response headers of a request have been received.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onResponseStarted">
            <summary>
            Fired when the first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.webRequest.onSendHeaders">
            <summary>
            Fired just before a request is going to be sent to the server (modifications of previous onBeforeSendHeaders callbacks are visible by the time onSendHeaders is fired).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.RequestFilter">
            <summary>
            An object describing filters to apply to webRequest events.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestFilter.urls">
            <summary>
            A list of URLs or URL patterns. Requests that cannot match any of the URLs will be filtered out.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestFilter.types">
            <summary>
            ( optional array of string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            A list of request types. Requests that cannot match any of the types will be filtered out.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestFilter.tabId">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.RequestFilter.windowId">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.HttpHeaders">
            <summary>
            An array of HTTP headers. Each header is represented as a dictionary containing the keys name and either value or binaryValue.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HttpHeaders.name">
            <summary>
            Name of the HTTP header.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HttpHeaders.value">
            <summary>
            ( optional ) Value of the HTTP header if it can be represented by UTF-8.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.HttpHeaders.binaryValue">
            <summary>
            ( optional ) Value of the HTTP header if it cannot be represented by UTF-8, stored as individual byte values (0..255).
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.BlockingResponse">
            <summary>
            Returns value for event handlers that have the 'blocking' extraInfoSpec applied. Allows the event handler to modify network requests.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BlockingResponse.cancel">
            <summary>
            ( optional ) If true, the request is cancelled. Used in onBeforeRequest, this prevents the request from being sent.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BlockingResponse.redirectUrl">
            <summary>
            ( optional ) Only used as a response to the onBeforeRequest event. If set, the original request is prevented from being sent and is instead redirected to the given URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BlockingResponse.requestHeaders">
            <summary>
            ( optional ) Only used as a response to the onBeforeSendHeaders event. If set, the request is made with these request headers instead.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BlockingResponse.responseHeaders">
            <summary>
            ( optional ) Only used as a response to the onHeadersReceived event. If set, the server is assumed to have responded with these response headers instead.
            Only return responseHeaders if you really want to modify the headers in order to limit the number of conflicts
            (only one extension may modify responseHeaders for each request).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BlockingResponse.authCredentials">
            <summary>
            ( optional ) Only used as a response to the onAuthRequired event. If set, the request is made using the supplied credentials.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.BlockingResponseAuthCredentials">
            <summary>
            Only used as a response to the onAuthRequired event. If set, the request is made using the supplied credentials.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.scheme">
            <summary>
            The authentication scheme, e.g. Basic or Digest.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.realm">
            <summary>
             ( optional ) The authentication realm provided by the server, if there is one.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.challenger">
            <summary>
            The server requesting authentication.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.isProxy">
            <summary>
            True for Proxy-Authenticate, false for WWW-Authenticate.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this response.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestAuthRequiredDetails.statusLine">
            <summary>
            ( optional )HTTP status line of the response.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.ip">
            <summary>
            The server IP address that the request was actually sent to. Note that it may be a literal IPv6 address.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.fromCache">
            <summary>
             ( optional ) Indicates if this response was fetched from disk cache.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.statusCode">
            <summary>
            Standard HTTP status code returned by the server.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.redirectUrl">
            <summary>
            The new URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this redirect.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRedirectDetails.statusLine">
            <summary>
            ( optional )HTTP status line of the response.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeRequestDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestBeforeSendHeadersDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this redirect.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.ip">
            <summary>
            The server IP address that the request was actually sent to. Note that it may be a literal IPv6 address.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.fromCache">
            <summary>
             ( optional ) Indicates if this response was fetched from disk cache.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.statusCode">
            <summary>
            Standard HTTP status code returned by the server.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this redirect.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestCompletedDetails.statusLine">
            <summary>
            ( optional )HTTP status line of the response.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.ip">
            <summary>
             ( optional ) The server IP address that the request was actually sent to. Note that it may be a literal IPv6 address.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.fromCache">
            <summary>
            Indicates if this response was fetched from disk cache.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestErrorOccurredDetails.error">
            <summary>
            The error description. This string is not guaranteed to remain backwards compatible between releases. You must not parse and act based upon its content.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.statusLine">
            <summary>
            ( optional )HTTP status line of the response.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestHeadersReceivedDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this redirect.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.ip">
            <summary>
            ( optional ) The server IP address that the request was actually sent to. Note that it may be a literal IPv6 address.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.fromCache">
             <summary>
            Indicates if this response was fetched from disk cache.
             </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.statusCode">
            <summary>
            Standard HTTP status code returned by the server.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this redirect.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestResponseStartedDetails.statusLine">
            <summary>
            ( optional )HTTP status line of the response.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.requestId">
            <summary>
            The ID of the request. Request IDs are unique within a browser session. As a result, they could be used to relate different events of the same request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.method">
            <summary>
            Standard HTTP method.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.frameId">
            <summary>
            The value 0 indicates that the request happens in the main frame; a positive value indicates the ID of a subframe in which the request happens.
            If the document of a (sub-)frame is loaded (type is main_frame or sub_frame), frameId indicates the ID of this frame, not the ID of the outer frame.
            Frame IDs are unique within a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.parentFrameId">
            <summary>
            ID of frame that wraps the frame which sent the request. Set to -1 if no parent frame exists.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.tabId">
            <summary>
            The ID of the tab in which the request takes place. Set to -1 if the request isn't related to a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.type">
            <summary>
            ( enumerated string ["main_frame", "sub_frame", "stylesheet", "script", "image", "object", "xmlhttprequest", "other"] )
            How the requested resource will be used.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.timeStamp">
            <summary>
            The time when this signal is triggered, in milliseconds since the epoch.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WebRequestonSendHeadersDetails.responseHeaders">
            <summary>
            ( optional )The HTTP response headers that were received along with this redirect.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.webstore.install(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction,SharpKit.JavaScript.JsAction{SharpKit.JavaScript.JsString})">
            <summary>
            
            </summary>
            <param name="url">( optional ) If you have more than one &lt;link> tag on your page with the chrome-webstore-item relation,
            you can choose which item you'd like to install by passing in its URL here. If it is omitted, then the first (or only) link will be used.
            An exception will be thrown if the passed in URL does not exist on the page.</param>
            <param name="successCallback">( optional ) This function is invoked when inline installation successfully completes
            (after the dialog is shown and the user agrees to add the item to Chrome).
            You may wish to use this to hide the user interface element that prompted the user to install the app or extension.</param>
            <param name="failureCallback"> ( optional ) This function is invoked when inline installation does not successfully complete.
            Possible reasons for this include the user canceling the dialog, the linked item not being found in the store,
            or the install being initiated from a non-verified site.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.webstore.install(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction)">
            <summary>
            
            </summary>
            <param name="url">( optional ) If you have more than one &lt;link> tag on your page with the chrome-webstore-item relation,
            you can choose which item you'd like to install by passing in its URL here. If it is omitted, then the first (or only) link will be used.
            An exception will be thrown if the passed in URL does not exist on the page.</param>
            <param name="successCallback">( optional ) This function is invoked when inline installation successfully completes
            (after the dialog is shown and the user agrees to add the item to Chrome).
            You may wish to use this to hide the user interface element that prompted the user to install the app or extension.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.webstore.install(SharpKit.JavaScript.JsString,SharpKit.JavaScript.JsAction{SharpKit.JavaScript.JsString})">
            <summary>
            
            </summary>
            <param name="url">( optional ) If you have more than one &lt;link> tag on your page with the chrome-webstore-item relation,
            you can choose which item you'd like to install by passing in its URL here. If it is omitted, then the first (or only) link will be used.
            An exception will be thrown if the passed in URL does not exist on the page.</param>
            <param name="failureCallback"> ( optional ) This function is invoked when inline installation does not successfully complete.
            Possible reasons for this include the user canceling the dialog, the linked item not being found in the store,
            or the install being initiated from a non-verified site.</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.webstore.install(SharpKit.JavaScript.JsString)">
            <summary>
            
            </summary>
            <param name="url">( optional ) If you have more than one &lt;link> tag on your page with the chrome-webstore-item relation,
            you can choose which item you'd like to install by passing in its URL here. If it is omitted, then the first (or only) link will be used.
            An exception will be thrown if the passed in URL does not exist on the page.</param>
        </member>
        <member name="T:SharpKit.Google.Chrome.windows">
            <summary>
            Use the chrome.windows module to interact with browser windows. You can use this module to create, modify, and rearrange windows in the browser.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.windows.WINDOW_ID_NONE">
            <summary>
            The windowId value that represents the absence of a chrome browser window.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.windows.WINDOW_ID_CURRENT">
            <summary>
            The windowId value that represents the current window.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.create(SharpKit.Google.Chrome.WindowsCreateData,SharpKit.JavaScript.JsAction)">
            <summary>
            Creates (opens) a new browser with any optional sizing, position or default URL provided.
            </summary>
            <param name="createData">( optional )</param>
            <param name="callback">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.create(SharpKit.Google.Chrome.WindowsCreateData)">
            <summary>
            Creates (opens) a new browser with any optional sizing, position or default URL provided.
            </summary>
            <param name="createData">( optional )</param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.create">
            <summary>
            Creates (opens) a new browser with any optional sizing, position or default URL provided.
            </summary>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.get(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.WindowsGetInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets details about a window.
            </summary>
            <param name="windowId"></param>
            <param name="getInfo"> ( optional )</param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.get(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets details about a window.
            </summary>
            <param name="windowId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.getAll(SharpKit.Google.Chrome.WindowsGetInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets all windows.
            </summary>
            <param name="getInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.getAll(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets all windows.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.getCurrent(SharpKit.Google.Chrome.WindowsGetInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the current window.
            </summary>
            <param name="getInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.getCurrent(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the current window.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.getLastFocused(SharpKit.Google.Chrome.WindowsGetInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the window that was most recently focused — typically the window 'on top'.
            </summary>
            <param name="getInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.getLastFocused(SharpKit.JavaScript.JsAction)">
            <summary>
            Gets the window that was most recently focused — typically the window 'on top'.
            </summary>
            <param name="getInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.remove(SharpKit.JavaScript.JsNumber,SharpKit.JavaScript.JsAction)">
            <summary>
            Removes (closes) a window, and all the tabs inside it.
            </summary>
            <param name="windowId"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.remove(SharpKit.JavaScript.JsNumber)">
            <summary>
            Removes (closes) a window, and all the tabs inside it.
            </summary>
            <param name="windowId"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.update(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.WindowsUpdateInfo,SharpKit.JavaScript.JsAction)">
            <summary>
            Updates the properties of a window. Specify only the properties that you want to change; unspecified properties will be left unchanged.
            </summary>
            <param name="windowId"></param>
            <param name="updateInfo"></param>
            <param name="callback"></param>
        </member>
        <member name="M:SharpKit.Google.Chrome.windows.update(SharpKit.JavaScript.JsNumber,SharpKit.Google.Chrome.WindowsUpdateInfo)">
            <summary>
            Updates the properties of a window. Specify only the properties that you want to change; unspecified properties will be left unchanged.
            </summary>
            <param name="windowId"></param>
            <param name="updateInfo"></param>
        </member>
        <member name="P:SharpKit.Google.Chrome.windows.onCreated">
            <summary>
            Fired when a window is created.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.windows.onFocusChanged">
            <summary>
            Fired when the currently focused window changes. Will be chrome.windows.WINDOW_ID_NONE if all chrome windows have lost focus.
            Note: On some Linux window managers, WINDOW_ID_NONE will always be sent immediately preceding a switch from one chrome window to another.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.windows.onRemoved">
            <summary>
            Fired when a window is removed (closed).
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.url">
            <summary>
            ( optional )A URL or list of URLs to open as tabs in the window. Fully-qualified URLs must include a scheme (i.e. 'http://www.google.com', not 'www.google.com').
            Relative URLs will be relative to the current page within the extension. Defaults to the New Tab Page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.urlArray">
            <summary>
            ( optional )A URL or list of URLs to open as tabs in the window. Fully-qualified URLs must include a scheme (i.e. 'http://www.google.com', not 'www.google.com').
            Relative URLs will be relative to the current page within the extension. Defaults to the New Tab Page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.tabId">
            <summary>
            ( optional ) The id of the tab for which you want to adopt to the new window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.left">
            <summary>
            ( optional )The number of pixels to position the new window from the left edge of the screen.
            If not specified, the new window is offset naturally from the last focused window. This value is ignored for panels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.top">
            <summary>
            ( optional )The number of pixels to position the new window from the top edge of the screen.
            If not specified, the new window is offset naturally from the last focused window. This value is ignored for panels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.width">
             <summary>
            ( optional ) The width in pixels of the new window. If not specified defaults to a natural width.
             </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.height">
            <summary>
            ( optional )The height in pixels of the new window. If not specified defaults to a natural height.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.focused">
            <summary>
             ( optional ) If true, opens an active window. If false, opens an inactive window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.incognito">
            <summary>
            ( optional )Whether the new window should be an incognito window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsCreateData.type">
            <summary>
            ( optional enumerated string ["normal", "popup", "panel"] )
            Specifies what type of browser window to create. The 'panel' type creates a popup unless the '--enable-panels' flag is set.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.left">
            <summary>
            ( optional )The offset from the left edge of the screen to move the window to in pixels. This value is ignored for panels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.top">
            <summary>
            ( optional )The offset from the top edge of the screen to move the window to in pixels. This value is ignored for panels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.width">
             <summary>
            ( optional ) The width to resize the window to in pixels. This value is ignored for panels.
             </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.height">
            <summary>
            ( optional )The height to resize the window to in pixels. This value is ignored for panels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.focused">
            <summary>
             ( optional ) If true, brings the window to the front. If false, brings the next window in the z-order to the front.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.drawAttention">
            <summary>
            ( optional )If true, causes the window to be displayed in a manner that draws the user's attention to the window, without changing the focused window.
            The effect lasts until the user changes focus to the window. This option has no effect if the window already has focus.
            Set to false to cancel a previous draw attention request.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsUpdateInfo.state">
            <summary>
            ( optional enumerated string ["normal", "minimized", "maximized", "fullscreen"] )
            The new state of the window. The 'minimized', 'maximized' and 'fullscreen' states cannot be combined with 'left', 'top', 'width' or 'height'.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.WindowsGetInfo.populate">
            <summary>
            If true, the window object will have a tabs property that contains a list of the $ref:tabs.Tab objects
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.id">
            <summary>
            The ID of the window. Window IDs are unique within a browser session.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.focused">
            <summary>
            Whether the window is currently the focused window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.top">
            <summary>
            The offset of the window from the top edge of the screen in pixels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.left">
            <summary>
            The offset of the window from the left edge of the screen in pixels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.width">
            <summary>
            The width of the window in pixels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.height">
            <summary>
            The height of the window in pixels.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.tabs">
            <summary>
             ( optional ) Array of $ref:tabs.Tab objects representing the current tabs in the window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.incognito">
            <summary>
            Whether the window is incognito.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.type">
            <summary>
            ( enumerated string ["normal", "popup", "panel", "app"] )
            The type of browser window this is.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.state">
            <summary>
            ( enumerated string ["normal", "minimized", "maximized", "fullscreen"] )
            The state of this browser window.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Window.alwaysOnTop">
            <summary>
            Whether the window is set to be always on top.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.WindowState">
            <summary>
            The state of this browser window.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.Manifest">
             <summary>
             Every extension, installable web app, and theme has a JSON-formatted manifest file, named manifest.json, that provides important information.
             </summary>
            <example>
            usage
            <code>
            {
               // Required
               "name": "My Extension",
               "version": "versionString",
               "manifest_version": 2,
               // Recommended
               "description": "A plain text description",
               "icons": { ... },
               "default_locale": "en",
               // Pick one (or none)
               "browser_action": {...},
               "page_action": {...},
               "theme": {...},
               "app": {...},
               // Add any of these that you need
               "background": {...},
               "chrome_url_overrides": {...},
               "content_scripts": [...],
               "content_security_policy": "policyString",
               "file_browser_handlers": [...],
               "homepage_url": "http://path/to/homepage",
               "incognito": "spanning" or "split",
               "intents": {...}
               "key": "publicKey",
               "minimum_chrome_version": "versionString",
               "nacl_modules": [...],
               "offline_enabled": true,
               "omnibox": { "keyword": "aString" },
               "options_page": "aFile.html",
               "permissions": [...],
               "plugins": [...],
               "requirements": {...},
               "update_url": "http://path/to/updateInfo.xml",
               "web_accessible_resources": [...],
               "sandbox": [...]
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.name">
            <summary>
            A short, plain text string (no more than 45 characters) that identifies the extension. The name is used in the install dialog, extension management UI, and the store.
            You can specify locale-specific strings for this field; see Internationalization for details.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.version">
            <summary>
            One to four dot-separated integers identifying the version of this extension.
            A couple of rules apply to the integers: they must be between 0 and 65535, inclusive, and non-zero integers can't start with 0.
            For example, 99999 and 032 are both invalid.
            Here are some examples of valid versions:
            "version": "1"
            "version": "1.0"
            "version": "2.10.2"
            "version": "3.1.2.4567"
            The autoupdate system compares versions to determine whether an installed extension needs to be updated.
            If the published extension has a newer version string than the installed extension, then the extension is automatically updated.
            The comparison starts with the leftmost integers. If those integers are equal, the integers to the right are compared, and so on.
            For example, 1.2.0 is a newer version than 1.1.9.9999.
            A missing integer is equal to zero. For example, 1.1.9.9999 is newer than 1.1.
            For more information, see Autoupdating.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.manifest_version">
            <summary>
            One integer specifying the version of the manifest file format your package requires.
            As of Chrome 18, developers should specify 2 (without quotes) to use the format as described by this document:
            "manifest_version": 2
            Consider manifest version 1 deprecated as of Chrome 18.
            Version 2 is not yet required, but we will, at some point in the not-too-distant future, stop supporting packages using deprecated manifest versions.
            Extensions, applications, and themes that aren't ready to make the jump to the new manifest version in Chrome 18 can either explicitly specify version 1,or leave the key off entirely.
            The changes between version 1 and version 2 of the manifest file format are described in detail in the manifest_version documentation.
            Setting manifest_version 2 in Chrome 17 or lower is not recommended.
            If your extension needs to work in older versions of Chrome, stick with version 1 for the moment. We'll give you ample warning before version 1 stops working.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.description">
            <summary>
            A plain text string (no HTML or other formatting; no more than 132 characters) that describes the extension.
            The description should be suitable for both the browser's extension management UI and the Chrome Web Store.
            You can specify locale-specific strings for this field; see Internationalization for details.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.icons">
            <summary>
            One or more icons that represent the extension, app, or theme. You should always provide a 128x128 icon; it's used during installation and by the Chrome Web Store.
            Extensions should also provide a 48x48 icon, which is used in the extensions management page (chrome://extensions).
            You can also specify a 16x16 icon to be used as the favicon for an extension's pages. The 16x16 icon is also displayed in the experimental extension infobar feature.
            Icons should generally be in PNG format, because PNG has the best support for transparency.
            They can, however, be in any format supported by WebKit, including BMP, GIF, ICO, and JPEG. Here's an example of specifying the icons:
            "icons": { "16": "icon16.png",
                       "48": "icon48.png",
                      "128": "icon128.png" },
            Important: Use only the documented icon sizes. 
            
            You might notice that Chrome sometimes resizes these icons down to smaller sizes. For example, the install dialog might shrink the 128-pixel icon down to 69 pixels. 
            
            However, the details of Chrome's UI may change between versions, and these changes assume that developers are using the documented sizes.
            If you use other sizes, your icon may look bad in future versions of the browser.
            If you upload your extension, app, or theme using the Chrome Developer Dashboard, you'll need to upload additional images, including at least one screenshot of your extension.
            For more information, see the Chrome Web Store developer documentation.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.default_locale">
            <summary>
            Specifies the subdirectory of _locales that contains the default strings for this extension.
            This field is required in extensions that have a _locales directory; it must be absent in extensions that have no _locales directory.
            For details, see Internationalization.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.browser_action">
             <summary>
             Register your browser action in the extension manifest like this:
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "browser_action": {
                 "default_icon": "images/icon19.png", // optional
                 "default_title": "Google Mail",      // optional; shown in tooltip
                 "default_popup": "popup.html"        // optional
               },
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.page_action">
             <summary>
             Register your page action in the extension manifest like this:
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "page_action": {
                 "default_icon": "icons/foo.png", // optional
                 "default_title": "Do action",    // optional; shown in tooltip
                 "default_popup": "popup.html"    // optional
               },
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.theme">
             <summary>
             A theme is a special kind of extension that changes the way the browser looks.
             Themes are packaged like regular extensions, but they don't contain JavaScript or HTML code.
             </summary>
            <example>
            usage
            <code>
            {
               "version": "2.6",
               "name": "camo theme",
               "theme": {
                 "images" : {
                   "theme_frame" : "images/theme_frame_camo.png",
                   "theme_frame_overlay" : "images/theme_frame_stripe.png",
                   "theme_toolbar" : "images/theme_toolbar_camo.png",
                   "theme_ntp_background" : "images/theme_ntp_background_norepeat.png",
                   "theme_ntp_attribution" : "images/attribution.png"
                 },
                 "colors" : {
                   "frame" : [71, 105, 91],
                   "toolbar" : [207, 221, 192],
                   "ntp_text" : [20, 40, 0],
                   "ntp_link" : [36, 70, 0],
                   "ntp_section" : [207, 221, 192],
                   "button_background" : [255, 255, 255]
                 },
                 "tints" : {
                   "buttons" : [0.33, 0.5, 0.47]
                 },
                 "properties" : {
                   "ntp_background_alignment" : "bottom"
                 }
               }
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.app">
            <summary>
            Used by installable web apps, including packaged apps, to specify the URLs that the app uses.
            Most important is the launch page for the app—the page that the browser goes to when the user clicks the app's icon in the New Tab page.
            For details, see the documentation for hosted apps and packaged apps.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.background">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.chrome_url_overrides">
             <summary>
             Register an override page in the extension manifest like this:
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "chrome_url_overrides" : {
                 "pageToOverride": "myPage.html"
               },
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.content_scripts">
             <summary>
             If your content script's code should always be injected, register it in the extension manifest using the content_scripts field, as in the following example.
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "content_scripts": [
                 {
                   "matches": ["http://www.google.com/*"],
                   "css": ["mystyles.css"],
                   "js": ["jquery.js", "myscript.js"]
                 }
               ],
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.content_security_policy">
            <summary>
            In order to mitigate a large class of potental cross-site scripting issues,
            Chrome's extension system has incorporated the general concept of Content Security Policy (CSP) .
            This introduces some fairly strict policies that will make extensions more secure by default,
            and provides you with the ability to create and enforce rules governing the types of content that can be loaded and executed by your extensions and applications.
            In general, CSP works as a black/whitelisting mechanism for resources loaded or executed by your extensions.
            Defining a reasonable policy for your extension enables you to carefully consider the resources that your extension requires,
            and to ask the browser to ensure that those are the only resources your extension has access to.
            These policies provide security over and above the host permissions your extension requests; they're an additional layer of protection, not a replacement.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.file_browser_handlers">
            <summary>
            
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.homepage_url">
            <summary>
            The URL of the homepage for this extension. The extensions management page (chrome://extensions) will contain a link to this URL.
            This field is particularly useful if you host the extension on your own site.
            If you distribute your extension using the Chrome Web Store, the homepage URL defaults to the extension's own page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.incognito">
            <summary>
            Either "spanning" or "split", to specify how this extension will behave if allowed to run in incognito mode.
            The default for extensions is "spanning", which means that the extension will run in a single shared process.
            Any events or messages from an incognito tab will be sent to the shared process, with an incognito flag indicating where it came from.
            Because incognito tabs cannot use this shared process,
            an extension using the "spanning" incognito mode will not be able to load pages from its extension package into the main frame of an incognito tab.
            The default for installable web apps is "split", which means that all app pages in an incognito window will run in their own incognito process.
            If the app or extension contains a background page, that will also run in the incognito process. This incognito process runs along side the regular process,
            but has a separate memory-only cookie store. Each process sees events and messages only from its own context
            (for example, the incognito process will see only incognito tab updates). The processes are unable to communicate with each other.
            As a rule of thumb, if your extension or app needs to load a tab in an incognito browser, use split incognito behavior.
            If your extension or app needs to be logged into a remote server or persist settings locally, use spanning incognito behavior.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.intents">
             <summary>
             A dictionary that specifies all intent handlers provided by this extension or app. Each key in the dictionary specifies
             an action verb that is handled by this extension.
             The following example specifies two handlers for the action verb "http://webintents.org/share".
             </summary>
            <example>
            usage
            <code>
            {
               "name": "test",
               "version": "1",
               "intents": {
                 "http://webintents.org/share": [
                   {
                     "type": ["text/uri-list"],
                     "href": "/services/sharelink.html",
                     "title" : "Sample Link Sharing Intent",
                     "disposition" : "inline"
                   },
                   {
                     "type": ["image/*"],
                     "href": "/services/shareimage.html",
                     "title" : "Sample Image Sharing Intent",
                     "disposition" : "window"
                   }
                 ]
               }
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.minimum_chrome_version">
            <summary>
            The version of Chrome that your extension, app, or theme requires, if any. The format for this string is the same as for the version field.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.nacl_modules">
             <summary>
             One or more mappings from MIME types to the Native Client module that handles each type.
             For example, the bold code in the following snippet registers a Native Client module as the content handler for the OpenOffice spreadsheet MIME type.
             The value of "path" is the location of a Native Client manifest (a .nmf file) within the extension directory.
             For more information on Native Client and .nmf files, see the Native Client Technical Overview.
             Each MIME type can be associated with only one .nmf file, but a single .nmf file might handle multiple MIME types.
             The following example shows an extension with two .nmf files that handle three MIME types.
             </summary>
            <example>
            usage
            <code>
            {
               "name": "Native Client OpenOffice Spreadsheet Viewer",
               "version": "0.1",
               "description": "Open OpenOffice spreadsheets, right in your browser.",
               "nacl_modules": [{
                 "path": "OpenOfficeViewer.nmf",
                 "mime_type": "application/vnd.oasis.opendocument.spreadsheet"
               }]
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.offline_enabled">
            <summary>
            Whether the app or extension is expected to work offline.
            When Chrome detects that it is offline, apps with this field set to true will be highlighted on the New Tab page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.omnibox">
            <summary>
            You must include an omnibox keyword field in the manifest to use the omnibox API.
            You should also specify a 16x16-pixel icon, which will be displayed in the address bar when suggesting that users enter keyword mode.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.options_page">
            <summary>
            To allow users to customize the behavior of your extension, you may wish to provide an options page.
            If you do, a link to it will be provided from the extensions management page at chrome://extensions.
            Clicking the Options link opens a new tab pointing at your options page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.permissions">
            <summary>
            An array of permissions that the extension or app might use. Each permission can be either one of a list of known strings
            (such as "geolocation") or a match pattern that gives access to one or more hosts.
            Permissions can help to limit damage if your extension or app is attacked.
            Some permissions are also displayed to users before installation, as detailed in Permission Warnings.
            If an extension API requires you to declare a permission in the manifest, then its documentation tells you how to do so.
            For example, the Tabs page shows you how to declare the "tabs" permission.
            Note: As of Chrome 16, some permissions can be optional. For details, see Optional Permissions.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.plugins">
            <summary>
            Leveraging HTML and JavaScript makes developing new extensions really easy, but what if you have existing legacy or proprietary code that you want to reuse in your extension?
            You can bundle an NPAPI plugin with your extension, allowing you to call into native binary code from JavaScript.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.requirements">
            <summary>
            Technologies required by the app or extension. Hosting sites such as the Chrome Web
            Store may use this list to dissuade users from installing apps or extensions that will not work on their computer.
            The only supported requirement is "3D", which denotes GPU hardware acceleration.
            For that requirement, you can list the 3D-related features your app requires, as demonstrated in the following example:
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.update_url">
             <summary>
             If you're hosting your own extension, you need to add the "update_url" field to your manifest.json file, like this:
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "update_url": "http://myhost.com/mytestextension/updates.xml",
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.web_accessible_resources">
             <summary>
             An array of strings specifying the paths (relative to the package root) of packaged resources that are expected to be usable in the context of a web page.
             For example, an extension that injects a content script with the intention of building up some custom interface for example.com would whitelist any
             resources that interface requires (images, icons, stylesheets, scripts, etc.)
             </summary>
            <example>
            usage
            <code>
            {
               ...
               "web_accessible_resources": [
                 "images/my-awesome-image1.png",
                 "images/my-amazing-icon1.png",
                 "style/double-rainbow.css",
                 "script/double-rainbow.js"
               ],
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.Manifest.sandbox">
            <summary>
            Defines an collection of app or extension pages that are to be served in a sandboxed unique origin, and optionally a Content Security Policy to use with them.
            Being in a sandbox has two implications:
            A sandboxed page will not have access to extension or app APIs, or direct access to non-sandboxed pages (it may communicate with them via postMessage()).
            A sandboxed page is not subject to the Content Security Policy (CSP) used by the rest of the app or extension (it has its own separate CSP value).
            This means that, for example, it can use inline script and eval.
            If not specified, the default content_security_policy value is sandbox allow-scripts allow-forms.
            You can specify your CSP value to restrict the sandbox even further, but it must have the sandbox directive and may not have the allow-same-origin token
            (see the HTML5 specification for possible sandbox tokens).
            Note that you only need to list pages that you expected to be loaded in windows or frames. Resources used by sandboxed pages
            (e.g. stylesheets or JavaScript source files) do not need to appear in the sandboxed_page list, they will use the sandbox of the page that embeds them.
            Sandboxed page may only be specified when using manifest_version 2 or above.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.NaclModulesManifest">
             <summary>
             One or more mappings from MIME types to the Native Client module that handles each type.
             For example, the bold code in the following snippet registers a Native Client module as the content handler for the OpenOffice spreadsheet MIME type.
             The value of "path" is the location of a Native Client manifest (a .nmf file) within the extension directory.
             For more information on Native Client and .nmf files, see the Native Client Technical Overview.
             Each MIME type can be associated with only one .nmf file, but a single .nmf file might handle multiple MIME types.
             The following example shows an extension with two .nmf files that handle three MIME types.
             </summary>
            <example>
            usage
            <code>
            {
               "name": "Native Client OpenOffice Spreadsheet Viewer",
               "version": "0.1",
               "description": "Open OpenOffice spreadsheets, right in your browser.",
               "nacl_modules": [{
                 "path": "OpenOfficeViewer.nmf",
                 "mime_type": "application/vnd.oasis.opendocument.spreadsheet"
               }]
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionManifest.default_icon">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionManifest.default_title">
            <summary>
            ( optional )  shown in tooltip
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.PageActionManifest.default_popup">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionManifest.default_icon">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionManifest.default_title">
            <summary>
            ( optional )  shown in tooltip
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.BrowserActionManifest.default_popup">
            <summary>
            ( optional )
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ThemeManifest">
             <summary>
             
             </summary>
            <example>
            usage
            <code>
            {
               "version": "2.6",
               "name": "camo theme",
               "theme": {
                 "images" : {
                   "theme_frame" : "images/theme_frame_camo.png",
                   "theme_frame_overlay" : "images/theme_frame_stripe.png",
                   "theme_toolbar" : "images/theme_toolbar_camo.png",
                   "theme_ntp_background" : "images/theme_ntp_background_norepeat.png",
                   "theme_ntp_attribution" : "images/attribution.png"
                 },
                 "colors" : {
                   "frame" : [71, 105, 91],
                   "toolbar" : [207, 221, 192],
                   "ntp_text" : [20, 40, 0],
                   "ntp_link" : [36, 70, 0],
                   "ntp_section" : [207, 221, 192],
                   "button_background" : [255, 255, 255]
                 },
                 "tints" : {
                   "buttons" : [0.33, 0.5, 0.47]
                 },
                 "properties" : {
                   "ntp_background_alignment" : "bottom"
                 }
               }
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.ThemeManifest.images">
            <summary>
            Image resources use paths relative to the root of the extension. You can override any of the images that are specified by kThemeableImages in theme_service.cc.
            Just remove the "IDR_" and convert the remaining characters to lowercase. For example, IDR_THEME_NTP_BACKGROUND
            (which kThemeableImages uses to specify the background of the new tab pane) corresponds to "theme_ntp_background".
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ThemeManifest.colors">
            <summary>
            Colors are in RGB format. To find the strings you can use within the "colors" field, look for kColor* strings in theme_service.cc.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ThemeManifest.tints">
            <summary>
            You can specify tints to be applied to parts of the UI such as buttons, the frame, and the background tab.
            Google Chrome supports tints, not images, because images don't work across platforms and are brittle in the case of adding new buttons.
            To find the strings you can use within the "tints" field, look for kTint* strings in theme_service.cc.
            Tints are in Hue-Saturation-Lightness (HSL) format, using floating-point numbers in the range 0 - 1.0:
            Hue is an absolute value, with 0 and 1 being red.
            Saturation is relative to the currently provided image. 0.5 is no change, 0 is totally desaturated, and 1 is full saturation.
            Lightness is also relative, with 0.5 being no change, 0 as all pixels black, and 1 as all pixels white.
            You can alternatively use -1.0 for any of the HSL values to specify no change.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ThemeManifest.properties">
            <summary>
            This field lets you specify properties such as background alignment, background repeat, and an alternate logo.
            To see the properties and the values they can have, see theme_service.cc.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ThemeImage">
            <summary>
            Image resources use paths relative to the root of the extension. You can override any of the images that are specified by kThemeableImages in theme_service.cc.
            Just remove the "IDR_" and convert the remaining characters to lowercase. For example, IDR_THEME_NTP_BACKGROUND
            (which kThemeableImages uses to specify the background of the new tab pane) corresponds to "theme_ntp_background".
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ThemeColor">
            <summary>
            Colors are in RGB format. To find the strings you can use within the "colors" field, look for kColor* strings in theme_service.cc.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ThemeTint">
            <summary>
            You can specify tints to be applied to parts of the UI such as buttons, the frame, and the background tab.
            Google Chrome supports tints, not images, because images don't work across platforms and are brittle in the case of adding new buttons.
            To find the strings you can use within the "tints" field, look for kTint* strings in theme_service.cc.
            Tints are in Hue-Saturation-Lightness (HSL) format, using floating-point numbers in the range 0 - 1.0:
            Hue is an absolute value, with 0 and 1 being red.
            Saturation is relative to the currently provided image. 0.5 is no change, 0 is totally desaturated, and 1 is full saturation.
            Lightness is also relative, with 0.5 being no change, 0 as all pixels black, and 1 as all pixels white.
            You can alternatively use -1.0 for any of the HSL values to specify no change.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.ThemePropertie">
            <summary>
            This field lets you specify properties such as background alignment, background repeat, and an alternate logo.
            To see the properties and the values they can have, see theme_service.cc.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.AppManifest">
            <summary>
            Used by installable web apps, including packaged apps, to specify the URLs that the app uses.
            Most important is the launch page for the app—the page that the browser goes to when the user clicks the app's icon in the New Tab page.
            For details, see the documentation for hosted apps and packaged apps.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AppManifest.urls">
            <summary>
            The URLs for the pages in the hosted app, not necessarily including the launch page.
            Once the app is installed, these pages and the launch page have the permissions requested in the manifest.
            Note: You don't need to specify the URLs for included files or for assets such as images.
            
            Each URL must begin with http, https, or * (which matches both http and https). You can use wildcards for subdomains—for example, "*://*.example.com/".
            
            Important: Do not put port numbers in the value of "urls".
            Port numbers aren't necessary there (all ports are valid), and values with port numbers are silently ignored, leaving the corresponding pages without the requested permissions.
            
            You need to specify only the start of the app's URLs.
            For example, "https://www.google.com/accounts/" matches every URL that starts with that string, such as https://www.google.com/accounts/ and https://www.google.com/accounts/b/0/ManageAccount.
            
            Important: If you provide multiple apps, avoid overlapping URLs.
            If a user tries to install an app whose "web_url" or "urls" values overlap with those of an already installed app, the second installation will fail due to URL conflict errors.
            For example, an app that specifies a "urls" value of "http://mail.example.com/" would conflict with an app that specifies "http://mail.example.com/mail/".
            
            If the user downloads the app's .crx file from a server that's not the Chrome Web Store, only one domain is allowed, and it must be the same as the domain that serves the .crx file.
            For more information on hosting options, see the extensions documentation for Hosting.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AppManifest.launch">
            <summary>
            Required. Specifies what happens when the user launches the app.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.AppLaunch">
            <summary>
            Specifies what happens when the user launches the app.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AppLaunch.web_url">
            <summary>
            Required. Specifies the launch page as an absolute URL.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AppLaunch.container">
            <summary>
            The value "panel" makes the app appear in an app panel. By default, or when you specify "tab", the app appears in a tab.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AppLaunch.height">
            <summary>
            If the container is set to "panel", this integer specifies the height of the panel in pixels.
            For example, you might specify "height":400. Note that you don't use quotation marks in the value.
            This field specifies the height of the area to display contents in; window decorations add a few more pixels to the total height.
            If the container isn't a panel, this field is ignored.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.AppLaunch.width">
            <summary>
            Similar to "height", but specifies the width of the panel.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.OverrideManifest">
             <summary>
             Register an override page in the extension manifest like this:
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "chrome_url_overrides" : {
                 "pageToOverride": "myPage.html"
               },
               ...
             }
            </code>
            </example>
        </member>
        <member name="T:SharpKit.Google.Chrome.ContentManifest">
             <summary>
             If your content script's code should always be injected, register it in the extension manifest using the content_scripts field, as in the following example.
             </summary>
            <example>
            usage
            <code>
            {
               "name": "My extension",
               ...
               "content_scripts": [
                 {
                   "matches": ["http://www.google.com/*"],
                   "css": ["mystyles.css"],
                   "js": ["jquery.js", "myscript.js"]
                 }
               ],
               ...
             }
            </code>
            </example>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.matches">
            <summary>
            Required. Specifies which pages this content script will be injected into.
            See Match Patterns for more details on the syntax of these strings and Match patterns and globs for information on how to exclude URLs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.exclude_matches">
            <summary>
            Optional. Excludes pages that this content script would otherwise be injected into.
            See Match Patterns for more details on the syntax of these strings and Match patterns and globs for information on how to exclude URLs.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.css">
            <summary>
            Optional. The list of CSS files to be injected into matching pages.
            These are injected in the order they appear in this array, before any DOM is constructed or displayed for the page.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.js">
            <summary>
            Optional. The list of JavaScript files to be injected into matching pages. These are injected in the order they appear in this array.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.run_at">
            <summary>
            Optional. Controls when the files in js are injected. Can be "document_start", "document_end", or "document_idle". Defaults to "document_idle". 
            
            In the case of "document_start", the files are injected after any files from css, but before any other DOM is constructed or any other script is run. 
            
            In the case of "document_end", the files are injected immediately after the DOM is complete, but before subresources like images and frames have loaded. 
            
            In the case of "document_idle", the browser chooses a time to inject scripts between "document_end" and immediately after the window.onload event fires.
            The exact moment of injection depends on how complex the document is and how long it is taking to load, and is optimized for page load speed. 
            
            Note: With "document_idle", content scripts may not necessarily receive the window.onload event, because they may run after it has already fired.
            In most cases, listening for the onload event is unnecessary for content scripts running at "document_idle" because they are guaranteed to run after the DOM is complete.
            If your script definitely needs to run after window.onload, you can check if onload has already fired by using the document.readyState property.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.all_frames">
            <summary>
            Optional. Controls whether the content script runs in all frames of the matching page, or only the top frame. 
            Defaults to false, meaning that only the top frame is matched.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.include_globs">
            <summary>
            Optional. Applied after matches to include only those URLs that also match this glob.
            Intended to emulate the @include Greasemonkey keyword. See Match patterns and globs below for more details.
            </summary>
        </member>
        <member name="P:SharpKit.Google.Chrome.ContentManifest.pageToOverride">
            <summary>
            Optional. Applied after matches to exclude URLs that match this glob.
            Intended to emulate the @exclude Greasemonkey keyword. See Match patterns and globs below for more details.
            </summary>
        </member>
        <member name="T:SharpKit.Google.Chrome.PermissionType">
            <summary>
            The following table lists the permissions an extension or packaged app can use.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.match_pattern">
            <summary>
            Specifies a host permission. Required if the extension wants to interact with the code running on pages.
            Many extension capabilities, such as cross-origin XMLHttpRequests,
            programmatically injected content scripts, and the cookies API require host permissions. For details on the syntax, see Match Patterns.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.background">
            <summary>
            Makes Chrome start up early and and shut down late, so that apps and extensions can have a longer life.
            When any installed hosted app, packaged app, or extension has "background" permission,
            Chrome runs (invisibly) as soon as the user logs into their computer—before the user launches Chrome.
            The "background" permission also makes Chrome continue running (even after its last window is closed) until the user explicitly quits Chrome.
            Note: Disabled apps and extensions are treated as if they aren't installed.
            You typically use the "background" permission with a background page or (for hosted apps) a background window.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.bookmarks">
            <summary>
            Required if the extension uses the chrome.bookmarks module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.favicon">
             <summary>
             Required if the extension uses the "chrome://favicon/url" mechanism to display the favicon of a page.
             For example, to display the favicon of http://www.google.com/, you declare the "chrome://favicon/" permission and use HTML code like this:
            &lt;img src="chrome://favicon/http://www.google.com/">
             </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.clipboardRead">
            <summary>
            Required if the extension uses document.execCommand('paste').
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.clipboardWrite">
            <summary>
            Indicates the app or extension uses document.execCommand('copy') or document.execCommand('cut').
            This permission is required for hosted apps; it's recommended for extensions and packaged apps.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.contentSettings">
            <summary>
            Required if the extension uses the chrome.contentSettings module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.contextMenus">
            <summary>
            Required if the extension uses the chrome.contextMenus module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.cookies">
            <summary>
            Required if the extension uses the chrome.cookies module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.experimental">
            <summary>
            Required if the extension uses any chrome.experimental.* APIs.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.fileBrowserHandler">
            <summary>
            Required if the extension uses the fileBrowserhandler module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.geolocation">
            <summary>
            Allows the extension to use the proposed HTML5 geolocation API without prompting the user for permission.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.history">
            <summary>
            Required if the extension uses the chrome.history module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.idle">
            <summary>
            Required if the extension uses the chrome.idle module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.management">
            <summary>
            Required if the extension uses the chrome.management module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.notifications">
            <summary>
            Allows the extension to use the proposed HTML5 notification API without calling permission methods
            (such as checkPermission()). For more information see Desktop Notifications.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.privacy">
            <summary>
            Required if the extension uses the chrome.privacy module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.proxy">
            <summary>
            Required if the extension uses the chrome.proxy module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.tabs">
            <summary>
            Required if the extension uses the chrome.tabs or chrome.windows module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.tts">
            <summary>
            Required if the extension uses the chrome.tts module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.ttsEngine">
            <summary>
            Required if the extension uses the chrome.ttsEngine module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.unlimitedStorage">
            <summary>
            Provides an unlimited quota for storing HTML5 client-side data, such as databases and local storage files.
            Without this permission, the extension is limited to 5 MB of local storage.
            Note: This permission applies only to Web SQL Database and application cache (see issue 58985).
            Also, it doesn't currently work with wildcard subdomains such as http://*.example.com.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.webNavigation">
            <summary>
            Required if the extension uses the chrome.webNavigation module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.webRequest">
            <summary>
            Required if the extension uses the chrome.webRequest module.
            </summary>
        </member>
        <member name="F:SharpKit.Google.Chrome.PermissionType.webRequestBlocking">
            <summary>
            Required if the extension uses the chrome.webRequest module in a blocking fashion.
            </summary>
        </member>
    </members>
</doc>

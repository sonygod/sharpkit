/*Generated by SharpKit 5 v4.29.8000*/
if(typeof(JsTypes) == "undefined")
    var JsTypes=[];
var System$StringComparer=
{
    fullname:"System.StringComparer",
    baseTypeName:"System.Object",
    staticDefinition:
    {
        cctor:function()
        {
            System.StringComparer._InvariantCultureIgnoreCase = null;
        },
        CurrentCultureIgnoreCase$$:"SharpKit.JavaScript.Private.StringComparer",
        get_CurrentCultureIgnoreCase:function()
        {
            if(System.StringComparer._InvariantCultureIgnoreCase == null)
                System.StringComparer._InvariantCultureIgnoreCase = new SharpKit.JavaScript.Private.StringComparer_InvariantCultureIgnoreCase.ctor();
            return System.StringComparer._InvariantCultureIgnoreCase;
        },
        InvariantCultureIgnoreCase$$:"SharpKit.JavaScript.Private.StringComparer",
        get_InvariantCultureIgnoreCase:function()
        {
            if(System.StringComparer._InvariantCultureIgnoreCase == null)
                System.StringComparer._InvariantCultureIgnoreCase = new SharpKit.JavaScript.Private.StringComparer_InvariantCultureIgnoreCase.ctor();
            return System.StringComparer._InvariantCultureIgnoreCase;
        }
    },
    assemblyName:"SharpKit.JsClr",
    interfaceNames:["System.Collection.Generic.IEqualityComparer"],
    Kind:"Class",
    definition:
    {
        ctor:function()
        {
            System.Object.ctor.call(this);
        }
    }
};
JsTypes.push(System$StringComparer);
var SharpKit$JavaScript$Private$StringComparer_InvariantCultureIgnoreCase=
{
    fullname:"SharpKit.JavaScript.Private.StringComparer_InvariantCultureIgnoreCase",
    baseTypeName:"System.StringComparer",
    staticDefinition:
    {
        cctor:function()
        {
        }
    },
    assemblyName:"SharpKit.JsClr",
    Kind:"Class",
    definition:
    {
        ctor:function()
        {
            System.StringComparer.ctor.call(this);
        },
        Equals$$T$$T:function(x,y)
        {
            if(x == y)
                return true;
            if(x == null || y == null)
                return false;
            return x.toLowerCase() == y.toLowerCase();
        },
        GetHashCode$$T:function(obj)
        {
            if(obj == null)
                return "null";
            return obj.toLowerCase();
        }
    }
};
JsTypes.push(SharpKit$JavaScript$Private$StringComparer_InvariantCultureIgnoreCase);

//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.tab
namespace Ext.tab
{
    #region Tab
    /// <summary>
    /// Represents a single Tab in a TabPanel. A Tab is simply a slightly customized Button,
    /// styled to look like a tab. Tabs are optionally closable, and can also be disabled. 99% of the time you will not
    /// need to create Tabs manually as the framework does so automatically when you use a TabPanel
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Tab : Ext.button.Button, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Sets this tab's attached card. ...
        /// </summary>
        public object setCard(Ext.Component card){return null;}
        /// <summary>
        /// Sets the tab as either closable or not ...
        /// </summary>
        public object setClosable(bool closable){return null;}
        /// <summary>
        /// Read-only property indicating that this tab is currently active. ...
        /// </summary>
        public bool Boolean{get;set;}
        public bool closable{get;set;}
        public Tab(TabConfig config){}
        public Tab(){}
    }
    #endregion
    #region TabConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class TabConfig : Ext.button.ButtonConfig
    {
        /// <summary>
        /// The CSS class to be applied to a Tab when it is active. ...
        /// </summary>
        public JsString activeCls{get;set;}
        /// <summary>
        /// True to make the Tab start closable (the close icon will be visible). ...
        /// </summary>
        public bool closable{get;set;}
        public JsString closableCls{get;set;}
        /// <summary>
        /// The accessible text label for the close button link; only used when closable = true. ...
        /// </summary>
        public JsString closeText{get;set;}
        /// <summary>
        /// The CSS class to be applied to a Tab when it is disabled. ...
        /// </summary>
        public new JsString disabledCls{get;set;}
    }
    #endregion
    #region TabEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class TabEvents : Ext.button.ButtonEvents
    {
        /// <summary>
        /// ...
        /// </summary>
        public static new JsString activate="activate";
        /// <summary>
        /// Fires to indicate that the tab is to be closed, usually because the user has clicked the close button. ...
        /// </summary>
        public static JsString beforeclose="beforeclose";
        /// <summary>
        /// ...
        /// </summary>
        public static new JsString deactivate="deactivate";
    }
    #endregion
}
#endregion

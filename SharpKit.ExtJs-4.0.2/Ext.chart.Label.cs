//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:24
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.chart
namespace Ext.chart
{
    #region Label
    /// <summary>
    /// Labels is a mixin whose methods are appended onto the Series class. Labels is an interface with methods implemented
    /// in each of the Series (Pie, Bar, etc) for label creation and label placement. The methods implemented by the Series are:  onCreateLabel(storeItem, item, i, display) Called each time a new label is created.
    /// The arguments of the method are:  storeItem The element of the store that is related to the label sprite. item The item related to the label sprite. An item is an object containing the position of the shape
    /// used to describe the visualization and also pointing to the actual shape (circle, rectangle, path, etc). i The index of the element created (i.e the first created label, second created label, etc) display The display type. May be false if the label is hidden   onPlaceLabel(label, storeItem, item, i, display, animate) Called for updating the position of the label.
    /// The arguments of the method are:  label The sprite label. storeItem The element of the store that is related to the label sprite item The item related to the label sprite. An item is an object containing the position of the shape
    /// used to describe the visualization and also pointing to the actual shape (circle, rectangle, path, etc). i The index of the element to be updated (i.e. whether it is the first, second, third from the labelGroup) display The display type. May be false if the label is hidden. animate A boolean value to set or unset animations for the labels.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial interface Label
    {
    }
    #endregion
    #region LabelConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class LabelConfig : Ext.BaseConfig
    {
        /// <summary>
        /// The color of the label text. ...
        /// </summary>
        public JsString color{get;set;}
        /// <summary>
        /// Specifies the presence and position of labels for each pie slice. ...
        /// </summary>
        public JsString display{get;set;}
        /// <summary>
        /// The name of the field to be displayed in the label. ...
        /// </summary>
        public JsString field{get;set;}
        /// <summary>
        /// The font used for the labels. ...
        /// </summary>
        public JsString font{get;set;}
        /// <summary>
        /// Specifies the minimum distance from a label to the origin of the visualization. ...
        /// </summary>
        public JsNumber minMargin{get;set;}
        /// <summary>
        /// Either "horizontal" or "vertical". ...
        /// </summary>
        public JsString orientation{get;set;}
        /// <summary>
        /// Optional function for formatting the label into a displayable value. ...
        /// </summary>
        public JsAction renderer{get;set;}
    }
    #endregion
    #region LabelEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class LabelEvents : Ext.BaseEvents
    {
    }
    #endregion
}
#endregion

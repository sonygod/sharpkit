//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:25
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.tree
namespace Ext.tree
{
    #region Panel
    /// <summary>
    /// The TreePanel provides tree-structured UI representation of tree-structured data.
    /// A TreePanel must be bound to a Ext.data.TreeStore. TreePanel&#39;s support
    /// multiple columns through the columns configuration. Simple TreePanel using inline data.  Code: var store = Ext.create(&#39;Ext.data.TreeStore&#39;, {
    /// root: {
    /// expanded: true,
    /// children: [
    /// { text: &quot;detention&quot;, leaf: true },
    /// { text: &quot;homework&quot;, expanded: true, children: [
    /// { text: &quot;book report&quot;, leaf: true },
    /// { text: &quot;alegrbra&quot;, leaf: true}
    /// ] },
    /// { text: &quot;buy lottery tickets&quot;, leaf: true }
    /// ]
    /// }
    /// });
    /// Ext.create(&#39;Ext.tree.Panel&#39;, {
    /// title: &#39;Simple Tree&#39;,
    /// width: 200,
    /// height: 150,
    /// store: store,
    /// rootVisible: false,
    /// renderTo: Ext.getBody()
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Panel : Ext.panel.Table, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Collapse all nodes ...
        /// </summary>
        public object collapseAll(JsAction callback=null, object scope=null){return null;}
        /// <summary>
        /// Expand all nodes ...
        /// </summary>
        public object expandAll(JsAction callback=null, object scope=null){return null;}
        /// <summary>
        /// Expand the tree to the path of a particular node. ...
        /// </summary>
        public object expandPath(JsString path, JsString field=null, JsString separator=null, JsAction callback=null, object scope=null){return null;}
        /// <summary>
        /// Retrieve an array of checked records. ...
        /// </summary>
        public JsArray getChecked(){return null;}
        /// <summary>
        /// Expand the tree to the path of a particular node, then selecti t. ...
        /// </summary>
        public object selectPath(JsString path, JsString field=null, JsString separator=null, JsAction callback=null, object scope=null){return null;}
    }
    #endregion
    #region PanelConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class PanelConfig : Ext.panel.TableConfig
    {
        /// <summary>
        /// True to enable animated expand/collapse. ...
        /// </summary>
        public bool animate{get;set;}
        /// <summary>
        /// The field inside the model that will be used as the node's text. ...
        /// </summary>
        public bool displayField{get;set;}
        /// <summary>
        /// True to automatically prepend a leaf sorter to the store. ...
        /// </summary>
        public bool folderSort{get;set;}
        /// <summary>
        /// True to hide the headers. ...
        /// </summary>
        public new bool hideHeaders{get;set;}
        /// <summary>
        /// False to disable tree lines. ...
        /// </summary>
        public bool lines{get;set;}
        /// <summary>
        /// Allows you to not specify a store on this TreePanel. ...
        /// </summary>
        public object root{get;set;}
        /// <summary>
        /// False to hide the root node. ...
        /// </summary>
        public bool rootVisible{get;set;}
        /// <summary>
        /// True if only 1 node per branch may be expanded. ...
        /// </summary>
        public bool singleExpand{get;set;}
        /// <summary>
        /// True to use Vista-style arrows in the tree. ...
        /// </summary>
        public bool useArrows{get;set;}
    }
    #endregion
    #region PanelEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class PanelEvents : Ext.panel.TableEvents
    {
        /// <summary>
        /// Fires before a new child is appended to a node in this tree, return false to cancel the append. ...
        /// </summary>
        public static JsString beforeitemappend="beforeitemappend";
        /// <summary>
        /// Fires before a node is collapsed. ...
        /// </summary>
        public static JsString beforeitemcollapse="beforeitemcollapse";
        /// <summary>
        /// Fires before a node is expanded. ...
        /// </summary>
        public static JsString beforeitemexpand="beforeitemexpand";
        /// <summary>
        /// Fires before a new child is inserted in a node in this tree, return false to cancel the insert. ...
        /// </summary>
        public static JsString beforeiteminsert="beforeiteminsert";
        /// <summary>
        /// Fires before a node is moved to a new location in the tree. ...
        /// </summary>
        public static JsString beforeitemmove="beforeitemmove";
        /// <summary>
        /// Fires before a child is removed from a node in this tree, return false to cancel the remove. ...
        /// </summary>
        public static JsString beforeitemremove="beforeitemremove";
        /// <summary>
        /// Event description ...
        /// </summary>
        public static JsString beforeload="beforeload";
        /// <summary>
        /// Fires when a node with a checkbox's checked property changes ...
        /// </summary>
        public static JsString checkchange="checkchange";
        /// <summary>
        /// Fires when a new child node is appended to a node in the tree. ...
        /// </summary>
        public static JsString itemappend="itemappend";
        /// <summary>
        /// Fires when a node is collapsed. ...
        /// </summary>
        public static JsString itemcollapse="itemcollapse";
        /// <summary>
        /// Fires when a node is expanded. ...
        /// </summary>
        public static JsString itemexpand="itemexpand";
        /// <summary>
        /// Fires when a new child node is inserted in a node in tree ...
        /// </summary>
        public static JsString iteminsert="iteminsert";
        /// <summary>
        /// Fires when a node is moved to a new location in the tree ...
        /// </summary>
        public static JsString itemmove="itemmove";
        /// <summary>
        /// Fires when a child node is removed from a node in the tree ...
        /// </summary>
        public static JsString itemremove="itemremove";
        /// <summary>
        /// Fires whenever the store reads data from a remote data source. ...
        /// </summary>
        public static JsString load="load";
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:24
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.draw
namespace Ext.draw
{
    #region Color
    /// <summary>
    /// Represents an RGB color and provides helper functions get
    /// color components in HSL color space.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Color : Ext.Base
    {
        /// <summary>
        /// Creates new Color. ...
        /// </summary>
        public object constructor(JsNumber red, JsNumber green, JsNumber blue){return null;}
        /// <summary>
        /// Get the blue component of the color, in the range 0..255. ...
        /// </summary>
        public JsNumber getBlue(){return null;}
        /// <summary>
        /// Return a new color that is darker than this color. ...
        /// </summary>
        public object getDarker(JsNumber factor){return null;}
        /// <summary>
        /// Returns the gray value (0 to 255) of the color. ...
        /// </summary>
        public JsNumber getGrayscale(){return null;}
        /// <summary>
        /// Get the green component of the color, in the range 0..255. ...
        /// </summary>
        public JsNumber getGreen(){return null;}
        /// <summary>
        /// Get the equivalent HSL components of the color. ...
        /// </summary>
        public JsNumber getHSL(){return null;}
        /// <summary>
        /// Return a new color that is lighter than this color. ...
        /// </summary>
        public object getLighter(JsNumber factor){return null;}
        /// <summary>
        /// Get the RGB values. ...
        /// </summary>
        public JsNumber getRGB(){return null;}
        /// <summary>
        /// Get the red component of the color, in the range 0..255. ...
        /// </summary>
        public JsNumber getRed(){return null;}
        /// <summary>
        /// Return the color in the hex format, i.e. ...
        /// </summary>
        public JsString toString(){return null;}
    }
    #endregion
    #region ColorConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ColorConfig : Ext.BaseConfig
    {
        /// <summary>
        /// The default factor to compute the lighter or darker color. ...
        /// </summary>
        public JsNumber lightnessFactor{get;set;}
    }
    #endregion
    #region ColorEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ColorEvents : Ext.BaseEvents
    {
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* 20/07/2011 17:29:50
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext
namespace Ext
{
    #region EventManager
    /// <summary>
    /// Registers event handlers that want to receive a normalized EventObject instead of the standard browser event and provides
    /// several useful events directly.
    /// See Ext.EventObject for more details on normalized event objects.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class EventManager
    {
        /// <summary>
        /// Appends an event handler to an element. ...
        /// </summary>
        public object addListener(object el, JsString eventName, JsAction handler, object scope=null, object options=null){return null;}
        /// <summary>
        /// Indicates which event to use for getting key presses. ...
        /// </summary>
        public JsString getKeyEvent(){return null;}
        /// <summary>
        /// Alias for Ext.EventManager.addListener ...
        /// </summary>
        public object on(){return null;}
        /// <summary>
        /// Adds a listener to be notified when the document is ready (before onload and before images are loaded). ...
        /// </summary>
        public object onDocumentReady(JsAction fn, object scope=null, bool options=false){return null;}
        /// <summary>
        /// Recursively removes all previous added listeners from an element and its children. ...
        /// </summary>
        public object purgeElement(object el, JsString eventName=null){return null;}
        /// <summary>
        /// Alias for Ext.EventManager.removeListener ...
        /// </summary>
        public object un(){return null;}
    }
    #endregion
    #region EventManagerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class EventManagerConfig
    {
    }
    #endregion
    #region EventManagerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class EventManagerEvents
    {
    }
    #endregion
}
#endregion

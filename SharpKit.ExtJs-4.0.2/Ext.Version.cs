//***************************************************
//* This file was generated by tool
//* 20/07/2011 17:29:50
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext
namespace Ext
{
    #region Version
    /// <summary>
    /// A utility class that wrap around a string version number and provide convenient
    /// method to perform comparison. See also: compare. Example: var version = new Ext.Version(&#39;1.0.2beta&#39;);
    /// console.log(&quot;Version is &quot; + version); // Version is 1.0.2beta
    /// console.log(version.getMajor()); // 1
    /// console.log(version.getMinor()); // 0
    /// console.log(version.getPatch()); // 2
    /// console.log(version.getBuild()); // 0
    /// console.log(version.getRelease()); // beta
    /// console.log(version.isGreaterThan(&#39;1.0.1&#39;)); // True
    /// console.log(version.isGreaterThan(&#39;1.0.2alpha&#39;)); // True
    /// console.log(version.isGreaterThan(&#39;1.0.2RC&#39;)); // False
    /// console.log(version.isGreaterThan(&#39;1.0.2&#39;)); // False
    /// console.log(version.isLessThan(&#39;1.0.2&#39;)); // True
    /// console.log(version.match(1.0)); // True
    /// console.log(version.match(&#39;1.0.2&#39;)); // True
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Version
    {
        /// <summary>
        /// Returns the build component value ...
        /// </summary>
        public JsNumber getBuild(){return null;}
        /// <summary>
        /// Returns the major component value ...
        /// </summary>
        public JsNumber getMajor(){return null;}
        /// <summary>
        /// Returns the minor component value ...
        /// </summary>
        public JsNumber getMinor(){return null;}
        /// <summary>
        /// Returns the patch component value ...
        /// </summary>
        public JsNumber getPatch(){return null;}
        /// <summary>
        /// Returns the release component value ...
        /// </summary>
        public JsNumber getRelease(){return null;}
        /// <summary>
        /// Returns shortVersion version without dots and release ...
        /// </summary>
        public JsString getShortVersion(){return null;}
        /// <summary>
        /// Returns this format: [major, minor, patch, build, release]. ...
        /// </summary>
        public JsArray toArray(){return null;}
    }
    #endregion
    #region VersionConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class VersionConfig
    {
    }
    #endregion
    #region VersionEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class VersionEvents
    {
    }
    #endregion
}
#endregion

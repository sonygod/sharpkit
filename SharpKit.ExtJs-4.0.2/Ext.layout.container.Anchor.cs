//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:25
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.layout.container
namespace Ext.layout.container
{
    #region Anchor
    /// <summary>
    /// This is a layout that enables anchoring of contained elements relative to the container&#39;s dimensions.
    /// If the container is resized, all anchored items are automatically rerendered according to their
    /// anchor rules. This class is intended to be extended or created via the layout: &#39;anchor&#39; Ext.layout.container.AbstractContainer.layout
    /// config, and should generally not need to be created directly via the new keyword. AnchorLayout does not have any direct config options (other than inherited ones). By default,
    /// AnchorLayout will calculate anchor measurements based on the size of the container itself. However, the
    /// container using the AnchorLayout can supply an anchoring-specific config property of anchorSize.
    /// If anchorSize is specifed, the layout will use it as a virtual container for the purposes of calculating
    /// anchor measurements based on it instead, allowing the container to be sized independently of the anchoring
    /// logic if necessary.  For example: Ext.create(&#39;Ext.Panel&#39;, {
    /// width: 500,
    /// height: 400,
    /// title: &quot;AnchorLayout Panel&quot;,
    /// layout: &#39;anchor&#39;,
    /// renderTo: Ext.getBody(),
    /// items: [{
    /// xtype: &#39;panel&#39;,
    /// title: &#39;75% Width and 20% Height&#39;,
    /// anchor: &#39;75% 20%&#39;
    /// },{
    /// xtype: &#39;panel&#39;,
    /// title: &#39;Offset -300 Width &amp;amp; -200 Height&#39;,
    /// anchor: &#39;-300 -200&#39;
    /// },{
    /// xtype: &#39;panel&#39;,
    /// title: &#39;Mixed Offset and Percent&#39;,
    /// anchor: &#39;-250 20%&#39;
    /// }]
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Anchor : Ext.layout.container.Container
    {
    }
    #endregion
    #region AnchorConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class AnchorConfig : Ext.layout.container.ContainerConfig
    {
        /// <summary>
        /// This configuation option is to be applied to child items of a container managed by
        /// this layout (ie. ...
        /// </summary>
        public JsString anchor{get;set;}
        /// <summary>
        /// Default anchor for all child container items applied if no anchor or specific width is set on the child item. ...
        /// </summary>
        public JsString defaultAnchor{get;set;}
    }
    #endregion
    #region AnchorEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class AnchorEvents : Ext.layout.container.ContainerEvents
    {
    }
    #endregion
}
#endregion

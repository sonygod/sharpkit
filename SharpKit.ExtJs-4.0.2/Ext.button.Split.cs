//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:24
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.button
namespace Ext.button
{
    #region Split
    /// <summary>
    /// A split button that provides a built-in dropdown arrow that can fire an event separately from the default
    /// click event of the button.  Typically this would be used to display a dropdown menu that provides additional
    /// options to the primary button action, but any custom handler can provide the arrowclick implementation.
    /// Example usage: // display a dropdown menu:
    /// Ext.create(&#39;Ext.button.Split&#39;, {
    /// renderTo: &#39;button-ct&#39;, // the container id
    /// text: &#39;Options&#39;,
    /// handler: optionsHandler, // handle a click on the button itself
    /// menu: new Ext.menu.Menu({
    /// items: [
    /// // these items will render as dropdown menu items when the arrow is clicked:
    /// {text: &#39;Item 1&#39;, handler: item1Handler},
    /// {text: &#39;Item 2&#39;, handler: item2Handler}
    /// ]
    /// })
    /// });
    /// // Instead of showing a menu, you provide any type of custom
    /// // functionality you want when the dropdown arrow is clicked:
    /// Ext.create(&#39;Ext.button.Split&#39;, {
    /// renderTo: &#39;button-ct&#39;,
    /// text: &#39;Options&#39;,
    /// handler: optionsHandler,
    /// arrowHandler: myCustomHandler
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Split : Button, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Sets this button's arrow click handler. ...
        /// </summary>
        public object setArrowHandler(JsAction handler, object scope=null){return null;}
    }
    #endregion
    #region SplitConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class SplitConfig : ButtonConfig
    {
        public JsAction arrowHandler{get;set;}
        public JsString arrowTooltip{get;set;}
    }
    #endregion
    #region SplitEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class SplitEvents : ButtonEvents
    {
        /// <summary>
        /// Fires when this button's arrow is clicked ...
        /// </summary>
        public static JsString arrowclick="arrowclick";
    }
    #endregion
}
#endregion

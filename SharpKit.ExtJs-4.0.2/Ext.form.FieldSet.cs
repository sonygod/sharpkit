//***************************************************
//* This file was generated by tool
//* 20/07/2011 17:29:50
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.form
namespace Ext.form
{
    #region FieldSet
    /// <summary>
    /// A container for grouping sets of fields, rendered as a HTML fieldset element. The title
    /// config will be rendered as the fieldset&#39;s legend. While FieldSets commonly contain simple groups of fields, they are general Containers
    /// and may therefore contain any type of components in their items, including other nested containers.
    /// The default layout for the FieldSet&#39;s items is &#39;anchor&#39;, but it can be configured to use any other
    /// layout type. FieldSets may also be collapsed if configured to do so; this can be done in two ways:  Set the collapsible config to true; this will result in a collapse button being rendered next to
    /// the legend title, or: Set the checkboxToggle config to true; this is similar to using collapsible but renders
    /// a checkbox in place of the toggle button. The fieldset will be expanded when the
    /// checkbox is checked and collapsed when it is unchecked. The checkbox will also be included in the
    /// form submit parameters using the checkboxName as its parameter name.   Example usage Ext.create(&#39;Ext.form.Panel&#39;, {
    /// title: &#39;Simple Form with FieldSets&#39;,
    /// labelWidth: 75, // label settings here cascade unless overridden
    /// url: &#39;save-form.php&#39;,
    /// frame: true,
    /// bodyStyle: &#39;padding:5px 5px 0&#39;,
    /// width: 550,
    /// renderTo: Ext.getBody(),
    /// layout: &#39;column&#39;, // arrange fieldsets side by side
    /// defaults: {
    /// bodyPadding: 4
    /// },
    /// items: [{
    /// // Fieldset in Column 1 - collapsible via toggle button
    /// xtype:&#39;fieldset&#39;,
    /// columnWidth: 0.5,
    /// title: &#39;Fieldset 1&#39;,
    /// collapsible: true,
    /// defaultType: &#39;textfield&#39;,
    /// defaults: {anchor: &#39;100%&#39;},
    /// layout: &#39;anchor&#39;,
    /// items :[{
    /// fieldLabel: &#39;Field 1&#39;,
    /// name: &#39;field1&#39;
    /// }, {
    /// fieldLabel: &#39;Field 2&#39;,
    /// name: &#39;field2&#39;
    /// }]
    /// }, {
    /// // Fieldset in Column 2 - collapsible via checkbox, collapsed by default, contains a panel
    /// xtype:&#39;fieldset&#39;,
    /// title: &#39;Show Panel&#39;, // title or checkboxToggle creates fieldset header
    /// columnWidth: 0.5,
    /// checkboxToggle: true,
    /// collapsed: true, // fieldset initially collapsed
    /// layout:&#39;anchor&#39;,
    /// items :[{
    /// xtype: &#39;panel&#39;,
    /// anchor: &#39;100%&#39;,
    /// title: &#39;Panel inside a fieldset&#39;,
    /// frame: true,
    /// height: 52
    /// }]
    /// }]
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class FieldSet : Ext.container.Container, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Collapses the fieldset. ...
        /// </summary>
        public FieldSet collapse(){return null;}
        /// <summary>
        /// Creates the checkbox component. ...
        /// </summary>
        public object createCheckboxCmp(){return null;}
        /// <summary>
        /// Creates the legend title component. ...
        /// </summary>
        public object createTitleCmp(){return null;}
        /// <summary>
        /// Creates the toggle button component. ...
        /// </summary>
        public object createToggleCmp(){return null;}
        /// <summary>
        /// Expands the fieldset. ...
        /// </summary>
        public FieldSet expand(){return null;}
        /// <summary>
        /// Toggle the fieldset's collapsed state to the opposite of what it is currently ...
        /// </summary>
        public object toggle(){return null;}
        /// <summary>
        /// Refers to the Ext.form.field.Checkbox component that is added next to the title in the legend. ...
        /// </summary>
        public Ext.form.field.Checkbox checkboxCmp{get;set;}
        /// <summary>
        /// The component for the fieldset's legend. ...
        /// </summary>
        public Ext.Component legend{get;set;}
        /// <summary>
        /// Refers to the Ext.panel.Tool component that is added as the collapse/expand button next
        /// to the title in the legend. ...
        /// </summary>
        public Ext.panel.Tool toggleCmp{get;set;}
    }
    #endregion
    #region FieldSetConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class FieldSetConfig
    {
        public JsString baseCls{get;set;}
        public JsString checkboxName{get;set;}
        /// <summary>
        /// Set to true to render a checkbox into the fieldset frame just
        /// in front of the legend to expand/collapse the fieldset ...
        /// </summary>
        public bool checkboxToggle{get;set;}
        /// <summary>
        /// Set to true to render the fieldset as collapsed by default. ...
        /// </summary>
        public bool collapsed{get;set;}
        /// <summary>
        /// Set to true to make the fieldset collapsible and have the expand/collapse toggle button automatically
        /// rendered into t...
        /// </summary>
        public bool collapsible{get;set;}
        /// <summary>
        /// The Ext.container.Container.layout for the fieldset's immediate child items. ...
        /// </summary>
        public JsString layout{get;set;}
        /// <summary>
        /// A title to be displayed in the fieldset's legend. ...
        /// </summary>
        public JsString title{get;set;}
    }
    #endregion
    #region FieldSetEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class FieldSetEvents
    {
    }
    #endregion
}
#endregion

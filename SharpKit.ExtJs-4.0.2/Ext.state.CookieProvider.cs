//***************************************************
//* This file was generated by tool
//* 20/07/2011 20:05:55
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.state
namespace Ext.state
{
    #region CookieProvider
    /// <summary>
    /// A Provider implementation which saves and retrieves state via cookies.
    /// The CookieProvider supports the usual cookie options, such as:  path expires domain secure     var cp = new Ext.state.CookieProvider({
    /// path: &quot;/cgi-bin/&quot;,
    /// expires: new Date(new Date().getTime()+(1000*60*60*24*30)), //30 days
    /// domain: &quot;sencha.com&quot;
    /// });
    /// Ext.state.Manager.setProvider(cp);
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class CookieProvider : Ext.state.Provider, Ext.util.Observable
    {
        /// <summary>
        /// Creates a new CookieProvider. ...
        /// </summary>
        public CookieProvider(object config=null){}
        public CookieProvider(CookieProviderConfig config){}
    }
    #endregion
    #region CookieProviderConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class CookieProviderConfig : Ext.state.ProviderConfig
    {
        /// <summary>
        /// The domain to save the cookie for. ...
        /// </summary>
        public JsString domain{get;set;}
        public JsDate expires{get;set;}
        public JsString path{get;set;}
        public bool secure{get;set;}
    }
    #endregion
    #region CookieProviderEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class CookieProviderEvents : Ext.state.ProviderEvents
    {
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:24
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.chart
namespace Ext.chart
{
    #region Legend
    /// <summary>
    /// Defines a legend for a chart&#39;s series.
    /// The &#39;chart&#39; member must be set prior to rendering.
    /// The legend class displays a list of legend items each of them related with a
    /// series being rendered. In order to render the legend item of the proper series
    /// the series configuration object must have showInSeries set to true. The legend configuration object accepts a position as parameter.
    /// The position parameter can be left, right top or bottom. For example: legend: {
    /// position: &#39;right&#39;
    /// },
    /// Full example:     var store = Ext.create(&#39;Ext.data.JsonStore&#39;, {
    /// fields: [&#39;name&#39;, &#39;data1&#39;, &#39;data2&#39;, &#39;data3&#39;, &#39;data4&#39;, &#39;data5&#39;],
    /// data: [
    /// {&#39;name&#39;:&#39;metric one&#39;, &#39;data1&#39;:10, &#39;data2&#39;:12, &#39;data3&#39;:14, &#39;data4&#39;:8, &#39;data5&#39;:13},
    /// {&#39;name&#39;:&#39;metric two&#39;, &#39;data1&#39;:7, &#39;data2&#39;:8, &#39;data3&#39;:16, &#39;data4&#39;:10, &#39;data5&#39;:3},
    /// {&#39;name&#39;:&#39;metric three&#39;, &#39;data1&#39;:5, &#39;data2&#39;:2, &#39;data3&#39;:14, &#39;data4&#39;:12, &#39;data5&#39;:7},
    /// {&#39;name&#39;:&#39;metric four&#39;, &#39;data1&#39;:2, &#39;data2&#39;:14, &#39;data3&#39;:6, &#39;data4&#39;:1, &#39;data5&#39;:23},
    /// {&#39;name&#39;:&#39;metric five&#39;, &#39;data1&#39;:27, &#39;data2&#39;:38, &#39;data3&#39;:36, &#39;data4&#39;:13, &#39;data5&#39;:33}
    /// ]
    /// });
    /// Ext.create(&#39;Ext.chart.Chart&#39;, {
    /// renderTo: Ext.getBody(),
    /// width: 500,
    /// height: 300,
    /// animate: true,
    /// store: store,
    /// shadow: true,
    /// theme: &#39;Category1&#39;,
    /// legend: {
    /// position: &#39;top&#39;
    /// },
    /// axes: [{
    /// type: &#39;Numeric&#39;,
    /// grid: true,
    /// position: &#39;left&#39;,
    /// fields: [&#39;data1&#39;, &#39;data2&#39;, &#39;data3&#39;, &#39;data4&#39;, &#39;data5&#39;],
    /// title: &#39;Sample Values&#39;,
    /// grid: {
    /// odd: {
    /// opacity: 1,
    /// fill: &#39;#ddd&#39;,
    /// stroke: &#39;#bbb&#39;,
    /// &#39;stroke-width&#39;: 1
    /// }
    /// },
    /// minimum: 0,
    /// adjustMinimumByMajorUnit: 0
    /// }, {
    /// type: &#39;Category&#39;,
    /// position: &#39;bottom&#39;,
    /// fields: [&#39;name&#39;],
    /// title: &#39;Sample Metrics&#39;,
    /// grid: true,
    /// label: {
    /// rotate: {
    /// degrees: 315
    /// }
    /// }
    /// }],
    /// series: [{
    /// type: &#39;area&#39;,
    /// highlight: false,
    /// axis: &#39;left&#39;,
    /// xField: &#39;name&#39;,
    /// yField: [&#39;data1&#39;, &#39;data2&#39;, &#39;data3&#39;, &#39;data4&#39;, &#39;data5&#39;],
    /// style: {
    /// opacity: 0.93
    /// }
    /// }]
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Legend : Ext.Base
    {
        /// <summary>
        /// Creates new Legend. ...
        /// </summary>
        public object constructor(object config=null){return null;}
        /// <summary>
        /// Whether the legend box is oriented vertically, i.e. ...
        /// </summary>
        public bool isVertical{get;set;}
    }
    #endregion
    #region LegendConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class LegendConfig : Ext.BaseConfig
    {
        public JsString boxFill{get;set;}
        public JsString boxStroke{get;set;}
        public JsString boxStrokeWidth{get;set;}
        /// <summary>
        /// Sets the z-index for the legend. ...
        /// </summary>
        public JsNumber boxZIndex{get;set;}
        public JsNumber itemSpacing{get;set;}
        public JsString labelFont{get;set;}
        public JsNumber padding{get;set;}
        /// <summary>
        /// The position of the legend in relation to the chart. ...
        /// </summary>
        public JsString position{get;set;}
        public bool visible{get;set;}
        /// <summary>
        /// X-position of the legend box. ...
        /// </summary>
        public JsNumber x{get;set;}
        /// <summary>
        /// Y-position of the legend box. ...
        /// </summary>
        public JsNumber y{get;set;}
    }
    #endregion
    #region LegendEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class LegendEvents : Ext.BaseEvents
    {
    }
    #endregion
}
#endregion

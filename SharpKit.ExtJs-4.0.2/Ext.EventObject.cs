//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
using Ext.Unknown;
#region Ext
namespace Ext
{
    #region EventObject
    /// <summary>
    /// Just as Ext.core.Element wraps around a native DOM node, Ext.EventObject
    /// wraps the browser&#39;s native event-object normalizing cross-browser differences,
    /// such as which mouse button is clicked, keys pressed, mechanisms to stop
    /// event-propagation along with a method to prevent default actions from taking place. For example: function handleClick(e, t){ // e is not a standard event object, it is a Ext.EventObject
    /// e.preventDefault();
    /// var target = e.getTarget(); // same as t (the target HTMLElement)
    /// ...
    /// }
    /// var myDiv = Ext.get(&quot;myDiv&quot;);  // get reference to an Ext.core.Element
    /// myDiv.on(         // &#39;on&#39; is shorthand for addListener
    /// &quot;click&quot;,      // perform an action on click of myDiv
    /// handleClick   // reference to the action handler
    /// );
    /// // other methods to do the same:
    /// Ext.EventManager.on(&quot;myDiv&quot;, &#39;click&#39;, handleClick);
    /// Ext.EventManager.addListener(&quot;myDiv&quot;, &#39;click&#39;, handleClick);
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class EventObject : Ext.Base
    {
        /// <summary>
        /// Correctly scales a given wheel delta. ...
        /// </summary>
        public object correctWheelDelta(JsNumber delta){return null;}
        /// <summary>
        /// Gets the character code for the event. ...
        /// </summary>
        public JsNumber getCharCode(){return null;}
        /// <summary>
        /// Returns a normalized keyCode for the event. ...
        /// </summary>
        public JsNumber getKey(){return null;}
        /// <summary>
        /// Gets the x coordinate of the event. ...
        /// </summary>
        public JsNumber getPageX(){return null;}
        /// <summary>
        /// Gets the y coordinate of the event. ...
        /// </summary>
        public JsNumber getPageY(){return null;}
        /// <summary>
        /// Returns a point object that consists of the object coordinates. ...
        /// </summary>
        public Ext.util.Point getPoint(){return null;}
        /// <summary>
        /// Gets the related target. ...
        /// </summary>
        public HTMLElement getRelatedTarget(JsString selector=null, object maxDepth=null, bool returnEl=false){return null;}
        /// <summary>
        /// Gets the target for the event. ...
        /// </summary>
        public HTMLelement getTarget(JsString selector=null, object maxDepth=null, bool returnEl=false){return null;}
        /// <summary>
        /// Gets the target for the event. ...
        /// </summary>
        public HTMLelement getTarget( JsString selector = null, object maxDepth = null) { return null; }
        /// <summary>
        /// Gets the target for the event. ...
        /// </summary>
        public HTMLelement getTarget( JsString selector = null ) { return null; }
        /// <summary>
        /// Gets the target for the event. ...
        /// </summary>
        public HTMLelement getTarget() { return null; }
        /// <summary>
        /// Normalizes mouse wheel y-delta across browsers. ...
        /// </summary>
        public JsNumber getWheelDelta(){return null;}
        /// <summary>
        /// Returns the mouse wheel deltas for this event. ...
        /// </summary>
        public object getWheelDeltas(){return null;}
        /// <summary>
        /// Gets the x coordinate of the event. ...
        /// </summary>
        public JsNumber getX(){return null;}
        /// <summary>
        /// Gets the page coordinates of the event. ...
        /// </summary>
        public JsArray getXY(){return null;}
        /// <summary>
        /// Gets the y coordinate of the event. ...
        /// </summary>
        public JsNumber getY(){return null;}
        /// <summary>
        /// Returns true if the control, meta, shift or alt key was pressed during this event. ...
        /// </summary>
        public bool hasModifier(){return false;}
        /// <summary>
        /// Injects a DOM event using the data in this object and (optionally) a new target. ...
        /// </summary>
        public object injectEvent(object target){return null;}
        /// <summary>
        /// Checks if the key pressed was a "navigation" key ...
        /// </summary>
        public bool isNavKeyPress(){return false;}
        /// <summary>
        /// Checks if the key pressed was a "special" key ...
        /// </summary>
        public bool isSpecialKey(){return false;}
        /// <summary>
        /// Prevents the browsers default handling of the event. ...
        /// </summary>
        public object preventDefault(){return null;}
        /// <summary>
        /// Stop the event (preventDefault and stopPropagation) ...
        /// </summary>
        public void stopEvent() { }
        /// <summary>
        /// Cancels bubbling of the event. ...
        /// </summary>
        public object stopPropagation(){return null;}
        public static JsNumber A{get;set;}
        public static JsNumber ALT{get;set;}
        public static JsNumber B{get;set;}
        public static JsNumber BACKSPACE{get;set;}
        public static JsNumber C{get;set;}
        public static JsNumber CAPS_LOCK{get;set;}
        public static JsNumber CONTEXT_MENU{get;set;}
        public static JsNumber CTRL{get;set;}
        public static JsNumber D{get;set;}
        public static JsNumber DELETE{get;set;}
        public static JsNumber DOWN{get;set;}
        public static JsNumber E{get;set;}
        public static JsNumber EIGHT{get;set;}
        public static JsNumber END{get;set;}
        public static JsNumber ENTER{get;set;}
        public static JsNumber ESC{get;set;}
        public static JsNumber F{get;set;}
        public static JsNumber F1{get;set;}
        public static JsNumber F10{get;set;}
        public static JsNumber F11{get;set;}
        public static JsNumber F12{get;set;}
        public static JsNumber F2{get;set;}
        public static JsNumber F3{get;set;}
        public static JsNumber F4{get;set;}
        public static JsNumber F5{get;set;}
        public static JsNumber F6{get;set;}
        public static JsNumber F7{get;set;}
        public static JsNumber F8{get;set;}
        public static JsNumber F9{get;set;}
        public static JsNumber FIVE{get;set;}
        public static JsNumber FOUR{get;set;}
        public static JsNumber G{get;set;}
        public static JsNumber H{get;set;}
        public static JsNumber HOME{get;set;}
        public static JsNumber I{get;set;}
        public static JsNumber INSERT{get;set;}
        public static JsNumber J{get;set;}
        public static JsNumber K{get;set;}
        public static JsNumber L{get;set;}
        public static JsNumber LEFT{get;set;}
        public static JsNumber M{get;set;}
        public static JsNumber N{get;set;}
        public static JsNumber NINE{get;set;}
        public static JsNumber NUM_CENTER{get;set;}
        public static JsNumber NUM_DIVISION{get;set;}
        public static JsNumber NUM_EIGHT{get;set;}
        public static JsNumber NUM_FIVE{get;set;}
        public static JsNumber NUM_FOUR{get;set;}
        public static JsNumber NUM_MINUS{get;set;}
        public static JsNumber NUM_MULTIPLY{get;set;}
        public static JsNumber NUM_NINE{get;set;}
        public static JsNumber NUM_ONE{get;set;}
        public static JsNumber NUM_PERIOD{get;set;}
        public static JsNumber NUM_PLUS{get;set;}
        public static JsNumber NUM_SEVEN{get;set;}
        public static JsNumber NUM_SIX{get;set;}
        public static JsNumber NUM_THREE{get;set;}
        public static JsNumber NUM_TWO{get;set;}
        public static JsNumber NUM_ZERO{get;set;}
        public static JsNumber O{get;set;}
        public static JsNumber ONE{get;set;}
        public static JsNumber P{get;set;}
        public static JsNumber PAGE_DOWN{get;set;}
        public static JsNumber PAGE_UP{get;set;}
        public static JsNumber PAUSE{get;set;}
        public static JsNumber PRINT_SCREEN{get;set;}
        public static JsNumber Q{get;set;}
        public static JsNumber R{get;set;}
        public static JsNumber RETURN{get;set;}
        public static JsNumber RIGHT{get;set;}
        public static JsNumber S{get;set;}
        public static JsNumber SEVEN{get;set;}
        public static JsNumber SHIFT{get;set;}
        public static JsNumber SIX{get;set;}
        public static JsNumber SPACE{get;set;}
        public static JsNumber T{get;set;}
        public static JsNumber TAB{get;set;}
        public static JsNumber THREE{get;set;}
        public static JsNumber TWO{get;set;}
        public static JsNumber U{get;set;}
        public static JsNumber UP{get;set;}
        public static JsNumber V{get;set;}
        public static JsNumber W{get;set;}
        /// <summary>
        /// The mouse wheel delta scaling factor. ...
        /// </summary>
        public static JsNumber WHEEL_SCALE{get;set;}
        public static JsNumber X{get;set;}
        public static JsNumber Y{get;set;}
        public static JsNumber Z{get;set;}
        public static JsNumber ZERO{get;set;}
        public EventObject(EventObjectConfig config){}
        public EventObject(){}

        public JsString message { get; set; }
    }
    #endregion
    #region EventObjectConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class EventObjectConfig : Ext.BaseConfig
    {
    }
    #endregion
    #region EventObjectEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class EventObjectEvents : Ext.BaseEvents
    {
    }
    #endregion
}
#endregion

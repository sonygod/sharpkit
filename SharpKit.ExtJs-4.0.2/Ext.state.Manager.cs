//***************************************************
//* This file was generated by tool
//* 20/07/2011 19:12:25
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.state
namespace Ext.state
{
    #region Manager
    /// <summary>
    /// This is the global state manager. By default all components that are &quot;state aware&quot; check this class
    /// for state information if you don&#39;t pass them a custom state provider. In order for this class
    /// to be useful, it must be initialized with a provider when your application initializes. Example usage: // in your initialization function
    /// init : function(){
    /// Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
    /// var win = new Window(...);
    /// win.restoreState();
    /// }
    /// This class passes on calls from components to the underlying Ext.state.Provider so that
    /// there is a common interface that can be used without needing to refer to a specific provider instance
    /// in every component.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Manager : Ext.Base
    {
        /// <summary>
        /// Clears a value from the state ...
        /// </summary>
        public object clear(JsString name){return null;}
        /// <summary>
        /// Returns the current value for a key ...
        /// </summary>
        public object get(JsString name, object defaultValue){return null;}
        /// <summary>
        /// Gets the currently configured state provider ...
        /// </summary>
        public Provider getProvider(){return null;}
        /// <summary>
        /// Sets the value for a key ...
        /// </summary>
        public object set(JsString name, object value){return null;}
        /// <summary>
        /// Configures the default state provider for your application ...
        /// </summary>
        public object setProvider(Provider stateProvider){return null;}
    }
    #endregion
    #region ManagerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ManagerConfig : Ext.BaseConfig
    {
    }
    #endregion
    #region ManagerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ManagerEvents : Ext.BaseEvents
    {
    }
    #endregion
}
#endregion

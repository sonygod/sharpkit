//***************************************************
//* This file was generated by tool
//* 20/07/2011 20:05:54
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.layout.container
namespace Ext.layout.container
{
    #region AbstractContainer
    /// <summary>
    /// Please refer to sub classes documentation
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class AbstractContainer : Layout
    {
        /// <summary>
        /// Returns an array of child components either for a render phase (Performed in the beforeLayout method of the layout's
        /// ...
        /// </summary>
        public JsArray getLayoutItems(){return null;}
        /// <summary>
        /// Returns the element into which rendering must take place. ...
        /// </summary>
        public Ext.core.Element getRenderTarget(){return null;}
        /// <summary>
        /// Returns the owner component's resize element. ...
        /// </summary>
        public Ext.core.Element getTarget(){return null;}
        public AbstractContainer(Ext.layout.container.AbstractContainerConfig config){}
        public AbstractContainer(){}
    }
    #endregion
    #region AbstractContainerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class AbstractContainerConfig : LayoutConfig
    {
        public bool bindToOwnerCtComponent{get;set;}
        public bool bindToOwnerCtContainer{get;set;}
        /// <summary>
        /// An optional extra CSS class that will be added to the container. ...
        /// </summary>
        public JsString itemCls{get;set;}
    }
    #endregion
    #region AbstractContainerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class AbstractContainerEvents : LayoutEvents
    {
    }
    #endregion
}
#endregion

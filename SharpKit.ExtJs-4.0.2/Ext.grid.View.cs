//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.grid
namespace Ext.grid
{
    #region View
    /// <summary>
    /// The grid View class provides extra Ext.grid.Panel specific functionality to the
    /// Ext.view.Table. In general, this class is not instanced directly, instead a viewConfig
    /// option is passed to the grid: Ext.create(&#39;Ext.grid.Panel&#39;, {
    /// // other options
    /// viewConfig: {
    /// stripeRows: false
    /// }
    /// });
    /// Drag Drop
    /// Drag and drop functionality can be achieved in the grid by attaching a Ext.grid.plugin.DragDrop plugin
    /// when creating the view. Ext.create(&#39;Ext.grid.Panel&#39;, {
    /// // other options
    /// viewConfig: {
    /// plugins: {
    /// ddGroup: &#39;people-group&#39;,
    /// ptype: &#39;gridviewdragdrop&#39;,
    /// enableDrop: false
    /// }
    /// }
    /// });
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class View : Ext.view.Table, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        public View(Ext.grid.ViewConfig config){}
        public View(){}
    }
    #endregion
    #region ViewConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ViewConfig : Ext.view.TableConfig
    {
        /// <summary>
        /// true to stripe the rows. ...
        /// </summary>
        public bool stripeRows{get;set;}
    }
    #endregion
    #region ViewEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ViewEvents : Ext.view.TableEvents
    {
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* 20/07/2011 17:29:50
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.form.field
namespace Ext.form.field
{
    #region Picker
    /// <summary>
    /// An abstract class for fields that have a single trigger which opens a &quot;picker&quot; popup below
    /// the field, e.g. a combobox menu list or a date picker. It provides a base implementation for
    /// toggling the picker&#39;s visibility when the trigger is clicked, as well as keyboard navigation
    /// and some basic events. Sizing and alignment of the picker can be controlled via the matchFieldWidth
    /// and pickerAlign/pickerOffset config properties respectively. You would not normally use this class directly, but instead use it as the parent class for
    /// a specific picker field implementation. Subclasses must implement the createPicker method
    /// to create a picker component appropriate for the field.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Picker : Trigger, Labelable, Ext.form.field.Field, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Aligns the picker to the ...
        /// </summary>
        public object alignPicker(){return null;}
        /// <summary>
        /// Collapse this field's picker dropdown. ...
        /// </summary>
        public object collapse(){return null;}
        /// <summary>
        /// Expand this field's picker dropdown. ...
        /// </summary>
        public object expand(){return null;}
        /// <summary>
        /// Return a reference to the picker component for this field, creating it if necessary by
        /// calling createPicker. ...
        /// </summary>
        public Ext.Component getPicker(){return null;}
        /// <summary>
        /// Handles the trigger click; by default toggles between expanding and collapsing the
        /// picker component. ...
        /// </summary>
        public object onTriggerClick(){return null;}
        /// <summary>
        /// Create and return the component to be used as this field's picker. ...
        /// </summary>
        public object createPicker{get;set;}
        public bool isExpanded{get;set;}
    }
    #endregion
    #region PickerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class PickerConfig
    {
        /// <summary>
        /// false to prevent the user from typing text directly into the field;
        /// the field can only have its value set via selecti...
        /// </summary>
        public bool editable{get;set;}
        /// <summary>
        /// Whether the picker dropdown's width should be explicitly set to match the width of the field. ...
        /// </summary>
        public bool matchFieldWidth{get;set;}
        /// <summary>
        /// A class to be added to the field's bodyEl element when the picker is opened. ...
        /// </summary>
        public JsString openCls{get;set;}
        /// <summary>
        /// The alignment position with which to align the picker. ...
        /// </summary>
        public JsString pickerAlign{get;set;}
        /// <summary>
        /// An offset [x,y] to use in addition to the pickerAlign when positioning the picker. ...
        /// </summary>
        public JsArray pickerOffset{get;set;}
    }
    #endregion
    #region PickerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class PickerEvents
    {
        /// <summary>
        /// Fires when the field's picker is collapsed. ...
        /// </summary>
        public static JsString collapse="collapse";
        /// <summary>
        /// Fires when the field's picker is expanded. ...
        /// </summary>
        public static JsString expand="expand";
        /// <summary>
        /// Fires when a value is selected via the picker. ...
        /// </summary>
        public static JsString select="select";
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* 20/07/2011 18:52:01
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext
namespace Ext
{
    #region ZIndexManager
    /// <summary>
    /// A class that manages a group of Ext.Component.floating Components and provides z-order management,
    /// and Component activation behavior, including masking below the active (topmost) Component. Floating Components which are rendered directly into the document (Such as Windows which are
    /// shown are managed by a global instance. Floating Components which are descendants of floating Containers
    /// (For example a {Ext.view.BoundList BoundList} within an Window, or a Menu),
    /// are managed by a ZIndexManager owned by that floating Container. So ComboBox dropdowns within Windows will have managed z-indices
    /// guaranteed to be correct, relative to the Window.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class ZIndexManager : Ext.Base
    {
        /// <summary>
        /// Brings the specified Component to the front of any other active Components in this ZIndexManager. ...
        /// </summary>
        public bool bringToFront(object comp){return false;}
        /// <summary>
        /// Executes the specified function once for every Component in this ZIndexManager, passing each
        /// Component as the only pa...
        /// </summary>
        public object each(JsAction fn, object scope=null){return null;}
        /// <summary>
        /// Executes the specified function once for every Component in this ZIndexManager, passing each
        /// Component as the only pa...
        /// </summary>
        public object eachBottomUp(JsAction fn, object scope=null){return null;}
        /// <summary>
        /// Executes the specified function once for every Component in this ZIndexManager, passing each
        /// Component as the only pa...
        /// </summary>
        public object eachTopDown(JsAction fn, object scope=null){return null;}
        /// <summary>
        /// Gets a registered Component by id. ...
        /// </summary>
        public Ext.Component get(object id){return null;}
        /// <summary>
        /// Gets the currently-active Component in this ZIndexManager. ...
        /// </summary>
        public Ext.Component getActive(){return null;}
        /// <summary>
        /// Returns zero or more Components in this ZIndexManager using the custom search function passed to this method. ...
        /// </summary>
        public JsArray getBy(JsAction fn, object scope=null){return null;}
        /// <summary>
        /// Hides all Components managed by this ZIndexManager. ...
        /// </summary>
        public object hideAll(){return null;}
        /// <summary>
        /// Registers a floating Ext.Component with this ZIndexManager. ...
        /// </summary>
        public object register(Ext.Component comp){return null;}
        /// <summary>
        /// Sends the specified Component to the back of other active Components in this ZIndexManager. ...
        /// </summary>
        public Ext.Component sendToBack(object comp){return null;}
        /// <summary>
        /// Unregisters a Ext.Component from this ZIndexManager. ...
        /// </summary>
        public object unregister(Ext.Component comp){return null;}
    }
    #endregion
    #region ZIndexManagerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ZIndexManagerConfig
    {
    }
    #endregion
    #region ZIndexManagerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ZIndexManagerEvents
    {
    }
    #endregion
}
#endregion

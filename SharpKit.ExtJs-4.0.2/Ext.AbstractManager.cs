//***************************************************
//* This file was generated by tool
//* 20/07/2011 20:05:53
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext
namespace Ext
{
    #region AbstractManager
    /// <summary>
    /// Base Manager class
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class AbstractManager
    {
        /// <summary>
        /// Creates and returns an instance of whatever this manager manages, based on the supplied type and config object ...
        /// </summary>
        public object create(object config, JsString defaultType){return null;}
        /// <summary>
        /// Executes the specified function once for each item in the collection. ...
        /// </summary>
        public object each(object fn, object scope){return null;}
        /// <summary>
        /// Returns an item by id. ...
        /// </summary>
        public object get(JsString id){return null;}
        /// <summary>
        /// Gets the number of items in the collection. ...
        /// </summary>
        public JsNumber getCount(){return null;}
        /// <summary>
        /// Checks if an item type is registered. ...
        /// </summary>
        public bool isRegistered(JsString type){return false;}
        /// <summary>
        /// Registers a function that will be called when an item with the specified id is added to the manager. ...
        /// </summary>
        public object onAvailable(JsString id, JsAction fn, object scope){return null;}
        /// <summary>
        /// Registers an item to be managed ...
        /// </summary>
        public object register(object item){return null;}
        /// <summary>
        /// Registers a new item constructor, keyed by a type key. ...
        /// </summary>
        public object registerType(JsString type, Constructor cls){return null;}
        /// <summary>
        /// Unregisters an item by removing it from this manager ...
        /// </summary>
        public object unregister(object item){return null;}
        public Ext.util.MixedCollection all{get;set;}
        public AbstractManager(AbstractManagerConfig config){}
        public AbstractManager(){}
    }
    #endregion
    #region AbstractManagerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class AbstractManagerConfig
    {
    }
    #endregion
    #region AbstractManagerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class AbstractManagerEvents
    {
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* 20/07/2011 17:29:50
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext
namespace Ext
{
    #region ExtGlobal
    /// <summary>
    /// The Ext namespace (global object) encapsulates all classes, singletons, and utility methods provided by Sencha&#39;s libraries.
    /// Most user interface Components are at a lower level of nesting in the namespace, but many common utility functions are provided
    /// as direct properties of the Ext namespace.  Also many frequently used methods from other classes are provided as shortcuts within the Ext namespace.
    /// For example Ext.getCmp aliases Ext.ComponentManager.get.  Many applications are initiated with Ext.onReady which is called once the DOM is ready.
    /// This ensures all scripts have been loaded, preventing dependency issues. For example  Ext.onReady(function(){
    /// new Ext.Component({
    /// renderTo: document.body,
    /// html: &#39;DOM ready!&#39;
    /// });
    /// });
    /// For more information about how to use the Ext classes, see  The Learning Center The FAQ The forums
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, Name="Ext")]
    public partial class ExtGlobal
    {
        /// <summary>
        /// Create a new function from the provided fn, change this to the provided scope, optionally
        /// overrides arguments for the...
        /// </summary>
        public JsAction bind(JsAction fn, object scope=null, JsArray args=null, object appendArgs=null){return null;}
        /// <summary>
        /// Execute a callback function in a particular scope. ...
        /// </summary>
        public object callback(JsAction callback, object scope=null, JsArray args=null, JsNumber delay=null){return null;}
        /// <summary>
        /// Shorthand for Ext.JSON.decode ...
        /// </summary>
        public object decode(JsString json, bool safe=false){return null;}
        /// <summary>
        /// Calls this function after the number of millseconds specified, optionally in a specific scope. ...
        /// </summary>
        public JsNumber defer(JsAction fn, JsNumber millis, object scope=null, JsArray args=null, object appendArgs=null){return null;}
        /// <summary>
        /// Attempts to destroy any objects passed to it by removing all event listeners, removing them from the
        /// DOM (if applicab...
        /// </summary>
        public object destroy(object arg1, object arg2=null, object etc=null){return null;}
        /// <summary>
        /// A reusable empty function ...
        /// </summary>
        public object emptyFn(){return null;}
        /// <summary>
        /// Gets the globally shared flyweight Element, with the passed node as the active element. ...
        /// </summary>
        public Ext.Element fly(object el, JsString named=null){return null;}
        /// <summary>
        /// Returns the current document body as an Ext.core.Element. ...
        /// </summary>
        public object getBody(){return null;}
        /// <summary>
        /// Returns the current HTML document object as an Ext.core.Element. ...
        /// </summary>
        public object getDoc(){return null;}
        /// <summary>
        /// Returns the current document head as an Ext.core.Element. ...
        /// </summary>
        public object getHead(){return null;}
        /// <summary>
        /// Returns the current orientation of the mobile device ...
        /// </summary>
        public JsString getOrientation(){return null;}
        /// <summary>
        /// Utility method for getting the width of the browser's vertical scrollbar. ...
        /// </summary>
        public JsNumber getScrollBarWidth(bool force=false){return null;}
        /// <summary>
        /// Returns the size of the browser scrollbars. ...
        /// </summary>
        public object getScrollbarSize(bool force=false){return null;}
        /// <summary>
        /// Generates unique ids. ...
        /// </summary>
        public JsString id(object el=null, JsString prefix=null){return null;}
        /// <summary>
        /// Returns true if the passed value is empty, false otherwise. ...
        /// </summary>
        public bool isEmpty(object value, bool allowEmptyString=false){return false;}
        /// <summary>
        /// Old alias to Ext.Array.max
        /// Returns the maximum value in the Array. ...
        /// </summary>
        public object max(object array, JsAction comparisonFn=null){return null;}
        /// <summary>
        /// A convenient alias method for Ext.Object.merge ...
        /// </summary>
        public object merge(){return null;}
        /// <summary>
        /// Old alias to Ext.Array.min
        /// Returns the minimum value in the Array. ...
        /// </summary>
        public object min(object array, JsAction comparisonFn=null){return null;}
        /// <summary>
        /// This method is deprecated, please use Ext.Number.from instead ...
        /// </summary>
        public object num(){return null;}
        /// <summary>
        /// Alias for Ext.EventManager.onDocumentReady ...
        /// </summary>
        public object onDocumentReady(){return null;}
        /// <summary>
        /// Partitions the set into two sets: a true set and a false set. ...
        /// </summary>
        public JsArray partition(object arr, JsAction truth=null){return null;}
        /// <summary>
        /// Create a new function from the provided fn, the arguments of which are pre-set to args. ...
        /// </summary>
        public JsAction pass(JsAction fn, JsArray args, object scope=null){return null;}
        /// <summary>
        /// Selects an array of DOM nodes by CSS/XPath selector. ...
        /// </summary>
        public JsArray query(JsString path, Node root=null){return null;}
        /// <summary>
        /// Selects elements based on the passed CSS selector to enable Element methods
        /// to be applied to many related elements in...
        /// </summary>
        public object select(object selector, bool unique=false, object root=null){return null;}
        /// <summary>
        /// A convenient alias method for Ext.Object.fromQueryString ...
        /// </summary>
        public object urlDecode(){return null;}
        /// <summary>
        /// A convenient alias method for Ext.Object.toQueryString ...
        /// </summary>
        public object urlEncode(){return null;}
        /// <summary>
        /// Utility method for returning a default value if the passed value is empty. ...
        /// </summary>
        public object value(object value, object defaultValue, bool allowBlank=false){return null;}
        /// <summary>
        /// Returns the given value itself if it's not empty, as described in isEmpty; returns the default
        /// value (second argument...
        /// </summary>
        public object valueFrom(object value, object defaultValue, bool allowBlank=false){return null;}
        /// <summary>
        /// Zips N sets together. ...
        /// </summary>
        public JsArray zip(object arr, JsAction zipper=null){return null;}
        /// <summary>
        /// URL to a 1x1 transparent gif image used by Ext to create inline icons with CSS background images. ...
        /// </summary>
        public JsString BLANK_IMAGE_URL{get;set;}
        /// <summary>
        /// URL to a blank file used by Ext when in secure mode for iframe src and onReady src to prevent
        /// the IE insecure content...
        /// </summary>
        public JsString SSL_SECURE_URL{get;set;}
        /// <summary>
        /// Indicates whether to use native browser parsing for JSON methods. ...
        /// </summary>
        public bool USE_NATIVE_JSON{get;set;}
        public bool enableFx{get;set;}
        public bool enableGarbageCollector{get;set;}
        public bool enableListenerCollection{get;set;}
        /// <summary>
        /// EXPERIMENTAL - True to cascade listener removal to child elements when an element is removed. ...
        /// </summary>
        public bool enableNestedListenerRemoval{get;set;}
        public JsArray enumerables{get;set;}
        public bool isChrome{get;set;}
        public bool isFF3_0{get;set;}
        public bool isFF3_5{get;set;}
        public bool isFF3_6{get;set;}
        /// <summary>
        /// True if the detected browser uses the Gecko layout engine (e.g. ...
        /// </summary>
        public bool isGecko{get;set;}
        /// <summary>
        /// True if the detected browser uses a Gecko 1.9+ layout engine (e.g. ...
        /// </summary>
        public bool isGecko3{get;set;}
        /// <summary>
        /// True if the detected browser uses a Gecko 2.0+ layout engine (e.g. ...
        /// </summary>
        public bool isGecko4{get;set;}
        public bool isIE{get;set;}
        public bool isIE6{get;set;}
        public bool isIE7{get;set;}
        public bool isIE8{get;set;}
        public bool isIE9{get;set;}
        public bool isLinux{get;set;}
        public bool isMac{get;set;}
        public bool isOpera{get;set;}
        public bool isOpera10_5{get;set;}
        public bool isReady{get;set;}
        public bool isSafari{get;set;}
        public bool isSafari2{get;set;}
        public bool isSafari3{get;set;}
        public bool isSafari4{get;set;}
        public bool isWebKit{get;set;}
        public bool isWindows{get;set;}
        /// <summary>
        /// True to scope the reset CSS to be just applied to Ext components. ...
        /// </summary>
        public bool scopeResetCSS{get;set;}
        /// <summary>
        /// By default, Ext intelligently decides whether floating elements should be shimmed. ...
        /// </summary>
        public bool useShims{get;set;}
        public JsNumber webKitVersion{get;set;}
    }
    #endregion
    #region ExtGlobalConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ExtGlobalConfig
    {
    }
    #endregion
    #region ExtGlobalEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ExtGlobalEvents
    {
    }
    #endregion
}
#endregion

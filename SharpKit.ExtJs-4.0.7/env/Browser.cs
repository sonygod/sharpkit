//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.env
namespace Ext.env
{
    #region Browser
    /// <summary>
    /// Provide useful information about the current browser.
    /// Should not be manually instantiated unless for unit-testing; access the global instance stored in Ext.browser instead. Example: if (Ext.browser.is.IE) {
    /// // IE specific code here
    /// }
    /// if (Ext.browser.is.WebKit) {
    /// // WebKit specific code here
    /// }
    /// console.log(&quot;Version &quot; + Ext.browser.version);
    /// For a full list of supported values, refer to: is @borrows Ext.Base.extend
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Browser : Ext.Base
    {
        /// <summary>
        /// A "hybrid" property, can be either accessed as a method call, i.e:
        /// if (Ext.browser.is('IE')) { ... ...
        /// </summary>
        public bool @is(JsString value){return false;}
        public JsString engineName{get;set;}
        public Version engineVersion{get;set;}
        public bool isSecure{get;set;}
        public bool isStrict{get;set;}
        public JsString name{get;set;}
        public Version version{get;set;}
        public Browser(BrowserConfig config){}
        public Browser(){}
    }
    #endregion
    #region BrowserConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class BrowserConfig : Ext.BaseConfig
    {
    }
    #endregion
    #region BrowserEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class BrowserEvents : Ext.BaseEvents
    {
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.container
namespace Ext.container
{
    #region AbstractContainer
    /// <summary>
    /// An abstract base class which provides shared methods for Containers across the Sencha product line. Please refer to sub class&#39;s documentation
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class AbstractContainer : Ext.Component, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        /// <summary>
        /// Adds Component(s) to this Container. ...
        /// </summary>
        public object add(params object[] components){return null;}
        /// <summary>
        /// Occurs before componentLayout is run. ...
        /// </summary>
        public object beforeLayout(){return null;}
        /// <summary>
        /// Cascades down the component/container heirarchy from this component (passed in the first call), calling the specified...
        /// </summary>
        public Ext.container.Container cascade(JsAction fn, object scope=null, JsArray args=null){return null;}
        /// <summary>
        /// Retrieves the first direct child of this container which matches the passed selector. ...
        /// </summary>
        public object child(JsString selector){return null;}
        /// <summary>
        /// Manually force this container's layout to be recalculated. ...
        /// </summary>
        public Ext.container.Container doLayout(){return null;}
        /// <summary>
        /// Retrieves the first descendant of this container which matches the passed selector. ...
        /// </summary>
        public object down(JsString selector){return null;}
        /// <summary>
        /// Examines this container's items property
        /// and gets a direct child component of this container. ...
        /// </summary>
        public object getComponent(object comp){return null;}
        /// <summary>
        /// Returns the layout instance currently associated with this Container. ...
        /// </summary>
        public Ext.layout.container.AbstractContainer getLayout(){return null;}
        /// <summary>
        /// Inserts a Component into this Container at a specified index. ...
        /// </summary>
        public Ext.Component insert(JsNumber index, Ext.Component component){return null;}
        /// <summary>
        /// Moves a Component within the Container ...
        /// </summary>
        public Ext.Component move(JsNumber fromIdx, JsNumber toIdx){return null;}
        /// <summary>
        /// Retrieves all descendant components which match the passed selector. ...
        /// </summary>
        public JsArray query(JsString selector){return null;}
        /// <summary>
        /// Removes a component from this container. ...
        /// </summary>
        public Ext.Component remove(object component, bool autoDestroy=false){return null;}
        /// <summary>
        /// Removes all components from this container. ...
        /// </summary>
        public JsArray removeAll(bool autoDestroy=false){return null;}
        public Ext.util.MixedCollection items{get;set;}
        public AbstractContainer(Ext.container.AbstractContainerConfig config){}
        public AbstractContainer(){}
    }
    #endregion
    #region AbstractContainerConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class AbstractContainerConfig : Ext.ComponentConfig
    {
        /// <summary>
        /// A string component id or the numeric index of the component that should be initially activated within the
        /// container's...
        /// </summary>
        public object activeItem{get;set;}
        /// <summary>
        /// If true the container will automatically destroy any contained component that is removed from it, else
        /// destruction mu...
        /// </summary>
        public bool autoDestroy{get;set;}
        /// <summary>
        /// An array of events that, when fired, should be bubbled to any parent container. ...
        /// </summary>
        public JsArray bubbleEvents{get;set;}
        /// <summary>
        /// The default xtype of child Components to create in this Container when
        /// a child item is specified as a raw configurati...
        /// </summary>
        public JsString defaultType{get;set;}
        /// <summary>
        /// This option is a means of applying default settings to all added items whether added through the items
        /// config or via ...
        /// </summary>
        public object defaults{get;set;}
        /// <summary>
        /// A single item, or an array of child Components to be added to this container
        /// Unless configured with a layout, a Con...
        /// </summary>
        public object items{get;set;}
        /// <summary>
        /// *Important: In order for child items to be correctly sized and
        /// positioned, typically a layout manager must be specifi...
        /// </summary>
        public object layout{get;set;}
        /// <summary>
        /// If true, suspend calls to doLayout. ...
        /// </summary>
        public bool suspendLayout{get;set;}
    }
    #endregion
    #region AbstractContainerEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class AbstractContainerEvents : Ext.ComponentEvents
    {
        /// <summary>
        /// @bubbles
        /// Fires after any Ext.Component is added or inserted into the container. ...
        /// </summary>
        public static JsString add="add";
        /// <summary>
        /// Fires when the components in this container are arranged by the associated layout manager. ...
        /// </summary>
        public static JsString afterlayout="afterlayout";
        /// <summary>
        /// Fires before any Ext.Component is added or inserted into the container. ...
        /// </summary>
        public static JsString beforeadd="beforeadd";
        /// <summary>
        /// Fires before this container switches the active card. ...
        /// </summary>
        public static JsString beforecardswitch="beforecardswitch";
        /// <summary>
        /// Fires before any Ext.Component is removed from the container. ...
        /// </summary>
        public static JsString beforeremove="beforeremove";
        /// <summary>
        /// Fires after this container switches the active card. ...
        /// </summary>
        public static JsString cardswitch="cardswitch";
        /// <summary>
        /// @bubbles
        /// Fires after any Ext.Component is removed from the container. ...
        /// </summary>
        public static JsString remove="remove";
    }
    #endregion
}
#endregion

//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using SharpKit.JavaScript;
#region Ext.grid.column
namespace Ext.grid.column
{
    #region Action
    /// <summary>
    /// A Grid header type which renders an icon, or a series of icons in a grid cell, and offers a scoped click
    /// handler for each icon.  Code Ext.create(&#39;Ext.data.Store&#39;, {
    /// storeId:&#39;employeeStore&#39;,
    /// fields:[&#39;firstname&#39;, &#39;lastname&#39;, &#39;senority&#39;, &#39;dep&#39;, &#39;hired&#39;],
    /// data:[
    /// {firstname:&quot;Michael&quot;, lastname:&quot;Scott&quot;},
    /// {firstname:&quot;Dwight&quot;, lastname:&quot;Schrute&quot;},
    /// {firstname:&quot;Jim&quot;, lastname:&quot;Halpert&quot;},
    /// {firstname:&quot;Kevin&quot;, lastname:&quot;Malone&quot;},
    /// {firstname:&quot;Angela&quot;, lastname:&quot;Martin&quot;}
    /// ]
    /// });
    /// Ext.create(&#39;Ext.grid.Panel&#39;, {
    /// title: &#39;Action Column Demo&#39;,
    /// store: Ext.data.StoreManager.lookup(&#39;employeeStore&#39;),
    /// columns: [
    /// {text: &#39;First Name&#39;,  dataIndex:&#39;firstname&#39;},
    /// {text: &#39;Last Name&#39;,  dataIndex:&#39;lastname&#39;},
    /// {
    /// xtype:&#39;actioncolumn&#39;,
    /// width:50,
    /// items: [{
    /// icon: &#39;images/edit.png&#39;,  // Use a URL in the icon config
    /// tooltip: &#39;Edit&#39;,
    /// handler: function(grid, rowIndex, colIndex) {
    /// var rec = grid.getStore().getAt(rowIndex);
    /// alert(&quot;Edit &quot; + rec.get(&#39;firstname&#39;));
    /// }
    /// },{
    /// icon: &#39;images/delete.png&#39;,
    /// tooltip: &#39;Delete&#39;,
    /// handler: function(grid, rowIndex, colIndex) {
    /// var rec = grid.getStore().getAt(rowIndex);
    /// alert(&quot;Terminate &quot; + rec.get(&#39;firstname&#39;));
    /// }
    /// }]
    /// }
    /// ],
    /// width: 250,
    /// renderTo: Ext.getBody()
    /// });
    /// The action column can be at any index in the columns array, and a grid can have any number of
    /// action columns.
    /// </summary>
    [JsType(JsMode.Prototype, Export=false)]
    public partial class Action : Ext.grid.column.Column, Ext.util.Floating, Ext.util.Observable, Ext.util.Animate, Ext.state.Stateful
    {
        public Action(Ext.grid.column.ActionConfig config){}
        public Action(){}
    }
    #endregion
    #region ActionConfig
    [JsType(JsMode.Json, Export=false)]
    public partial class ActionConfig : Ext.grid.column.ColumnConfig
    {
        /// <summary>
        /// The alt text to use for the image element. ...
        /// </summary>
        public JsString altText{get;set;}
        /// <summary>
        /// A function which returns the CSS class to apply to the icon image. ...
        /// </summary>
        public JsAction getClass{get;set;}
        /// <summary>
        /// A function called when the icon is clicked. ...
        /// </summary>
        public JsAction handler{get;set;}
        /// <summary>
        /// The URL of an image to display as the clickable element in the column. ...
        /// </summary>
        public JsString icon{get;set;}
        /// <summary>
        /// A CSS class to apply to the icon image. ...
        /// </summary>
        public JsString iconCls{get;set;}
        /// <summary>
        /// An Array which may contain multiple icon definitions, each element of which may contain:
        /// icon : StringThe url of an...
        /// </summary>
        public new JsArray items{get;set;}
        /// <summary>
        /// The scope (this reference) in which the handler
        /// and getClass fuctions are executed. ...
        /// </summary>
        public object scope{get;set;}
        /// <summary>
        /// Defaults to true. ...
        /// </summary>
        public bool stopSelection{get;set;}
        /// <summary>
        /// A tooltip message to be displayed on hover. ...
        /// </summary>
        public JsString tooltip{get;set;}
    }
    #endregion
    #region ActionEvents
    [JsType(JsMode.Json, Export=false)]
    public partial class ActionEvents : Ext.grid.column.ColumnEvents
    {
    }
    #endregion
}
#endregion

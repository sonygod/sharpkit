//Generated by a tool of Sebastian Loncar

namespace SharpKit.Html
{

using SharpKit.JavaScript;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields = true, OmitCasts = true)]
public partial class HtmlInputElement : HtmlElement
{

	// HTMLInputElement
	public JsString accept {get; set; }
	public JsString alt {get; set; }
	public bool autocomplete {get; set; }
	public bool autofocus {get; set; }
	public bool defaultChecked {get; set; }
	public bool @checked {get; set; }
	public bool disabled {get; set; }
	public HtmlFormElement form {get; private set; }
	public File files {get; private set; }
	public JsString formAction {get; set; }
	public JsString formEnctype {get; set; }
	public JsString formMethod {get; set; }
	public bool formNoValidate {get; set; }
	public JsString formTarget {get; set; }
	public JsString height {get; set; }
	public bool indeterminate {get; set; }
	public HtmlElement list {get; private set; }
	public JsString max {get; set; }
	public int maxLength {get; set; }
	public JsString min {get; set; }
	public bool multiple {get; set; }
	public JsString name {get; set; }
	public JsString pattern {get; set; }
	public JsString placeholder {get; set; }
	public bool readOnly {get; set; }
	public bool required {get; set; }
	public int size {get; set; }
	public JsString src {get; set; }
	public JsString step {get; set; }
	public JsString type {get; set; }
	public JsString defaultValue {get; set; }
	public JsString value {get; set; }
	public long valueAsDate {get; set; }
	public float valueAsNumber {get; set; }
	public HtmlOptionElement selectedOption {get; private set; }
	public JsString width {get; set; }
	public void stepUp() {}
	public void stepUp(int n) {}
	public void stepDown() {}
	public void stepDown(int n) {}
	public bool willValidate {get; private set; }
	public ValidityState validity {get; private set; }
	public JsString validationMessage {get; private set; }
	public bool checkValidity() { return default(bool); }
	public void setCustomValidity(string error) {}
	public NodeList labels {get; private set; }
	public void select() {}
	public int selectionStart {get; set; }
	public int selectionEnd {get; set; }
	public void setSelectionRange(int start, int end) {}

	// HTMLInputElement-19
	public JsString align {get; set; }
	public JsString useMap {get; set; }
}

}
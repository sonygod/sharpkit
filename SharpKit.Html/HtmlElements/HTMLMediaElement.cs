//Generated by a tool of Sebastian Loncar

namespace SharpKit.Html
{

using SharpKit.JavaScript;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields = true, OmitCasts = true)]
public partial class HtmlMediaElement : HtmlElement
{

	// HTMLMediaElement
	public MediaError error {get; private set; }
	public JsString src {get; set; }
	public JsString currentSrc {get; private set; }
	public static short NETWORK_EMPTY = 0;
	public static short NETWORK_IDLE = 1;
	public static short NETWORK_LOADING = 2;
	public static short NETWORK_NO_SOURCE = 3;
	public short networkState {get; private set; }
	public JsString preload {get; set; }
	public TimeRanges buffered {get; private set; }
	public void load() {}
	public JsString canPlayType(string type) { return default(JsString); }
	public static short HAVE_NOTHING = 0;
	public static short HAVE_METADATA = 1;
	public static short HAVE_CURRENT_DATA = 2;
	public static short HAVE_FUTURE_DATA = 3;
	public static short HAVE_ENOUGH_DATA = 4;
	public short readyState {get; private set; }
	public bool seeking {get; private set; }
	public float currentTime {get; set; }
	public float startTime {get; private set; }
	public float duration {get; private set; }
	public bool paused {get; private set; }
	public float defaultPlaybackRate {get; set; }
	public float playbackRate {get; set; }
	public TimeRanges played {get; private set; }
	public TimeRanges seekable {get; private set; }
	public bool ended {get; private set; }
	public bool autoplay {get; set; }
	public bool loop {get; set; }
	public void play() {}
	public void pause() {}
	public bool controls {get; set; }
	public float volume {get; set; }
	public bool muted {get; set; }
}

}
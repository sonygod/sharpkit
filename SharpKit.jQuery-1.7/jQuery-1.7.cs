////@AutoGenerated
////This file was generated by SharpKit at: 2011-11-07 13:57
//using System;
//using SharpKit.Html4;
//using SharpKit.JavaScript;
//namespace SharpKit.jQuery
//{
//    [JsType(JsMode.Prototype, Export=false)]
//    partial class jQuery
//    {
//        /// <summary>
//        /// Add elements to the set of matched elements.
//        /// </summary>
//        public jQuery add(JsString selector){return null;}
//        /// <summary>
//        /// Add elements to the set of matched elements.
//        /// </summary>
//        public jQuery add(JsArray<HtmlElement> elements){return null;}
//        /// <summary>
//        /// Add elements to the set of matched elements.
//        /// </summary>
//        public jQuery add(string html){return null;}
//        /// <summary>
//        /// Add elements to the set of matched elements.
//        /// </summary>
//        public jQuery add(jQuery jQuery_object){return null;}
//        /// <summary>
//        /// Add elements to the set of matched elements.
//        /// </summary>
//        public jQuery add(JsString selector, HtmlElement context){return null;}
//        /// <summary>
//        /// Adds the specified class(es) to each of the set of matched elements.
//        /// </summary>
//        public jQuery addClass(JsString className){return null;}
//        /// <summary>
//        /// Adds the specified class(es) to each of the set of matched elements.
//        /// </summary>
//        public jQuery addClass(JsAction<JsNumber, object> function){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, after each element in the set of matched elements.
//        /// </summary>
//        public jQuery after(JsAction<HtmlDomEventArgs> function){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, after each element in the set of matched elements.
//        /// </summary>
//        public jQuery after(String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, after each element in the set of matched elements.
//        /// </summary>
//        public jQuery after(JsString content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, after each element in the set of matched elements.
//        /// </summary>
//        public jQuery after(HtmlElement content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, after each element in the set of matched elements.
//        /// </summary>
//        public jQuery after(JsArray content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, after each element in the set of matched elements.
//        /// </summary>
//        public jQuery after(jQuery content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Register a handler to be called when Ajax requests complete. This is an Ajax Event.
//        /// </summary>
//        public jQuery ajaxComplete(JsAction<options, originalOptions, jqXHR> handler){return null;}
//        /// <summary>
//        /// Register a handler to be called when Ajax requests complete with an error. This is an Ajax Event.
//        /// </summary>
//        public jQuery ajaxError(JsAction<Event, jqXHR, ajaxSettings, JsError> handler){return null;}
//        /// <summary>
//        /// Attach a function to be executed before an Ajax request is sent. This is an Ajax Event.
//        /// </summary>
//        public jQuery ajaxSend(JsAction<options, originalOptions, jqXHR> handler){return null;}
//        /// <summary>
//        /// Register a handler to be called when the first Ajax request begins. This is an Ajax Event.
//        /// </summary>
//        public jQuery ajaxStart(JsAction handler__){return null;}
//        /// <summary>
//        /// Register a handler to be called when all Ajax requests have completed. This is an Ajax Event.
//        /// </summary>
//        public jQuery ajaxStop(JsAction handler__){return null;}
//        /// <summary>
//        /// Attach a function to be executed whenever an Ajax request completes successfully. This is an Ajax Event.
//        /// </summary>
//        public jQuery ajaxSuccess(JsAction<options, originalOptions, jqXHR> handler){return null;}
//        /// <summary>
//        /// Add the previous set of elements on the stack to the current set.
//        /// </summary>
//        public jQuery andSelf(){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, Map options){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsAction complete){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsString easing){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsNumber duration){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsString easing, JsAction complete){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsNumber duration, JsAction complete){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsString duration, JsString easing, JsAction complete){return null;}
//        /// <summary>
//        /// Perform a custom animation of a set of CSS properties.
//        /// </summary>
//        public jQuery animate(Map properties, JsNumber duration, JsString easing, JsAction complete){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the end of each element in the set of matched elements.
//        /// </summary>
//        public jQuery append(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the end of each element in the set of matched elements.
//        /// </summary>
//        public jQuery append(String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the end of each element in the set of matched elements.
//        /// </summary>
//        public jQuery append(JsString content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the end of each element in the set of matched elements.
//        /// </summary>
//        public jQuery append(HtmlElement content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the end of each element in the set of matched elements.
//        /// </summary>
//        public jQuery append(JsArray content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the end of each element in the set of matched elements.
//        /// </summary>
//        public jQuery append(jQuery content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements to the end of the target.
//        /// </summary>
//        public jQuery appendTo(JsString target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements to the end of the target.
//        /// </summary>
//        public jQuery appendTo(HtmlElement target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements to the end of the target.
//        /// </summary>
//        public jQuery appendTo(jQuery target){return null;}
//        /// <summary>
//        /// Get the value of an attribute for the first element in the set of matched elements.
//        /// </summary>
//        public JsString attr(JsString attributeName){return null;}
//        /// <summary>
//        /// Set one or more attributes for the set of matched elements.
//        /// </summary>
//        public jQuery attr(Map map){return null;}
//        /// <summary>
//        /// Set one or more attributes for the set of matched elements.
//        /// </summary>
//        public jQuery attr(JsString attributeName, JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Set one or more attributes for the set of matched elements.
//        /// </summary>
//        public jQuery attr(JsString attributeName, JsString value){return null;}
//        /// <summary>
//        /// Set one or more attributes for the set of matched elements.
//        /// </summary>
//        public jQuery attr(JsString attributeName, JsNumber value){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, before each element in the set of matched elements.
//        /// </summary>
//        public jQuery before(JsAction function){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, before each element in the set of matched elements.
//        /// </summary>
//        public jQuery before(String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, before each element in the set of matched elements.
//        /// </summary>
//        public jQuery before(JsString content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, before each element in the set of matched elements.
//        /// </summary>
//        public jQuery before(HtmlElement content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, before each element in the set of matched elements.
//        /// </summary>
//        public jQuery before(JsArray content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, before each element in the set of matched elements.
//        /// </summary>
//        public jQuery before(jQuery content, String, Element, Array, jQuery content){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements.
//        /// </summary>
//        public jQuery bind(JsObject events){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements.
//        /// </summary>
//        public jQuery bind(JsString eventType, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements.
//        /// </summary>
//        public jQuery bind(JsString eventType, bool preventBubble){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements.
//        /// </summary>
//        public jQuery bind(JsString eventType, JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements.
//        /// </summary>
//        public jQuery bind(JsString eventType, JsObject eventData, bool preventBubble){return null;}
//        /// <summary>
//        /// Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery blur(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery blur(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "blur" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery blur(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "change" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery change(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "change" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery change(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "change" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery change(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Get the children of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery children(){return null;}
//        /// <summary>
//        /// Get the children of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery children(JsString selector){return null;}
//        /// <summary>
//        /// Remove from the queue all items that have not yet been run.
//        /// </summary>
//        public jQuery clearQueue(){return null;}
//        /// <summary>
//        /// Remove from the queue all items that have not yet been run.
//        /// </summary>
//        public jQuery clearQueue(JsString queueName){return null;}
//        /// <summary>
//        /// Bind an event handler to the "click" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery click(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "click" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery click(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "click" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery click(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Create a deep copy of the set of matched elements.
//        /// </summary>
//        public jQuery clone(){return null;}
//        /// <summary>
//        /// Create a deep copy of the set of matched elements.
//        /// </summary>
//        public jQuery clone(bool withDataAndEvents){return null;}
//        /// <summary>
//        /// Create a deep copy of the set of matched elements.
//        /// </summary>
//        public jQuery clone(bool withDataAndEvents, bool deepWithDataAndEvents){return null;}
//        /// <summary>
//        /// Get the first element that matches the selector, beginning at the current element and progressing up through the DOM tree.
//        /// </summary>
//        public jQuery closest(jQuery jQuery_object){return null;}
//        /// <summary>
//        /// Get the first element that matches the selector, beginning at the current element and progressing up through the DOM tree.
//        /// </summary>
//        public jQuery closest(HtmlElement element){return null;}
//        /// <summary>
//        /// Get the first element that matches the selector, beginning at the current element and progressing up through the DOM tree.
//        /// </summary>
//        public jQuery closest(JsString selector){return null;}
//        /// <summary>
//        /// Gets an array of all the elements and selectors matched against the current element up through the DOM tree.
//        /// </summary>
//        public JsArray closest(JsArray selectors){return null;}
//        /// <summary>
//        /// Get the first element that matches the selector, beginning at the current element and progressing up through the DOM tree.
//        /// </summary>
//        public jQuery closest(JsString selector, HtmlElement context){return null;}
//        /// <summary>
//        /// Gets an array of all the elements and selectors matched against the current element up through the DOM tree.
//        /// </summary>
//        public JsArray closest(JsArray selectors, HtmlElement context){return null;}
//        /// <summary>
//        /// Get the children of each element in the set of matched elements, including text and comment nodes.
//        /// </summary>
//        public jQuery contents(){return null;}
//        /// <summary>
//        /// Get the value of a style property for the first element in the set of matched elements.
//        /// </summary>
//        public JsString css(JsString propertyName){return null;}
//        /// <summary>
//        /// Set one or more CSS properties for the  set of matched elements.
//        /// </summary>
//        public jQuery css(Map map){return null;}
//        /// <summary>
//        /// Set one or more CSS properties for the  set of matched elements.
//        /// </summary>
//        public jQuery css(JsString propertyName, JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Set one or more CSS properties for the  set of matched elements.
//        /// </summary>
//        public jQuery css(JsString propertyName, JsString value){return null;}
//        /// <summary>
//        /// Set one or more CSS properties for the  set of matched elements.
//        /// </summary>
//        public jQuery css(JsString propertyName, JsNumber value){return null;}
//        /// <summary>
//        /// Returns value at named data store for the first element in the jQuery collection, as set by data(name, value).
//        /// </summary>
//        public JsObject data(){return null;}
//        /// <summary>
//        /// Store arbitrary data associated with the matched elements.
//        /// </summary>
//        public jQuery data(JsObject obj){return null;}
//        /// <summary>
//        /// Returns value at named data store for the first element in the jQuery collection, as set by data(name, value).
//        /// </summary>
//        public JsObject data(JsString key){return null;}
//        /// <summary>
//        /// Store arbitrary data associated with the matched elements.
//        /// </summary>
//        public jQuery data(JsString key, JsObject value){return null;}
//        /// <summary>
//        /// Bind an event handler to the "dblclick" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery dblclick(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "dblclick" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery dblclick(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "dblclick" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery dblclick(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Set a timer to delay execution of subsequent items in the queue.
//        /// </summary>
//        public jQuery delay(JsNumber duration){return null;}
//        /// <summary>
//        /// Set a timer to delay execution of subsequent items in the queue.
//        /// </summary>
//        public jQuery delay(JsNumber duration, JsString queueName){return null;}
//        /// <summary>
//        /// Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.
//        /// </summary>
//        public jQuery @delegate(JsString selector, Map events){return null;}
//        /// <summary>
//        /// Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.
//        /// </summary>
//        public jQuery @delegate(JsString selector, JsString eventType, JsAction handler){return null;}
//        /// <summary>
//        /// Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.
//        /// </summary>
//        public jQuery @delegate(JsString selector, JsString eventType, JsObject eventData, JsAction handler){return null;}
//        /// <summary>
//        /// Execute the next function on the queue for the matched elements.
//        /// </summary>
//        public jQuery dequeue(){return null;}
//        /// <summary>
//        /// Execute the next function on the queue for the matched elements.
//        /// </summary>
//        public jQuery dequeue(JsString queueName){return null;}
//        /// <summary>
//        /// Remove the set of matched elements from the DOM.
//        /// </summary>
//        public jQuery detach(){return null;}
//        /// <summary>
//        /// Remove the set of matched elements from the DOM.
//        /// </summary>
//        public jQuery detach(JsString selector){return null;}
//        /// <summary>
//        /// Remove all event handlers previously attached using .live() from the elements.
//        /// </summary>
//        public jQuery die(){return null;}
//        /// <summary>
//        /// Remove an event handler previously attached using .live() from the elements.
//        /// </summary>
//        public jQuery die(Map eventTypes){return null;}
//        /// <summary>
//        /// Remove an event handler previously attached using .live() from the elements.
//        /// </summary>
//        public jQuery die(JsString eventType){return null;}
//        /// <summary>
//        /// Remove an event handler previously attached using .live() from the elements.
//        /// </summary>
//        public jQuery die(JsString eventType, JsString handler){return null;}
//        /// <summary>
//        /// Iterate over a jQuery object, executing a function for each matched element.
//        /// </summary>
//        public jQuery each(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Remove all child nodes of the set of matched elements from the DOM.
//        /// </summary>
//        public jQuery empty(){return null;}
//        /// <summary>
//        /// End the most recent filtering operation in the current chain and return the set of matched elements to its previous state.
//        /// </summary>
//        public jQuery end(){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to the one at the specified index.
//        /// </summary>
//        public jQuery eq(JsNumber _index){return null;}
//        /// <summary>
//        /// Bind an event handler to the "error" JavaScript event.
//        /// </summary>
//        public jQuery error(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "error" JavaScript event.
//        /// </summary>
//        public jQuery error(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsNumber duration){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements by fading them to opaque.
//        /// </summary>
//        public jQuery fadeIn(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsNumber duration){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements by fading them to transparent.
//        /// </summary>
//        public jQuery fadeOut(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsString duration, JsNumber opacity){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsNumber duration, JsNumber opacity){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsString duration, JsNumber opacity, JsAction callback){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsString duration, JsNumber opacity, JsString easing){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsNumber duration, JsNumber opacity, JsAction callback){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsNumber duration, JsNumber opacity, JsString easing){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsString duration, JsNumber opacity, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Adjust the opacity of the matched elements.
//        /// </summary>
//        public jQuery fadeTo(JsNumber duration, JsNumber opacity, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsNumber duration){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements by animating their opacity.
//        /// </summary>
//        public jQuery fadeToggle(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to those that match the selector or pass the function's test.
//        /// </summary>
//        public jQuery filter(JsString selector){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to those that match the selector or pass the function's test.
//        /// </summary>
//        public jQuery filter(JsAction<HtmlDomEventArgs> function){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to those that match the selector or pass the function's test.
//        /// </summary>
//        public jQuery filter(HtmlElement element){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to those that match the selector or pass the function's test.
//        /// </summary>
//        public jQuery filter(JsObject jQuery_object){return null;}
//        /// <summary>
//        /// Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.
//        /// </summary>
//        public jQuery find(JsString selector){return null;}
//        /// <summary>
//        /// Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.
//        /// </summary>
//        public jQuery find(JsObject jQuery_object){return null;}
//        /// <summary>
//        /// Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.
//        /// </summary>
//        public jQuery find(HtmlElement element){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to the first in the set.
//        /// </summary>
//        public jQuery first(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery focus(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery focus(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focus" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery focus(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focusin" event.
//        /// </summary>
//        public jQuery focusin(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focusin" event.
//        /// </summary>
//        public jQuery focusin(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focusout" JavaScript event.
//        /// </summary>
//        public jQuery focusout(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "focusout" JavaScript event.
//        /// </summary>
//        public jQuery focusout(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Retrieve the DOM elements matched by the jQuery object.
//        /// </summary>
//        public object get(){return null;}
//        /// <summary>
//        /// Retrieve the DOM elements matched by the jQuery object.
//        /// </summary>
//        public object get(JsNumber index){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to those that have a descendant that matches the selector or DOM element.
//        /// </summary>
//        public jQuery has(JsString selector){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to those that have a descendant that matches the selector or DOM element.
//        /// </summary>
//        public jQuery has(HtmlElement contained){return null;}
//        /// <summary>
//        /// Determine whether any of the matched elements are assigned the given class.
//        /// </summary>
//        public bool hasClass(JsString className){return false;}
//        /// <summary>
//        /// Get the current computed height for the first element in the set of matched elements.
//        /// </summary>
//        public JsNumber height(){return null;}
//        /// <summary>
//        /// Set the CSS height of every matched element.
//        /// </summary>
//        public jQuery height(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Set the CSS height of every matched element.
//        /// </summary>
//        public jQuery height(JsString value){return null;}
//        /// <summary>
//        /// Set the CSS height of every matched element.
//        /// </summary>
//        public jQuery height(JsNumber value){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsNumber duration){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements.
//        /// </summary>
//        public jQuery hide(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Bind a single handler to the matched elements, to be executed when the mouse pointer enters or leaves the elements.
//        /// </summary>
//        public jQuery hover(JsAction<HtmlDomEventArgs> handlerInOut){return null;}
//        /// <summary>
//        /// Bind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.
//        /// </summary>
//        public jQuery hover(JsAction<HtmlDomEventArgs> handlerIn, JsAction<HtmlDomEventArgs> handlerOut){return null;}
//        /// <summary>
//        /// Get the HTML contents of the first element in the set of matched elements.
//        /// </summary>
//        public JsString html(){return null;}
//        /// <summary>
//        /// Set the HTML contents of each element in the set of matched elements.
//        /// </summary>
//        public jQuery html(JsString htmlString){return null;}
//        /// <summary>
//        /// Set the HTML contents of each element in the set of matched elements.
//        /// </summary>
//        public jQuery html(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Search for a given element from among the matched elements.
//        /// </summary>
//        public JsNumber index(){return null;}
//        /// <summary>
//        /// Search for a given element from among the matched elements.
//        /// </summary>
//        public JsNumber index(JsString selector){return null;}
//        /// <summary>
//        /// Search for a given element from among the matched elements.
//        /// </summary>
//        public JsNumber index(HtmlElement element){return null;}
//        /// <summary>
//        /// Search for a given element from among the matched elements.
//        /// </summary>
//        public JsNumber index(jQuery element){return null;}
//        /// <summary>
//        /// Get the current computed height for the first element in the set of matched elements, including padding but not border.
//        /// </summary>
//        public JsNumber innerHeight(){return null;}
//        /// <summary>
//        /// Get the current computed width for the first element in the set of matched elements, including padding but not border.
//        /// </summary>
//        public JsNumber innerWidth(){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements after the target.
//        /// </summary>
//        public jQuery insertAfter(JsString target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements after the target.
//        /// </summary>
//        public jQuery insertAfter(HtmlElement target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements after the target.
//        /// </summary>
//        public jQuery insertAfter(jQuery target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements before the target.
//        /// </summary>
//        public jQuery insertBefore(JsString target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements before the target.
//        /// </summary>
//        public jQuery insertBefore(HtmlElement target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements before the target.
//        /// </summary>
//        public jQuery insertBefore(jQuery target){return null;}
//        /// <summary>
//        /// Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.
//        /// </summary>
//        public bool @is(JsString selector){return false;}
//        /// <summary>
//        /// Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.
//        /// </summary>
//        public bool @is(JsAction<HtmlDomEventArgs> function){return false;}
//        /// <summary>
//        /// Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.
//        /// </summary>
//        public bool @is(JsObject jQuery_object){return false;}
//        /// <summary>
//        /// Check the current matched set of elements against a selector, element, or jQuery object and return true if at least one of these elements matches the given arguments.
//        /// </summary>
//        public bool @is(HtmlElement element){return false;}
//        /// <summary>
//        /// Bind an event handler to the "keydown" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keydown(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keydown" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keydown(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keydown" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keydown(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keypress" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keypress(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keypress" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keypress(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keypress" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keypress(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keyup" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keyup(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keyup" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keyup(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "keyup" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery keyup(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to the final one in the set.
//        /// </summary>
//        public jQuery last(){return null;}
//        /// <summary>
//        /// Attach an event handler for all elements which match the current selector, now and in the future.
//        /// </summary>
//        public jQuery live(JsObject events_map){return null;}
//        /// <summary>
//        /// Attach an event handler for all elements which match the current selector, now and in the future.
//        /// </summary>
//        public jQuery live(JsString events, JsAction handler){return null;}
//        /// <summary>
//        /// Attach an event handler for all elements which match the current selector, now and in the future.
//        /// </summary>
//        public jQuery live(JsString events, JsObject data, JsAction handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "load" JavaScript event.
//        /// </summary>
//        public jQuery load(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Load data from the server and place the returned HTML into the matched element.
//        /// </summary>
//        public jQuery load(JsString url){return null;}
//        /// <summary>
//        /// Bind an event handler to the "load" JavaScript event.
//        /// </summary>
//        public jQuery load(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Load data from the server and place the returned HTML into the matched element.
//        /// </summary>
//        public jQuery load(JsString url, Map data){return null;}
//        /// <summary>
//        /// Load data from the server and place the returned HTML into the matched element.
//        /// </summary>
//        public jQuery load(JsString url, JsAction<options, originalOptions, jqXHR> complete){return null;}
//        /// <summary>
//        /// Load data from the server and place the returned HTML into the matched element.
//        /// </summary>
//        public jQuery load(JsString url, JsString data){return null;}
//        /// <summary>
//        /// Load data from the server and place the returned HTML into the matched element.
//        /// </summary>
//        public jQuery load(JsString url, Map data, JsAction<options, originalOptions, jqXHR> complete){return null;}
//        /// <summary>
//        /// Load data from the server and place the returned HTML into the matched element.
//        /// </summary>
//        public jQuery load(JsString url, JsString data, JsAction<options, originalOptions, jqXHR> complete){return null;}
//        /// <summary>
//        /// Pass each element in the current matched set through a function, producing a new jQuery object containing the return values.
//        /// </summary>
//        public jQuery map(JsAction<JsNumber, oldPropertyValue> callback){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mousedown" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mousedown(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mousedown" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mousedown(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mousedown" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mousedown(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.
//        /// </summary>
//        public jQuery mouseenter(){return null;}
//        /// <summary>
//        /// Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.
//        /// </summary>
//        public jQuery mouseenter(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.
//        /// </summary>
//        public jQuery mouseenter(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.
//        /// </summary>
//        public jQuery mouseleave(){return null;}
//        /// <summary>
//        /// Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.
//        /// </summary>
//        public jQuery mouseleave(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.
//        /// </summary>
//        public jQuery mouseleave(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mousemove" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mousemove(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mousemove" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mousemove(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mousemove" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mousemove(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseout(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseout(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseout" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseout(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseover" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseover(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseover" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseover(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseover" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseover(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseup" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseup(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseup" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseup(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "mouseup" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery mouseup(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Get the immediately following sibling of each element in the set of matched elements. If a selector is provided, it retrieves the next sibling only if it matches that selector.
//        /// </summary>
//        public jQuery next(){return null;}
//        /// <summary>
//        /// Get the immediately following sibling of each element in the set of matched elements. If a selector is provided, it retrieves the next sibling only if it matches that selector.
//        /// </summary>
//        public jQuery next(JsString selector){return null;}
//        /// <summary>
//        /// Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery nextAll(){return null;}
//        /// <summary>
//        /// Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery nextAll(JsString selector){return null;}
//        /// <summary>
//        /// Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.
//        /// </summary>
//        public jQuery nextUntil(){return null;}
//        /// <summary>
//        /// Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.
//        /// </summary>
//        public jQuery nextUntil(JsString filter){return null;}
//        /// <summary>
//        /// Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.
//        /// </summary>
//        public jQuery nextUntil(HtmlElement element){return null;}
//        /// <summary>
//        /// Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.
//        /// </summary>
//        public jQuery nextUntil(JsString selector, JsString filter){return null;}
//        /// <summary>
//        /// Get all following siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object passed.
//        /// </summary>
//        public jQuery nextUntil(HtmlElement element, JsString filter){return null;}
//        /// <summary>
//        /// Remove elements from the set of matched elements.
//        /// </summary>
//        public jQuery not(JsString selector){return null;}
//        /// <summary>
//        /// Remove elements from the set of matched elements.
//        /// </summary>
//        public jQuery not(JsArray<HtmlElement> elements){return null;}
//        /// <summary>
//        /// Remove elements from the set of matched elements.
//        /// </summary>
//        public jQuery not(JsAction<HtmlDomEventArgs> function){return null;}
//        /// <summary>
//        /// Remove an event handler.
//        /// </summary>
//        public jQuery off(JsString events){return null;}
//        /// <summary>
//        /// Remove an event handler.
//        /// </summary>
//        public jQuery off(Map events_map){return null;}
//        /// <summary>
//        /// Remove an event handler.
//        /// </summary>
//        public jQuery off(Map events_map, JsString selector){return null;}
//        /// <summary>
//        /// Remove an event handler.
//        /// </summary>
//        public jQuery off(JsString events, JsAction handler){return null;}
//        /// <summary>
//        /// Remove an event handler.
//        /// </summary>
//        public jQuery off(JsString events, JsString selector){return null;}
//        /// <summary>
//        /// Remove an event handler.
//        /// </summary>
//        public jQuery off(JsString events, JsString selector, JsAction handler){return null;}
//        /// <summary>
//        /// Get the current coordinates of the first element in the set of matched elements, relative to the document.
//        /// </summary>
//        public TopLeft offset(){return null;}
//        /// <summary>
//        /// Set the current coordinates of every element in the set of matched elements, relative to the document.
//        /// </summary>
//        public jQuery offset(JsObject coordinates){return null;}
//        /// <summary>
//        /// Set the current coordinates of every element in the set of matched elements, relative to the document.
//        /// </summary>
//        public jQuery offset(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Get the closest ancestor element that is positioned.
//        /// </summary>
//        public jQuery offsetParent(){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(Map events_map){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(JsString events, JsAction handler){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(Map events_map, object data){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(Map events_map, JsString selector){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(Map events_map, JsString selector, object data){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(JsString events, object data, JsAction handler){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(JsString events, JsString selector, JsAction handler){return null;}
//        /// <summary>
//        /// Attach an event handler function for one or more events to the selected elements.
//        /// </summary>
//        public jQuery on(JsString events, JsString selector, object data, JsAction handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(Map events_map){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(JsString events, JsAction handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(Map events_map, object data){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(Map events_map, JsString selector){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(JsString events, JsObject data, JsAction handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(Map events_map, JsString selector, object data){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(JsString events, object data, JsAction handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(JsString events, JsString selector, JsAction handler){return null;}
//        /// <summary>
//        /// Attach a handler to an event for the elements. The handler is executed at most once per element.
//        /// </summary>
//        public jQuery one(JsString events, JsString selector, object data, JsAction handler){return null;}
//        /// <summary>
//        /// Get the current computed height for the first element in the set of matched elements, including padding, border, and optionally margin. Returns an integer (without "px") representation of the value or null if called on an empty set of elements.
//        /// </summary>
//        public JsNumber outerHeight(){return null;}
//        /// <summary>
//        /// Get the current computed height for the first element in the set of matched elements, including padding, border, and optionally margin. Returns an integer (without "px") representation of the value or null if called on an empty set of elements.
//        /// </summary>
//        public JsNumber outerHeight(bool includeMargin){return null;}
//        /// <summary>
//        /// Get the current computed width for the first element in the set of matched elements, including padding and border.
//        /// </summary>
//        public JsNumber outerWidth(){return null;}
//        /// <summary>
//        /// Get the current computed width for the first element in the set of matched elements, including padding and border.
//        /// </summary>
//        public JsNumber outerWidth(bool includeMargin){return null;}
//        /// <summary>
//        /// Get the parent of each element in the current set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery parent(){return null;}
//        /// <summary>
//        /// Get the parent of each element in the current set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery parent(JsString selector){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery parents(){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery parents(JsString selector){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery parentsUntil(){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery parentsUntil(JsString filter){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery parentsUntil(HtmlElement element){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery parentsUntil(JsString selector, JsString filter){return null;}
//        /// <summary>
//        /// Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery parentsUntil(HtmlElement element, JsString filter){return null;}
//        /// <summary>
//        /// Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.
//        /// </summary>
//        public JsObject position(){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.
//        /// </summary>
//        public jQuery prepend(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.
//        /// </summary>
//        public jQuery prepend(String, Element, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.
//        /// </summary>
//        public jQuery prepend(JsString content, String, Element, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.
//        /// </summary>
//        public jQuery prepend(HtmlElement content, String, Element, jQuery content){return null;}
//        /// <summary>
//        /// Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.
//        /// </summary>
//        public jQuery prepend(jQuery content, String, Element, jQuery content){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements to the beginning of the target.
//        /// </summary>
//        public jQuery prependTo(JsString target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements to the beginning of the target.
//        /// </summary>
//        public jQuery prependTo(HtmlElement target){return null;}
//        /// <summary>
//        /// Insert every element in the set of matched elements to the beginning of the target.
//        /// </summary>
//        public jQuery prependTo(jQuery target){return null;}
//        /// <summary>
//        /// Get the immediately preceding sibling of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery prev(){return null;}
//        /// <summary>
//        /// Get the immediately preceding sibling of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery prev(JsString selector){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery prevAll(){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery prevAll(JsString selector){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery prevUntil(){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery prevUntil(JsString filter){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery prevUntil(HtmlElement element){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery prevUntil(JsString selector, JsString filter){return null;}
//        /// <summary>
//        /// Get all preceding siblings of each element up to but not including the element matched by the selector, DOM node, or jQuery object.
//        /// </summary>
//        public jQuery prevUntil(HtmlElement element, JsString filter){return null;}
//        /// <summary>
//        /// Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.
//        /// </summary>
//        public Promise promise(){return null;}
//        /// <summary>
//        /// Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.
//        /// </summary>
//        public Promise promise(JsObject target){return null;}
//        /// <summary>
//        /// Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.
//        /// </summary>
//        public Promise promise(JsString type){return null;}
//        /// <summary>
//        /// Return a Promise object to observe when all actions of a certain type bound to the collection, queued or not, have finished.
//        /// </summary>
//        public Promise promise(JsString type, JsObject target){return null;}
//        /// <summary>
//        /// Get the value of a property for the first element in the set of matched elements.
//        /// </summary>
//        public JsString prop(JsString propertyName){return null;}
//        /// <summary>
//        /// Set one or more properties for the set of matched elements.
//        /// </summary>
//        public jQuery prop(Map map){return null;}
//        /// <summary>
//        /// Set one or more properties for the set of matched elements.
//        /// </summary>
//        public jQuery prop(JsString propertyName, JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Set one or more properties for the set of matched elements.
//        /// </summary>
//        public jQuery prop(JsString propertyName, JsString value){return null;}
//        /// <summary>
//        /// Set one or more properties for the set of matched elements.
//        /// </summary>
//        public jQuery prop(JsString propertyName, JsNumber value){return null;}
//        /// <summary>
//        /// Set one or more properties for the set of matched elements.
//        /// </summary>
//        public jQuery prop(JsString propertyName, bool value){return null;}
//        /// <summary>
//        /// Add a collection of DOM elements onto the jQuery stack.
//        /// </summary>
//        public jQuery pushStack(JsArray elements){return null;}
//        /// <summary>
//        /// Add a collection of DOM elements onto the jQuery stack.
//        /// </summary>
//        public jQuery pushStack(JsArray elements, JsString name, JsArray arguments){return null;}
//        /// <summary>
//        /// Show the queue of functions to be executed on the matched elements.
//        /// </summary>
//        public JsArray queue(){return null;}
//        /// <summary>
//        /// Show the queue of functions to be executed on the matched elements.
//        /// </summary>
//        public JsArray queue(JsString queueName){return null;}
//        /// <summary>
//        /// Manipulate the queue of functions to be executed on the matched elements.
//        /// </summary>
//        public jQuery queue(JsArray newQueue){return null;}
//        /// <summary>
//        /// Manipulate the queue of functions to be executed on the matched elements.
//        /// </summary>
//        public jQuery queue(JsAction<HtmlDomEventArgs> callback){return null;}
//        /// <summary>
//        /// Manipulate the queue of functions to be executed on the matched elements.
//        /// </summary>
//        public jQuery queue(JsString queueName, JsArray newQueue){return null;}
//        /// <summary>
//        /// Manipulate the queue of functions to be executed on the matched elements.
//        /// </summary>
//        public jQuery queue(JsString queueName, JsAction<HtmlDomEventArgs> callback){return null;}
//        /// <summary>
//        /// Specify a function to execute when the DOM is fully loaded.
//        /// </summary>
//        public jQuery ready(JsAction handler){return null;}
//        /// <summary>
//        /// Remove the set of matched elements from the DOM.
//        /// </summary>
//        public jQuery remove(){return null;}
//        /// <summary>
//        /// Remove the set of matched elements from the DOM.
//        /// </summary>
//        public jQuery remove(JsString selector){return null;}
//        /// <summary>
//        /// Remove an attribute from each element in the set of matched elements.
//        /// </summary>
//        public jQuery removeAttr(JsString attributeName){return null;}
//        /// <summary>
//        /// Remove a single class, multiple classes, or all classes from each element in the set of matched elements.
//        /// </summary>
//        public jQuery removeClass(){return null;}
//        /// <summary>
//        /// Remove a single class, multiple classes, or all classes from each element in the set of matched elements.
//        /// </summary>
//        public jQuery removeClass(JsString className){return null;}
//        /// <summary>
//        /// Remove a single class, multiple classes, or all classes from each element in the set of matched elements.
//        /// </summary>
//        public jQuery removeClass(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Remove a previously-stored piece of data.
//        /// </summary>
//        public jQuery removeData(){return null;}
//        /// <summary>
//        /// Remove a previously-stored piece of data.
//        /// </summary>
//        public jQuery removeData(JsArray list){return null;}
//        /// <summary>
//        /// Remove a previously-stored piece of data.
//        /// </summary>
//        public jQuery removeData(JsString list){return null;}
//        /// <summary>
//        /// Remove a property for the set of matched elements.
//        /// </summary>
//        public jQuery removeProp(JsString propertyName){return null;}
//        /// <summary>
//        /// Replace each target element with the set of matched elements.
//        /// </summary>
//        public jQuery replaceAll(JsString target){return null;}
//        /// <summary>
//        /// Replace each element in the set of matched elements with the provided new content.
//        /// </summary>
//        public jQuery replaceWith(JsAction function){return null;}
//        /// <summary>
//        /// Replace each element in the set of matched elements with the provided new content.
//        /// </summary>
//        public jQuery replaceWith(JsString newContent){return null;}
//        /// <summary>
//        /// Replace each element in the set of matched elements with the provided new content.
//        /// </summary>
//        public jQuery replaceWith(HtmlElement newContent){return null;}
//        /// <summary>
//        /// Replace each element in the set of matched elements with the provided new content.
//        /// </summary>
//        public jQuery replaceWith(jQuery newContent){return null;}
//        /// <summary>
//        /// Bind an event handler to the "resize" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery resize(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "resize" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery resize(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "resize" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery resize(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery scroll(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery scroll(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery scroll(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Get the current horizontal position of the scroll bar for the first element in the set of matched elements.
//        /// </summary>
//        public JsNumber scrollLeft(){return null;}
//        /// <summary>
//        /// Set the current horizontal position of the scroll bar for each of the set of matched elements.
//        /// </summary>
//        public jQuery scrollLeft(JsNumber value){return null;}
//        /// <summary>
//        /// Get the current vertical position of the scroll bar for the first element in the set of matched elements.
//        /// </summary>
//        public JsNumber scrollTop(){return null;}
//        /// <summary>
//        /// Set the current vertical position of the scroll bar for each of the set of matched elements.
//        /// </summary>
//        public jQuery scrollTop(JsNumber value){return null;}
//        /// <summary>
//        /// Bind an event handler to the "select" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery select(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "select" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery select(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "select" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery select(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Encode a set of form elements as a string for submission.
//        /// </summary>
//        public JsString serialize(){return null;}
//        /// <summary>
//        /// Encode a set of form elements as an array of names and values.
//        /// </summary>
//        public JsArray serializeArray(){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsNumber duration){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements.
//        /// </summary>
//        public jQuery show(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Get the siblings of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery siblings(){return null;}
//        /// <summary>
//        /// Get the siblings of each element in the set of matched elements, optionally filtered by a selector.
//        /// </summary>
//        public jQuery siblings(JsString selector){return null;}
//        /// <summary>
//        /// Return the number of elements in the jQuery object.
//        /// </summary>
//        public JsNumber size(){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to a subset specified by a range of indices.
//        /// </summary>
//        public jQuery slice(JsNumber start){return null;}
//        /// <summary>
//        /// Reduce the set of matched elements to a subset specified by a range of indices.
//        /// </summary>
//        public jQuery slice(JsNumber start, JsNumber end){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsNumber duration){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideDown(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsNumber duration){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideToggle(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsNumber duration){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Hide the matched elements with a sliding motion.
//        /// </summary>
//        public jQuery slideUp(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Stop the currently-running animation on the matched elements.
//        /// </summary>
//        public jQuery stop(){return null;}
//        /// <summary>
//        /// Stop the currently-running animation on the matched elements.
//        /// </summary>
//        public jQuery stop(bool clearQueue){return null;}
//        /// <summary>
//        /// Stop the currently-running animation on the matched elements.
//        /// </summary>
//        public jQuery stop(JsString queue){return null;}
//        /// <summary>
//        /// Stop the currently-running animation on the matched elements.
//        /// </summary>
//        public jQuery stop(bool clearQueue, bool jumpToEnd){return null;}
//        /// <summary>
//        /// Stop the currently-running animation on the matched elements.
//        /// </summary>
//        public jQuery stop(JsString queue, bool clearQueue){return null;}
//        /// <summary>
//        /// Stop the currently-running animation on the matched elements.
//        /// </summary>
//        public jQuery stop(JsString queue, bool clearQueue, bool jumpToEnd){return null;}
//        /// <summary>
//        /// Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery submit(){return null;}
//        /// <summary>
//        /// Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery submit(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.
//        /// </summary>
//        public jQuery submit(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Get the combined text contents of each element in the set of matched elements, including their descendants.
//        /// </summary>
//        public JsString text(){return null;}
//        /// <summary>
//        /// Set the content of each element in the set of matched elements to the specified text.
//        /// </summary>
//        public jQuery text(JsString textString){return null;}
//        /// <summary>
//        /// Set the content of each element in the set of matched elements to the specified text.
//        /// </summary>
//        public jQuery text(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Retrieve all the DOM elements contained in the jQuery set, as an array.
//        /// </summary>
//        public JsArray toArray(){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(bool showOrHide){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsNumber duration){return null;}
//        /// <summary>
//        /// Bind two or more handlers to the matched elements, to be executed on alternate clicks.
//        /// </summary>
//        public jQuery toggle(JsAction<HtmlDomEventArgs> handler, JsAction<HtmlDomEventArgs> handler_){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsString duration, JsString easing){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsNumber duration, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsNumber duration, JsString easing){return null;}
//        /// <summary>
//        /// Bind two or more handlers to the matched elements, to be executed on alternate clicks.
//        /// </summary>
//        public jQuery toggle(JsAction<HtmlDomEventArgs> handler, JsAction<HtmlDomEventArgs> handler_, JsAction<HtmlDomEventArgs> handler__){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsString duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Display or hide the matched elements.
//        /// </summary>
//        public jQuery toggle(JsNumber duration, JsString easing, JsAction callback){return null;}
//        /// <summary>
//        /// Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.
//        /// </summary>
//        public jQuery toggleClass(){return null;}
//        /// <summary>
//        /// Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.
//        /// </summary>
//        public jQuery toggleClass(JsString className){return null;}
//        /// <summary>
//        /// Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.
//        /// </summary>
//        public jQuery toggleClass(bool @switch){return null;}
//        /// <summary>
//        /// Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.
//        /// </summary>
//        public jQuery toggleClass(JsAction<options, originalOptions, jqXHR> function){return null;}
//        /// <summary>
//        /// Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.
//        /// </summary>
//        public jQuery toggleClass(JsString className, bool @switch){return null;}
//        /// <summary>
//        /// Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.
//        /// </summary>
//        public jQuery toggleClass(JsAction<options, originalOptions, jqXHR> function, bool @switch){return null;}
//        /// <summary>
//        /// Execute all handlers and behaviors attached to the matched elements for the given event type.
//        /// </summary>
//        public jQuery trigger(Event @event){return null;}
//        /// <summary>
//        /// Execute all handlers and behaviors attached to the matched elements for the given event type.
//        /// </summary>
//        public jQuery trigger(JsString eventType, JsObject extraParameters){return null;}
//        /// <summary>
//        /// Execute all handlers attached to an element for an event.
//        /// </summary>
//        public JsObject triggerHandler(JsString eventType, JsArray extraParameters){return null;}
//        /// <summary>
//        /// Remove a previously-attached event handler from the elements.
//        /// </summary>
//        public jQuery unbind(){return null;}
//        /// <summary>
//        /// Remove a previously-attached event handler from the elements.
//        /// </summary>
//        public jQuery unbind(JsObject @event){return null;}
//        /// <summary>
//        /// Remove a previously-attached event handler from the elements.
//        /// </summary>
//        public jQuery unbind(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Remove a previously-attached event handler from the elements.
//        /// </summary>
//        public jQuery unbind(JsString eventType){return null;}
//        /// <summary>
//        /// Remove a previously-attached event handler from the elements.
//        /// </summary>
//        public jQuery unbind(JsString eventType, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Remove a previously-attached event handler from the elements.
//        /// </summary>
//        public jQuery unbind(JsString eventType, bool @false){return null;}
//        /// <summary>
//        /// Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.
//        /// </summary>
//        public jQuery undelegate(){return null;}
//        /// <summary>
//        /// Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.
//        /// </summary>
//        public jQuery undelegate(JsString @namespace){return null;}
//        /// <summary>
//        /// Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.
//        /// </summary>
//        public jQuery undelegate(JsString selector, JsString eventType){return null;}
//        /// <summary>
//        /// Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.
//        /// </summary>
//        public jQuery undelegate(JsString selector, Map events){return null;}
//        /// <summary>
//        /// Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.
//        /// </summary>
//        public jQuery undelegate(JsString selector, JsString eventType, JsAction handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "unload" JavaScript event.
//        /// </summary>
//        public jQuery unload(JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Bind an event handler to the "unload" JavaScript event.
//        /// </summary>
//        public jQuery unload(JsObject eventData, JsAction<HtmlDomEventArgs> handler){return null;}
//        /// <summary>
//        /// Remove the parents of the set of matched elements from the DOM, leaving the matched elements in their place.
//        /// </summary>
//        public jQuery unwrap(){return null;}
//        /// <summary>
//        /// Get the current value of the first element in the set of matched elements.
//        /// </summary>
//        public object val(){return null;}
//        /// <summary>
//        /// Set the value of each element in the set of matched elements.
//        /// </summary>
//        public jQuery val(JsString value){return null;}
//        /// <summary>
//        /// Set the value of each element in the set of matched elements.
//        /// </summary>
//        public jQuery val(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Get the current computed width for the first element in the set of matched elements.
//        /// </summary>
//        public JsNumber width(){return null;}
//        /// <summary>
//        /// Set the CSS width of each element in the set of matched elements.
//        /// </summary>
//        public jQuery width(JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Set the CSS width of each element in the set of matched elements.
//        /// </summary>
//        public jQuery width(JsString value){return null;}
//        /// <summary>
//        /// Set the CSS width of each element in the set of matched elements.
//        /// </summary>
//        public jQuery width(JsNumber value){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around each element in the set of matched elements.
//        /// </summary>
//        public jQuery wrap(JsAction<HtmlDomEventArgs> function){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around each element in the set of matched elements.
//        /// </summary>
//        public jQuery wrap(JsString wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around each element in the set of matched elements.
//        /// </summary>
//        public jQuery wrap(HtmlElement wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around each element in the set of matched elements.
//        /// </summary>
//        public jQuery wrap(jQuery wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around all elements in the set of matched elements.
//        /// </summary>
//        public jQuery wrapAll(JsString wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around all elements in the set of matched elements.
//        /// </summary>
//        public jQuery wrapAll(HtmlElement wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around all elements in the set of matched elements.
//        /// </summary>
//        public jQuery wrapAll(jQuery wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around the content of each element in the set of matched elements.
//        /// </summary>
//        public jQuery wrapInner(JsString wrappingElement){return null;}
//        /// <summary>
//        /// Wrap an HTML structure around the content of each element in the set of matched elements.
//        /// </summary>
//        public jQuery wrapInner(JsAction<HtmlDomEventArgs> function){return null;}
//        /// <summary>
//        /// Perform an asynchronous HTTP (Ajax) request.
//        /// </summary>
//        public static jqXHR ajax(Map settings){return null;}
//        /// <summary>
//        /// Perform an asynchronous HTTP (Ajax) request.
//        /// </summary>
//        public static jqXHR ajax(JsString url){return null;}
//        /// <summary>
//        /// Perform an asynchronous HTTP (Ajax) request.
//        /// </summary>
//        public static jqXHR ajax(JsString url, Map settings){return null;}
//        /// <summary>
//        /// Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().
//        /// </summary>
//        public static void ajaxPrefilter(JsAction<options, originalOptions, jqXHR> handler){}
//        /// <summary>
//        /// Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax().
//        /// </summary>
//        public static void ajaxPrefilter(JsString dataTypes, JsAction<options, originalOptions, jqXHR> handler){}
//        /// <summary>
//        /// Set default values for future Ajax requests.
//        /// </summary>
//        public static void ajaxSetup(Options options){}
//        /// <summary>
//        /// A multi-purpose callbacks list object that provides a powerful way to manage callback lists.
//        /// </summary>
//        public static void Callbacks(JsString flags){}
//        /// <summary>
//        /// Check to see if a DOM element is within another DOM element.
//        /// </summary>
//        public static bool contains(HtmlElement container, HtmlElement contained){return false;}
//        /// <summary>
//        /// Returns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.
//        /// </summary>
//        public static JsObject data(HtmlElement element){return null;}
//        /// <summary>
//        /// Returns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.
//        /// </summary>
//        public static JsObject data(HtmlElement element, JsString key){return null;}
//        /// <summary>
//        /// Store arbitrary data associated with the specified element. Returns the value that was set.
//        /// </summary>
//        public static JsObject data(HtmlElement element, JsString key, JsObject value){return null;}
//        /// <summary>
//        /// Execute the next function on the queue for the matched element.
//        /// </summary>
//        public static jQuery dequeue(HtmlElement element){return null;}
//        /// <summary>
//        /// Execute the next function on the queue for the matched element.
//        /// </summary>
//        public static jQuery dequeue(HtmlElement element, JsString queueName){return null;}
//        /// <summary>
//        /// A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function's arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.
//        /// </summary>
//        public static JsObject each(JsObject collection, JsAction<JsNumber, oldPropertyValue> callback){return null;}
//        /// <summary>
//        /// Takes a string and throws an exception containing it.
//        /// </summary>
//        public static void error(JsString message){}
//        /// <summary>
//        /// Merge the contents of two or more objects together into the first object.
//        /// </summary>
//        public static JsObject extend(JsObject target){return null;}
//        /// <summary>
//        /// Merge the contents of two or more objects together into the first object.
//        /// </summary>
//        public static JsObject extend(JsObject target, JsObject object1){return null;}
//        /// <summary>
//        /// Merge the contents of two or more objects together into the first object.
//        /// </summary>
//        public static JsObject extend(JsObject target, JsObject object1, JsObject objectN){return null;}
//        /// <summary>
//        /// Merge the contents of two or more objects together into the first object.
//        /// </summary>
//        public static JsObject extend(bool deep, JsObject target, JsObject object1){return null;}
//        /// <summary>
//        /// Merge the contents of two or more objects together into the first object.
//        /// </summary>
//        public static JsObject extend(bool deep, JsObject target, JsObject object1, JsObject objectN){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, Map data){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, JsString data){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, Map data, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, Map data, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, JsAction<options, originalOptions, jqXHR> success, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, JsString data, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, JsString data, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, Map data, JsAction<options, originalOptions, jqXHR> success, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP GET request.
//        /// </summary>
//        public static jqXHR get(JsString url, JsString data, JsAction<options, originalOptions, jqXHR> success, JsString dataType){return null;}
//        /// <summary>
//        /// Load JSON-encoded data from the server using a GET HTTP request.
//        /// </summary>
//        public static jqXHR getJSON(JsString url){return null;}
//        /// <summary>
//        /// Load JSON-encoded data from the server using a GET HTTP request.
//        /// </summary>
//        public static jqXHR getJSON(JsString url, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load JSON-encoded data from the server using a GET HTTP request.
//        /// </summary>
//        public static jqXHR getJSON(JsString url, Map data){return null;}
//        /// <summary>
//        /// Load JSON-encoded data from the server using a GET HTTP request.
//        /// </summary>
//        public static jqXHR getJSON(JsString url, Map data, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load a JavaScript file from the server using a GET HTTP request, then execute it.
//        /// </summary>
//        public static jqXHR getScript(JsString url){return null;}
//        /// <summary>
//        /// Load a JavaScript file from the server using a GET HTTP request, then execute it.
//        /// </summary>
//        public static jqXHR getScript(JsString url, JsAction<JsNumber, oldPropertyValue> success){return null;}
//        /// <summary>
//        /// Execute some JavaScript code globally.
//        /// </summary>
//        public static void globalEval(JsString code){}
//        /// <summary>
//        /// Finds the elements of an array which satisfy a filter function. The original array is not affected.
//        /// </summary>
//        public static JsArray grep(JsArray array, JsAction<JsNumber, oldPropertyValue> function){return null;}
//        /// <summary>
//        /// Finds the elements of an array which satisfy a filter function. The original array is not affected.
//        /// </summary>
//        public static JsArray grep(JsArray array, JsAction<JsNumber, oldPropertyValue> function, bool invert){return null;}
//        /// <summary>
//        /// Determine whether an element has any jQuery data associated with it.
//        /// </summary>
//        public static bool hasData(HtmlElement element){return false;}
//        /// <summary>
//        /// Holds or releases the execution of jQuery's ready event.
//        /// </summary>
//        public static void holdReady(bool hold){}
//        /// <summary>
//        /// Search for a specified value within an array and return its index (or -1 if not found).
//        /// </summary>
//        public static JsNumber inArray(object value, JsArray array){return null;}
//        /// <summary>
//        /// Search for a specified value within an array and return its index (or -1 if not found).
//        /// </summary>
//        public static JsNumber inArray(object value, JsArray array, JsNumber fromIndex){return null;}
//        /// <summary>
//        /// Determine whether the argument is an array.
//        /// </summary>
//        public static bool isArray(JsObject obj){return false;}
//        /// <summary>
//        /// Check to see if an object is empty (contains no properties).
//        /// </summary>
//        public static bool isEmptyObject(JsObject @object){return false;}
//        /// <summary>
//        /// Determine if the argument passed is a Javascript function object.
//        /// </summary>
//        public static bool isFunction(JsObject obj){return false;}
//        /// <summary>
//        /// Determines whether its argument is a number.
//        /// </summary>
//        public static bool isNumeric(JsObject value){return false;}
//        /// <summary>
//        /// Check to see if an object is a plain object (created using "{}" or "new Object").
//        /// </summary>
//        public static bool isPlainObject(JsObject @object){return false;}
//        /// <summary>
//        /// Determine whether the argument is a window.
//        /// </summary>
//        public static bool isWindow(JsObject obj){return false;}
//        /// <summary>
//        /// Check to see if a DOM node is within an XML document (or is an XML document).
//        /// </summary>
//        public static bool isXMLDoc(HtmlElement node){return false;}
//        /// <summary>
//        /// Convert an array-like object into a true JavaScript array.
//        /// </summary>
//        public static JsArray makeArray(JsObject obj){return null;}
//        /// <summary>
//        /// Translate all items in an array or object to new array of items.
//        /// </summary>
//        public static JsArray map(JsArray arrayOrObject, JsAction<JsNumber, oldPropertyValue> callback){return null;}
//        /// <summary>
//        /// Translate all items in an array or object to new array of items.
//        /// </summary>
//        public static JsArray map(JsObject arrayOrObject, JsAction<JsNumber, oldPropertyValue> callback){return null;}
//        /// <summary>
//        /// Merge the contents of two arrays together into the first array.
//        /// </summary>
//        public static JsArray merge(JsArray first, JsArray second){return null;}
//        /// <summary>
//        /// Relinquish jQuery's control of the $ variable.
//        /// </summary>
//        public static JsObject noConflict(){return null;}
//        /// <summary>
//        /// Relinquish jQuery's control of the $ variable.
//        /// </summary>
//        public static JsObject noConflict(bool removeAll){return null;}
//        /// <summary>
//        /// An empty function.
//        /// </summary>
//        public static JsAction noop(){return null;}
//        /// <summary>
//        /// Return a number representing the current time.
//        /// </summary>
//        public static JsNumber now(){return null;}
//        /// <summary>
//        /// Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.
//        /// </summary>
//        public static JsString param(JsArray obj){return null;}
//        /// <summary>
//        /// Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.
//        /// </summary>
//        public static JsString param(JsObject obj){return null;}
//        /// <summary>
//        /// Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.
//        /// </summary>
//        public static JsString param(JsArray obj, bool traditional){return null;}
//        /// <summary>
//        /// Create a serialized representation of an array or object, suitable for use in a URL query string or Ajax request.
//        /// </summary>
//        public static JsString param(JsObject obj, bool traditional){return null;}
//        /// <summary>
//        /// Takes a well-formed JSON string and returns the resulting JavaScript object.
//        /// </summary>
//        public static JsObject parseJSON(JsString json){return null;}
//        /// <summary>
//        /// Parses a string into an XML document.
//        /// </summary>
//        public static XMLDocument parseXML(JsString data){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, Map data){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, JsString data){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, Map data, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, Map data, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, JsAction<options, originalOptions, jqXHR> success, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, JsString data, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, JsString data, JsAction<options, originalOptions, jqXHR> success){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, Map data, JsAction<options, originalOptions, jqXHR> success, JsString dataType){return null;}
//        /// <summary>
//        /// Load data from the server using a HTTP POST request.
//        /// </summary>
//        public static jqXHR post(JsString url, JsString data, JsAction<options, originalOptions, jqXHR> success, JsString dataType){return null;}
//        /// <summary>
//        /// Takes a function and returns a new one that will always have a particular context.
//        /// </summary>
//        public static JsAction proxy(JsAction function, JsObject context){return null;}
//        /// <summary>
//        /// Takes a function and returns a new one that will always have a particular context.
//        /// </summary>
//        public static JsAction proxy(JsObject context, JsString name){return null;}
//        /// <summary>
//        /// Show the queue of functions to be executed on the matched element.
//        /// </summary>
//        public static JsArray queue(HtmlElement element){return null;}
//        /// <summary>
//        /// Show the queue of functions to be executed on the matched element.
//        /// </summary>
//        public static JsArray queue(HtmlElement element, JsString queueName){return null;}
//        /// <summary>
//        /// Manipulate the queue of functions to be executed on the matched element.
//        /// </summary>
//        public static jQuery queue(HtmlElement element, JsString queueName, JsArray newQueue){return null;}
//        /// <summary>
//        /// Manipulate the queue of functions to be executed on the matched element.
//        /// </summary>
//        public static jQuery queue(HtmlElement element, JsString queueName, JsAction callback__){return null;}
//        /// <summary>
//        /// Remove a previously-stored piece of data.
//        /// </summary>
//        public static jQuery removeData(HtmlElement element){return null;}
//        /// <summary>
//        /// Remove a previously-stored piece of data.
//        /// </summary>
//        public static jQuery removeData(HtmlElement element, JsString name){return null;}
//        /// <summary>
//        /// Creates a new copy of jQuery whose properties and methods can be modified without affecting the original jQuery object.
//        /// </summary>
//        public static jQuery sub(){return null;}
//        /// <summary>
//        /// Remove the whitespace from the beginning and end of a string.
//        /// </summary>
//        public static JsString trim(JsString str){return null;}
//        /// <summary>
//        /// Determine the internal JavaScript [[Class]] of an object.
//        /// </summary>
//        public static JsString type(JsObject obj){return null;}
//        /// <summary>
//        /// Sorts an array of DOM elements, in place, with the duplicates removed. Note that this only works on arrays of DOM elements, not strings or numbers.
//        /// </summary>
//        public static JsArray unique(JsArray array){return null;}
//        /// <summary>
//        /// Provides a way to execute callback functions based on one or more objects, usually Deferred objects that represent asynchronous events.
//        /// </summary>
//        public static Promise when(Deferred deferreds){return null;}
//        /// <summary>
//        /// A string containing the jQuery version number.
//        /// </summary>
//        public JsString jquery {get;set;}
//        /// <summary>
//        /// Hook directly into jQuery to override how particular CSS properties are retrieved or set, normalize CSS property naming, or create custom properties.
//        /// </summary>
//        public JsObject cssHooks {get;set;}
//        /// <summary>
//        /// Contains flags for the useragent, read from navigator.userAgent. We recommend against using this property; please try to use feature detection instead (see jQuery.support). jQuery.browser may be moved to a plugin in a future release of jQuery.
//        /// </summary>
//        public Map browser {get;set;}
//        /// <summary>
//        /// The number of elements in the jQuery object.
//        /// </summary>
//        public JsNumber length {get;set;}
//        /// <summary>
//        /// The DOM node context originally passed to jQuery(); if none was passed then context will likely be the document.
//        /// </summary>
//        public HtmlElement context {get;set;}
//        /// <summary>
//        /// Deprecated in jQuery 1.3 (see jQuery.support). States if the current page, in the user's browser, is being rendered using the W3C CSS Box Model.
//        /// </summary>
//        public bool boxModel {get;set;}
//        /// <summary>
//        /// A collection of properties that represent the presence of different browser features or bugs.
//        /// </summary>
//        public JsObject support {get;set;}
//        public fx fx {get;set;}
//    }
//    [JsType(JsMode.Global, Export=false)]
//    partial class jQueryAndHtmlContext : HtmlContext
//    {
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(HtmlElement element){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsArray elementArray){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsObject jQuery_object){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(){return null;}
//        /// <summary>
//        /// Creates DOM elements on the fly from the provided string of raw HTML.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString html, HtmlDocument ownerDocument){return null;}
//        /// <summary>
//        /// Creates DOM elements on the fly from the provided string of raw HTML.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString html, JsObject props){return null;}
//        /// <summary>
//        /// Binds a function to be executed when the DOM has finished loading.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsAction callback){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString selector, HtmlElement context){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString selector, jQuery context){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString selector){return null;}
//    }
//    [JsType(JsMode.Json, Export=false)]
//    partial class callbacks
//    {
//        /// <summary>
//        /// Determine if the callbacks have already been called at least once.
//        /// </summary>
//        public bool fired(){return false;}
//        /// <summary>
//        /// Determine if the callbacks list has been locked.
//        /// </summary>
//        public bool locked(){return false;}
//        /// <summary>
//        /// Remove all of the callbacks from a list.
//        /// </summary>
//        public void empty(){}
//        /// <summary>
//        /// Lock a callback list in its current state.
//        /// </summary>
//        public void lock(){}
//        /// <summary>
//        /// Call all of the callbacks with the given arguments
//        /// </summary>
//        public void fire(object arguments){}
//        /// <summary>
//        /// Remove a callback or a collection of callbacks from a callback list.
//        /// </summary>
//        public void remove(JsAction callbacks){}
//        /// <summary>
//        /// Add a callback or a collection of callbacks to a callback list.
//        /// </summary>
//        public void add(JsAction callbacks){}
//        /// <summary>
//        /// Disable a callback list from doing anything more.
//        /// </summary>
//        public void disable(){}
//        /// <summary>
//        /// Determine whether a supplied callback is in a list
//        /// </summary>
//        public bool has(JsAction callback){return false;}
//        /// <summary>
//        /// Call all callbacks in a list with the given context and arguments.
//        /// </summary>
//        public void fireWith(object context, object args){}
//        /// <summary>
//        /// Call all callbacks in a list with the given context and arguments.
//        /// </summary>
//        public void fireWith(object context){}
//        /// <summary>
//        /// Call all callbacks in a list with the given context and arguments.
//        /// </summary>
//        public void fireWith(){}
//    }
//    [JsType(JsMode.Json, Export=false)]
//    partial class deferred
//    {
//        /// <summary>
//        /// Add handlers to be called when the Deferred object generates progress notifications.
//        /// </summary>
//        public Deferred progress(JsAction progressCallbacks){return null;}
//        /// <summary>
//        /// Call the progressCallbacks on a Deferred object with the given context and args.
//        /// </summary>
//        public Deferred notifyWith(JsObject context, JsObject args){return null;}
//        /// <summary>
//        /// Call the progressCallbacks on a Deferred object with the given args.
//        /// </summary>
//        public Deferred notify(JsObject args){return null;}
//        /// <summary>
//        /// Determine the current state of a Deferred object.
//        /// </summary>
//        public JsString state(){return null;}
//        /// <summary>
//        /// Utility method to filter and/or chain Deferreds.
//        /// </summary>
//        public Promise pipe(JsAction doneFilter, JsAction failFilter, JsAction progressFilter){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is either resolved or rejected.
//        /// </summary>
//        public Deferred always(JsAction alwaysCallbacks, JsAction alwaysCallbacks){return null;}
//        /// <summary>
//        /// Return a Deferred's Promise object.
//        /// </summary>
//        public Promise promise(JsObject target){return null;}
//        /// <summary>
//        /// Resolve a Deferred object and call any doneCallbacks with the given context and args.
//        /// </summary>
//        public Deferred resolveWith(JsObject context, JsArray args){return null;}
//        /// <summary>
//        /// Reject a Deferred object and call any failCallbacks with the given context and args.
//        /// </summary>
//        public Deferred rejectWith(JsObject context, JsArray args){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is rejected.
//        /// </summary>
//        public Deferred fail(JsAction failCallbacks, JsAction failCallbacks){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is resolved.
//        /// </summary>
//        public Deferred done(JsAction doneCallbacks, JsAction doneCallbacks){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is resolved or rejected.
//        /// </summary>
//        public Deferred then(JsAction doneCallbacks, JsAction failCallbacks, JsAction progressCallbacks){return null;}
//        /// <summary>
//        /// Reject a Deferred object and call any failCallbacks with the given args.
//        /// </summary>
//        public Deferred reject(JsObject args){return null;}
//        /// <summary>
//        /// Determine whether a Deferred object has been rejected.
//        /// </summary>
//        public bool isRejected(){return false;}
//        /// <summary>
//        /// Determine whether a Deferred object has been resolved.
//        /// </summary>
//        public bool isResolved(){return false;}
//        /// <summary>
//        /// Resolve a Deferred object and call any doneCallbacks with the given args.
//        /// </summary>
//        public Deferred resolve(JsObject args){return null;}
//        /// <summary>
//        /// Call the progressCallbacks on a Deferred object with the given context and args.
//        /// </summary>
//        public Deferred notifyWith(JsObject context){return null;}
//        /// <summary>
//        /// Utility method to filter and/or chain Deferreds.
//        /// </summary>
//        public Promise pipe(JsAction doneFilter, JsAction failFilter){return null;}
//        /// <summary>
//        /// Utility method to filter and/or chain Deferreds.
//        /// </summary>
//        public Promise pipe(JsAction doneFilter){return null;}
//        /// <summary>
//        /// Utility method to filter and/or chain Deferreds.
//        /// </summary>
//        public Promise pipe(){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is either resolved or rejected.
//        /// </summary>
//        public Deferred always(JsAction alwaysCallbacks){return null;}
//        /// <summary>
//        /// Return a Deferred's Promise object.
//        /// </summary>
//        public Promise promise(){return null;}
//        /// <summary>
//        /// Resolve a Deferred object and call any doneCallbacks with the given context and args.
//        /// </summary>
//        public Deferred resolveWith(JsObject context){return null;}
//        /// <summary>
//        /// Reject a Deferred object and call any failCallbacks with the given context and args.
//        /// </summary>
//        public Deferred rejectWith(JsObject context){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is rejected.
//        /// </summary>
//        public Deferred fail(JsAction failCallbacks){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is resolved.
//        /// </summary>
//        public Deferred done(JsAction doneCallbacks){return null;}
//        /// <summary>
//        /// Add handlers to be called when the Deferred object is resolved or rejected.
//        /// </summary>
//        public Deferred then(JsAction doneCallbacks, JsAction failCallbacks){return null;}
//    }
//    [JsType(JsMode.Json, Export=false)]
//    partial class Event
//    {
//        /// <summary>
//        /// Returns whether event.stopImmediatePropagation() was ever called on this event object.
//        /// </summary>
//        public bool isImmediatePropagationStopped(){return false;}
//        /// <summary>
//        /// Keeps the rest of the handlers from being executed and prevents the event from bubbling up the DOM tree.
//        /// </summary>
//        public void stopImmediatePropagation(){}
//        /// <summary>
//        /// Returns whether event.stopPropagation() was ever called on this event object.
//        /// </summary>
//        public bool isPropagationStopped(){return false;}
//        /// <summary>
//        /// Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event.
//        /// </summary>
//        public void stopPropagation(){}
//        /// <summary>
//        /// Returns whether event.preventDefault() was ever called on this event object.
//        /// </summary>
//        public bool isDefaultPrevented(){return false;}
//        /// <summary>
//        /// If this method is called, the default action of the event will not be triggered.
//        /// </summary>
//        public void preventDefault(){}
//        /// <summary>
//        /// The namespace specified when the event was triggered.
//        /// </summary>
//        public JsString @namespace {get;set;}
//        /// <summary>
//        /// The difference in milliseconds between the time an event is triggered and January 1, 1970.
//        /// </summary>
//        public JsNumber timeStamp {get;set;}
//        /// <summary>
//        /// The last value returned by an event handler that was triggered by this event, unless the value was undefined.
//        /// </summary>
//        public JsObject result {get;set;}
//        /// <summary>
//        /// For key or button events, this attribute indicates the specific button or key that was pressed.
//        /// </summary>
//        public JsNumber which {get;set;}
//        /// <summary>
//        /// The mouse position relative to the top edge of the document.
//        /// </summary>
//        public JsNumber pageY {get;set;}
//        /// <summary>
//        /// The mouse position relative to the left edge of the document.
//        /// </summary>
//        public JsNumber pageX {get;set;}
//        /// <summary>
//        /// The current DOM element within the event bubbling phase.
//        /// </summary>
//        public HtmlElement currentTarget {get;set;}
//        /// <summary>
//        /// The other DOM element involved in the event, if any.
//        /// </summary>
//        public HtmlElement relatedTarget {get;set;}
//        /// <summary>
//        /// The optional data passed to jQuery.fn.bind when the current executing handler was bound.
//        /// </summary>
//        public object data {get;set;}
//        /// <summary>
//        /// The DOM element that initiated the event.
//        /// </summary>
//        public HtmlElement target {get;set;}
//        /// <summary>
//        /// Describes the nature of the event.
//        /// </summary>
//        public JsString type {get;set;}
//    }
//    [JsType(JsMode.Json, Export=false)]
//    partial class fx
//    {
//        /// <summary>
//        /// The rate (in milliseconds) at which animations fire.
//        /// </summary>
//        public JsNumber interval {get;set;}
//        /// <summary>
//        /// Globally disable all animations.
//        /// </summary>
//        public bool off {get;set;}
//    }
//    partial class jQueryContext
//    {
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(HtmlElement element){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsArray elementArray){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsObject jQuery_object){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(){return null;}
//        /// <summary>
//        /// Creates DOM elements on the fly from the provided string of raw HTML.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString html, HtmlDocument ownerDocument){return null;}
//        /// <summary>
//        /// Creates DOM elements on the fly from the provided string of raw HTML.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString html, JsObject props){return null;}
//        /// <summary>
//        /// Binds a function to be executed when the DOM has finished loading.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsAction callback){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString selector, HtmlElement context){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString selector, jQuery context){return null;}
//        /// <summary>
//        /// Accepts a string containing a CSS selector which is then used to match a set of elements.
//        /// </summary>
//        [JsMethod(Name="$")]
//        public static jQuery J(JsString selector){return null;}
//    }
//}
//////****** DO NOT DELETE THIS FILE, IT IS FOR MERGING!!
//namespace SharpKit.jQuery
//{
//    using System;
//    using SharpKit.HtmlModel;
//    using SharpKit.JavaScriptModel;


//    [JsType(JsMode.Json)]
//    partial class Options
//    {
//    }

//    [JsType(JsMode.Json)]
//    partial class Map : HtmlElementStyle
//    {
//    }

//    [JsType(JsMode.Json)]
//    partial class XMLHttpRequest
//    {
//    }
//    [JsType(JsMode.Json)]
//    partial class TopLeft
//    {
//        public JsNumber top { get; set; }
//        public JsNumber left { get; set; }
//    }

//}

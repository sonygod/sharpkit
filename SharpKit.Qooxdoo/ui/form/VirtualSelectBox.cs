// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.form
{
    /// <summary>
	/// <para>A form virtual widget which allows a single selection. Looks somewhat like
	/// a normal button, but opens a virtual list of items to select when clicking
	/// on it.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.form.VirtualSelectBox", OmitOptionalParameters = true, Export = false)]
    public partial class VirtualSelectBox : qx.ui.form.core.AbstractVirtualBox, qx.data.controller.ISelection
    {
		#region Events

		/// <summary>
		/// Fired on change of the property <see cref="Selection"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> ChangeSelectionEvent;

		#endregion Events

		#region Properties

		[JsProperty(Name = "appearance", NativeField = true)]
		public object Appearance { get; set; }

		/// <summary>
		/// <para>Current selected items.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: false
		/// </remarks>
		[JsProperty(Name = "selection", NativeField = true)]
		public qx.data.Array Selection { get; set; }

		[JsProperty(Name = "width", NativeField = true)]
		public object Width { get; set; }

		#endregion Properties

		#region Methods

		public VirtualSelectBox() { throw new NotImplementedException(); }

		public VirtualSelectBox(object model) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Getter for the selection list.</para>
		/// </summary>
		/// <returns>The current selection.</returns>
		[JsMethod(Name = "getSelection")]
		public qx.data.IListData GetSelection() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property selection
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property selection.</param>
		[JsMethod(Name = "initSelection")]
		public void InitSelection(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the selection to its default value.</para>
		/// </summary>
		[JsMethod(Name = "resetSelection")]
		public void ResetSelection() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Setter for the selection.</para>
		/// </summary>
		/// <param name="value">The data of the selection.</param>
		[JsMethod(Name = "setSelection")]
		public void SetSelection(qx.data.IListData value) { throw new NotImplementedException(); }

		[JsMethod(Name = "syncWidget")]
		public void SyncWidget(object jobs) { throw new NotImplementedException(); }

		#endregion Methods
    }
}
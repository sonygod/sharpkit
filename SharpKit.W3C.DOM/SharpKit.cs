using SharpKit.JavaScript;
#region Attributes


[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.Exception))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(com.getfirebug.Console))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Attr))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.BooleanArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ByteArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.CaretPosition))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.CDATASection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.CharacterData))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Comment))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Document))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DocumentFragment))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DocumentType))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMConfiguration))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMError))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMErrorHandler))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMImplementation))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMImplementationList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMImplementationSource))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMLocator))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DOMStringList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.DoubleArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Element))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Entity))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.EntityReference))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.FloatArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.FormData), Name = "FormData")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.FormData_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.LongArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.LongLongArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.NamedNodeMap))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.NameList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Node))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.NodeList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Notation))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.OctetArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ProcessingInstruction))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ShortArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.Text))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.TypeInfo))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.UnsignedByteArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.UnsignedLongArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.UnsignedLongLongArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.UnsignedShortArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.UserDataHandler))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.XMLHttpRequest), Name = "XMLHttpRequest")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.XMLHttpRequest_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.XMLHttpRequestEventTarget))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.XMLHttpRequestUpload))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.Counter))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSS2Properties))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSCharsetRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSColorComponentValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSComponentValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSFontFaceRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSImportRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSLengthComponentValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSMediaRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSNamespaceRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSPageRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSPercentageComponentValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSPrimitiveValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSStyleDeclaration))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSStyleDeclarationValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSStyleRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSStyleSheet))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSUnknownRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSURLComponentValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSValue))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.CSSValueList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.DocumentCSS))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.DOMImplementationCSS))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.ElementCSSInlineStyle))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.Rect))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.RGBColor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.css.ViewCSS))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.CompositionEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.CustomEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.DocumentEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.Event))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.EventException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.EventListener))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.EventTarget))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.FocusEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.KeyboardEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.MouseEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.MutationEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.MutationNameEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.ProgressEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.TextEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.UIEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.events.WheelEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.eventsource.EventSource), Name = "EventSource")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.eventsource.EventSource_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.Blob))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.File))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.FileError))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.FileException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.FileReader), Name = "FileReader")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.FileReader_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.FileReaderSync), Name = "FileReaderSync")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.file.FileReaderSync_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.Coordinates))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.Geolocation))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.NavigatorGeolocation))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.Position))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.PositionCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.PositionError))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.PositionErrorCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.geolocation.PositionOptions))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.ApplicationCache))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.BarProp))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.BeforeUnloadEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.CanvasGradient))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.CanvasPattern))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.CanvasPixelArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.CanvasRenderingContext2D))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.DataTransfer))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.DOMSettableTokenList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.DOMStringMap))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.DOMTokenList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.DragEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.Function))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HashChangeEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.History))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLAllCollection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLAnchorElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLAppletElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLAreaElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLAudioElement), Name = "Audio")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLAudioElement_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLBaseElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLBaseFontElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLBodyElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLBRElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLButtonElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLCanvasElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLCollection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLCommandElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLDataListElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLDetailsElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLDirectoryElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLDivElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLDListElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLDocument))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLEmbedElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLFieldSetElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLFontElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLFormControlsCollection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLFormElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLFrameElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLFrameSetElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLHeadElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLHeadingElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLHRElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLHtmlElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLIFrameElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLImageElement), Name = "Image")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLImageElement_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLInputElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLKeygenElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLLabelElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLLegendElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLLIElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLLinkElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLMapElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLMarqueeElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLMediaElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLMenuElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLMetaElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLMeterElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLModElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLObjectElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLOListElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLOptGroupElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLOptionElement), Name = "Option")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLOptionElement_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLOptionsCollection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLOutputElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLParagraphElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLParamElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLPreElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLProgressElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLPropertiesCollection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLQuoteElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLScriptElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLSelectElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLSourceElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLSpanElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLStyleElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableCaptionElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableCellElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableColElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableDataCellElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableHeaderCellElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableRowElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTableSectionElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTextAreaElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTimeElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLTitleElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLUListElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLUnknownElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.HTMLVideoElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.ImageData))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.Location))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.MediaError))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.MessageChannel), Name = "MessageChannel")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.MessageChannel_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.MessageEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.MessagePort))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.Navigator))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.PageTransitionEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.PopStateEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.PropertyNodeList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.RadioNodeList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.Screen))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.Selection))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.StyleMedia))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.TextMetrics))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.TimeRanges))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.UndoManager))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.UndoManagerEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.ValidityState))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.html.Window))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBCursor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBCursorRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBCursorSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBDatabase))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBDatabaseError))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBDatabaseException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBDatabaseRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBDatabaseSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBEnvironment))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBEnvironmentSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBIndex))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBIndexRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBIndexSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBKeyRange))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBObjectStore))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBObjectStoreRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBObjectStoreSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBTransaction))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBTransactionRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IDBTransactionSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IndexedDatabase))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.indexeddb.IndexedDatabaseRequest))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.DOMImplementationLS))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSInput))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSLoadEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSOutput))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSParser))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSParserFilter))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSProgressEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSResourceResolver))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSSerializer))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ls.LSSerializerFilter))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ranges.DocumentRange))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ranges.Range))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.ranges.RangeException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.smil.ElementTimeControl))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.smil.TimeEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.stylesheets.LinkStyle))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.stylesheets.MediaList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.stylesheets.StyleSheet))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.GetSVGDocument))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAltGlyphDefElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAltGlyphElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAltGlyphItemElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAngle))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimateColorElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedAngle))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedBoolean))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedEnumeration))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedInteger))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedLength))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedLengthList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedNumber))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedNumberList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedPathData))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedPoints))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedPreserveAspectRatio))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedRect))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedString))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimatedTransformList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimateElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimateMotionElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimateTransformElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGAnimationElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGCircleElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGClipPathElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGColor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGColorProfileElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGColorProfileRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGComponentTransferFunctionElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGCSSRule))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGCursorElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGDefinitionSrcElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGDefsElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGDescElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGDocument))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGElementInstance))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGElementInstanceList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGEllipseElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGExternalResourcesRequired))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEBlendElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEColorMatrixElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEComponentTransferElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFECompositeElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEConvolveMatrixElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEDiffuseLightingElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEDisplacementMapElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEDistantLightElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEFloodElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEFuncAElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEFuncBElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEFuncGElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEFuncRElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEGaussianBlurElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEImageElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEMergeElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEMergeNodeElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEMorphologyElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEOffsetElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFEPointLightElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFESpecularLightingElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFESpotLightElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFETileElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFETurbulenceElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFilterElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFilterPrimitiveStandardAttributes))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFitToViewBox))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFontElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFontFaceElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFontFaceFormatElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFontFaceNameElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFontFaceSrcElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGFontFaceUriElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGForeignObjectElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGGElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGGlyphElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGGlyphRefElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGGradientElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGHKernElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGICCColor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGImageElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGLangSpace))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGLength))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGLengthList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGLinearGradientElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGLineElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGLocatable))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGMarkerElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGMaskElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGMatrix))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGMetadataElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGMissingGlyphElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGMPathElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGNumber))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGNumberList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPaint))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSeg))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegArcAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegArcRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegClosePath))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoCubicAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoCubicRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoCubicSmoothAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoCubicSmoothRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoQuadraticAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoQuadraticRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoQuadraticSmoothAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegCurvetoQuadraticSmoothRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegLinetoAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegLinetoHorizontalAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegLinetoHorizontalRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegLinetoRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegLinetoVerticalAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegLinetoVerticalRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegMovetoAbs))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPathSegMovetoRel))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPatternElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPoint))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPointList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPolygonElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPolylineElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGPreserveAspectRatio))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGRadialGradientElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGRect))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGRectElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGRenderingIntent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGScriptElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGSetElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGStopElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGStringList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGStylable))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGStyleElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGSVGElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGSwitchElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGSymbolElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTests))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTextContentElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTextElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTextPathElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTextPositioningElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTitleElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTransform))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTransformable))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTransformList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTRefElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGTSpanElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGUnitTypes))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGURIReference))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGUseElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGViewElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGViewSpec))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGVKernElement))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGZoomAndPan))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.svg.SVGZoomEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.traversal.DocumentTraversal))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.traversal.ElementTraversal))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.traversal.NodeFilter))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.traversal.NodeIterator))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.traversal.TreeWalker))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.validation.CharacterDataEditVAL))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.validation.DocumentEditVAL))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.validation.ElementEditVAL))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.validation.ExceptionVAL))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.validation.NodeEditVAL))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.views.AbstractView))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.views.ClientRect))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.views.ClientRectList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.views.DocumentView))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.Database))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.DatabaseCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.DatabaseSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLError))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLResultSet))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLResultSetRowList))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLStatementCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLStatementErrorCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLTransaction))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLTransactionCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLTransactionErrorCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLTransactionSync))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLTransactionSyncCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webdatabase.SQLVoidCallback))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLActiveInfo))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLArrayBuffer), Name = "WebGLArrayBuffer")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLArrayBuffer_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLBuffer))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLByteArray), Name = "WebGLByteArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLByteArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLContextAttributes))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLContextLostEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLFloatArray), Name = "WebGLFloatArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLFloatArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLFramebuffer))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLIntArray), Name = "WebGLIntArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLIntArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLObject))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLObjectArray))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLProgram))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLRenderbuffer))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLRenderingContext))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLShader))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLShortArray), Name = "WebGLShortArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLShortArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLTexture))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUniformLocation))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUnsignedByteArray), Name = "WebGLUnsignedByteArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUnsignedByteArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUnsignedIntArray), Name = "WebGLUnsignedIntArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUnsignedIntArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUnsignedShortArray), Name = "WebGLUnsignedShortArray")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webgl.WebGLUnsignedShortArray_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webnotifications.Notification))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webnotifications.NotificationCenter))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.websocket.WebSocket), Name = "WebSocket")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.websocket.WebSocket_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webstorage.Storage))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.webstorage.StorageEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.AbstractWorker))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.ErrorEvent))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.SharedWorker), Name = "SharedWorker")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.SharedWorker_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.Worker), Name = "Worker")]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.Worker_Constructor))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.WorkerGlobalScope))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.WorkerLocation))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.workers.WorkerNavigator))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.xpath.XPathEvaluator))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.xpath.XPathException))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.xpath.XPathExpression))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.xpath.XPathNamespace))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.xpath.XPathNSResolver))]
[assembly: JsType(JsMode.Prototype, PropertiesAsFields = true, TargetType = typeof(org.w3c.dom.xpath.XPathResult))]
#endregion

/// <summary>
/// Latest HTML interfaces, created according to w3c specifications, including HTML5, CSS3, SVG, WebGL, WebDatabase and more.
/// </summary>
class AssemblyDoc
{
}
//Generated by a tool of Sebastian Loncar

namespace org.w3c.dom
{

using SharpKit.JavaScript;
using Window = org.w3c.dom.html.Window;
using StyleSheet = org.w3c.dom.stylesheets.StyleSheet;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields=true, OmitCasts = true)]
public partial class Document : Node
{

	// Document
	public DocumentType doctype {get;private set;}
	public DOMImplementation implementation {get;private set;}
	public Element documentElement {get;private set;}
	public Element createElement(string tagName) { return default(Element); }
	public DocumentFragment createDocumentFragment() { return default(DocumentFragment); }
	public Text createTextNode(string data) { return default(Text); }
	public Comment createComment(string data) { return default(Comment); }
	public CDATASection createCDATASection(string data) { return default(CDATASection); }
	public ProcessingInstruction createProcessingInstruction(string target, string data) { return default(ProcessingInstruction); }
	public Attr createAttribute(string name) { return default(Attr); }
	public EntityReference createEntityReference(string name) { return default(EntityReference); }
	public NodeList getElementsByTagName(string tagname) { return default(NodeList); }
	public Node importNode(Node importedNode, bool deep) { return default(Node); }
	public Element createElementNS(string namespaceURI, string qualifiedName) { return default(Element); }
	public Attr createAttributeNS(string namespaceURI, string qualifiedName) { return default(Attr); }
	public NodeList getElementsByTagNameNS(string namespaceURI, string localName) { return default(NodeList); }
	public Element getElementById(string elementId) { return default(Element); }
	public string inputEncoding {get;private set;}
	public string xmlEncoding {get;private set;}
	public bool xmlStandalone {get;set;}
	public string xmlVersion {get;set;}
	public bool strictErrorChecking {get;set;}
	public string documentURI {get;set;}
	public Node adoptNode(Node source) { return default(Node); }
	public DOMConfiguration domConfig {get;private set;}
	public void normalizeDocument() {}
	public Node renameNode(Node n, string namespaceURI, string qualifiedName) { return default(Node); }

	// Document-39
	public StyleSheet styleSheets {get;private set;}
	public string selectedStyleSheetSet {get;set;}
	public string lastStyleSheetSet {get;private set;}
	public string preferredStyleSheetSet {get;private set;}
	public DOMStringList styleSheetSets {get;private set;}
	public void enableStyleSheetsForSet(string name) {}

	// Document-40
	public Window defaultView {get;private set;}
	public Element elementFromPoint(float x, float y) { return default(Element); }
	public CaretPosition caretPositionFromPoint(float x, float y) { return default(CaretPosition); }

	// NodeSelector
	public Element querySelector(string selectors) { return default(Element); }
	public NodeList querySelectorAll(string selectors) { return default(NodeList); }
}

}
using SharpKit.JavaScript;
//AutoGenerated

namespace org.w3c.dom.ls
{

    using DOMConfiguration = org.w3c.dom.DOMConfiguration;
    using DOMException = org.w3c.dom.DOMException;
    using Document = org.w3c.dom.Document;
    using Node = org.w3c.dom.Node;

    public interface LSParser
    {
        // LSParser
        DOMConfiguration domConfig {get;}
        LSParserFilter filter {get;set;}
        bool async {get;}
        bool busy {get;}
//TODO:
//ORIGINAL LINE: public org.w3c.dom.Document parse(LSInput input) throws org.w3c.dom.DOMException, LSException;
        Document parse(LSInput input);
//TODO:
//ORIGINAL LINE: public org.w3c.dom.Document parseURI(String uri) throws org.w3c.dom.DOMException, LSException;
        Document parseURI(string uri);
//TODO: Interfaces cannot contain fields in .NET:
//        public static final short ACTION_APPEND_AS_CHILDREN = 1;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final short ACTION_REPLACE_CHILDREN = 2;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final short ACTION_INSERT_BEFORE = 3;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final short ACTION_INSERT_AFTER = 4;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final short ACTION_REPLACE = 5;
//TODO:
//ORIGINAL LINE: public org.w3c.dom.Node parseWithContext(LSInput input, org.w3c.dom.Node contextArg, short action) throws org.w3c.dom.DOMException, LSException;
        Node parseWithContext(LSInput input, Node contextArg, short action);
        void abort();
    }

}

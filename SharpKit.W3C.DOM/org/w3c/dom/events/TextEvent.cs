//AutoGenerated

namespace org.w3c.dom.events
{

    using AbstractView = org.w3c.dom.views.AbstractView;

    public interface TextEvent : UIEvent
    {
        // TextEvent
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_UNKNOWN = 0x00;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_KEYBOARD = 0x01;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_PASTE = 0x02;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_DROP = 0x03;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_IME = 0x04;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_OPTION = 0x05;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_HANDWRITING = 0x06;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_VOICE = 0x07;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_MULTIMODAL = 0x08;
//TODO: Interfaces cannot contain fields in .NET:
//        public static final int DOM_INPUT_METHOD_SCRIPT = 0x09;
        string data {get;}
        int inputMode {get;}
        void initTextEvent(string typeArg, bool canBubbleArg, bool cancelableArg, AbstractView viewArg, string dataArg, int inputMode);
    }

}
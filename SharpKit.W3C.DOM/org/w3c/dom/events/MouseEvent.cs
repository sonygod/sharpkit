//Generated by a tool of Sebastian Loncar

namespace org.w3c.dom.events
{

using SharpKit.JavaScript;
using AbstractView = org.w3c.dom.views.AbstractView;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields=true, OmitCasts = true)]
public partial class MouseEvent : UIEvent
{

	// MouseEvent
	public int screenX {get;private set;}
	public int screenY {get;private set;}
	public int clientX {get;private set;}
	public int clientY {get;private set;}
	public bool ctrlKey {get;private set;}
	public bool shiftKey {get;private set;}
	public bool altKey {get;private set;}
	public bool metaKey {get;private set;}
	public short button {get;private set;}
	public short buttons {get;private set;}
	public EventTarget relatedTarget {get;private set;}
	public void initMouseEvent(string typeArg, bool canBubbleArg, bool cancelableArg, AbstractView viewArg, int detailArg, int screenXArg, int screenYArg, int clientXArg, int clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, short buttonArg, short buttonsArg, EventTarget relatedTargetArg) {}
	public bool getModifierState(string keyArg) { return default(bool); }

	// MouseEvent-43
	public int pageX {get;private set;}
	public int pageY {get;private set;}
	public int x {get;private set;}
	public int y {get;private set;}
	public int offsetX {get;private set;}
	public int offsetY {get;private set;}
}

}
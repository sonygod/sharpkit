//Generated by a tool of Sebastian Loncar

namespace org.w3c.dom.events
{

using SharpKit.JavaScript;
using AbstractView = org.w3c.dom.views.AbstractView;

[JsType(JsMode.Prototype, Export = false, PropertiesAsFields=true, OmitCasts = true)]
public partial class MouseEvent : UIEvent
{

	// MouseEvent
	public int screenX {get { return default(int); } }
	public int screenY {get { return default(int); } }
	public int clientX {get { return default(int); } }
	public int clientY {get { return default(int); } }
	public bool ctrlKey {get { return default(bool); } }
	public bool shiftKey {get { return default(bool); } }
	public bool altKey {get { return default(bool); } }
	public bool metaKey {get { return default(bool); } }
	public short button {get { return default(short); } }
	public short buttons {get { return default(short); } }
	public EventTarget relatedTarget {get { return default(EventTarget); } }
	public void initMouseEvent(string typeArg, bool canBubbleArg, bool cancelableArg, AbstractView viewArg, int detailArg, int screenXArg, int screenYArg, int clientXArg, int clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, short buttonArg, short buttonsArg, EventTarget relatedTargetArg) {}
	public bool getModifierState(string keyArg) { return default(bool); }

	// MouseEvent-43
	public int pageX {get { return default(int); } }
	public int pageY {get { return default(int); } }
	public int x {get { return default(int); } }
	public int y {get { return default(int); } }
	public int offsetX {get { return default(int); } }
	public int offsetY {get { return default(int); } }
}

}
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpKit.W3C.DOM</name>
    </assembly>
  <members>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.views.DocumentView" -->
    <member name="P:org.w3c.dom.views.DocumentView.defaultView">
      <summary>
        The default <code>AbstractView</code> for this <code>Document</code>,
        or <code>null</code> if none available.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Element" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Node" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Node.insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Node.replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Node.removeChild(org.w3c.dom.Node)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Node.appendChild(org.w3c.dom.Node)" -->
    <member name="M:org.w3c.dom.Node.hasChildNodes">
      <summary>
        Returns whether this node has any children.
      </summary>
      <returns>
        <code>true</code> if this node has any children,
        <code>false</code> otherwise.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Node.cloneNode(System.Boolean)" -->
    <member name="M:org.w3c.dom.Node.normalize">
      <summary>
        Puts all <code>Text</code> nodes in the full depth of the sub-tree
        underneath this <code>Node</code>, including attribute nodes, into a
        "normal" form where only structure (e.g., elements, comments,
        processing instructions, CDATA sections, and entity references)
        separates <code>Text</code> nodes, i.e., there are neither adjacent
        <code>Text</code> nodes nor empty <code>Text</code> nodes. This can
        be used to ensure that the DOM view of a document is the same as if
        it were saved and re-loaded, and is useful when operations (such as
        XPointer  lookups) that depend on a particular document tree
        structure are to be used.In cases where the document contains
        <code>CDATASections</code>, the normalize operation alone may not be
        sufficient, since XPointers do not differentiate between
        <code>Text</code> nodes and <code>CDATASection</code> nodes.
        @version DOM Level 2
      </summary>
    </member>
    <member name="M:org.w3c.dom.Node.isSupported(System.String,System.String)">
      <summary>
        Tests whether the DOM implementation implements a specific feature and
        that feature is supported by this node.
      </summary>
      <param name="featureThe">
        name of the feature to test. This is the same name
        which can be passed to the method <code>hasFeature</code> on
        <code>DOMImplementation</code>.
      </param>
      <param name="versionThis">
        is the version number of the feature to test. In
        Level 2, version 1, this is the string "2.0". If the version is not
        specified, supporting any version of the feature will cause the
        method to return <code>true</code>.
      </param>
      <returns>
        Returns <code>true</code> if the specified feature is
        supported on this node, <code>false</code> otherwise.
        @since DOM Level 2
      </returns>
    </member>
    <member name="M:org.w3c.dom.Node.hasAttributes">
      <summary>
        Returns whether this node (if it is an element) has any attributes.
      </summary>
      <returns>
        <code>true</code> if this node has any attributes,
        <code>false</code> otherwise.
        @since DOM Level 2
      </returns>
    </member>
    <member name="P:org.w3c.dom.Node.nodeName">
      <summary>
        The name of this node, depending on its type; see the table above.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.nodeValue">
      <summary>
        The value of this node, depending on its type; see the table above.
        When it is defined to be <code>null</code>, setting it has no effect.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        DOMSTRING_SIZE_ERR: Raised when it would return more characters than
        fit in a <code>DOMString</code> variable on the implementation
        platform.
      </exception>
    </member>
    <member name="P:org.w3c.dom.Node.nodeType">
      <summary>
        A code representing the type of the underlying object, as defined above.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.parentNode">
      <summary>
        The parent of this node. All nodes, except <code>Attr</code>,
        <code>Document</code>, <code>DocumentFragment</code>,
        <code>Entity</code>, and <code>Notation</code> may have a parent.
        However, if a node has just been created and not yet added to the
        tree, or if it has been removed from the tree, this is
        <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.childNodes">
      <summary>
        A <code>NodeList</code> that contains all children of this node. If
        there are no children, this is a <code>NodeList</code> containing no
        nodes.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.firstChild">
      <summary>
        The first child of this node. If there is no such node, this returns
        <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.lastChild">
      <summary>
        The last child of this node. If there is no such node, this returns
        <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.previousSibling">
      <summary>
        The node immediately preceding this node. If there is no such node,
        this returns <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.nextSibling">
      <summary>
        The node immediately following this node. If there is no such node,
        this returns <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.attributes">
      <summary>
        A <code>NamedNodeMap</code> containing the attributes of this node (if
        it is an <code>Element</code>) or <code>null</code> otherwise.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Node.ownerDocument">
      <summary>
        The <code>Document</code> object associated with this node. This is
        also the <code>Document</code> object used to create new nodes. When
        this node is a <code>Document</code> or a <code>DocumentType</code>
        which is not used with any <code>Document</code> yet, this is
        <code>null</code>.
        @version DOM Level 2
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.Node.namespaceURI" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.Node.prefix" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.Node.localName" -->
    <member name="M:org.w3c.dom.Element.getAttribute(System.String)">
      <summary>
        Retrieves an attribute value by name.
      </summary>
      <param name="nameThe"> name of the attribute to retrieve. </param>
      <returns>
        The <code>Attr</code> value as a string, or the empty string
        if that attribute does not have a specified or default value.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.setAttribute(System.String,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.removeAttribute(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.getAttributeNode(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.setAttributeNode(org.w3c.dom.Attr)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.removeAttributeNode(org.w3c.dom.Attr)" -->
    <member name="M:org.w3c.dom.Element.getElementsByTagName(System.String)">
      <summary>
        Returns a <code>NodeList</code> of all descendant <code>Elements</code>
        with a given tag name, in the order in which they are encountered in
        a preorder traversal of this <code>Element</code> tree.
      </summary>
      <param name="nameThe">
        name of the tag to match on. The special value "*"
        matches all tags.
      </param>
      <returns>
        A list of matching <code>Element</code> nodes.
      </returns>
    </member>
    <member name="M:org.w3c.dom.Element.getAttributeNS(System.String,System.String)">
      <summary>
        Retrieves an attribute value by local name and namespace URI. HTML-only
        DOM implementations do not need to implement this method.
      </summary>
      <param name="namespaceURIThe"> namespace URI of the attribute to retrieve. </param>
      <param name="localNameThe"> local name of the attribute to retrieve. </param>
      <returns>
        The <code>Attr</code> value as a string, or the empty string
        if that attribute does not have a specified or default value.
        @since DOM Level 2
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.setAttributeNS(System.String,System.String,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.removeAttributeNS(System.String,System.String)" -->
    <member name="M:org.w3c.dom.Element.getAttributeNodeNS(System.String,System.String)">
      <summary>
        Retrieves an <code>Attr</code> node by local name and namespace URI.
        HTML-only DOM implementations do not need to implement this method.
      </summary>
      <param name="namespaceURIThe"> namespace URI of the attribute to retrieve. </param>
      <param name="localNameThe"> local name of the attribute to retrieve. </param>
      <returns>
        The <code>Attr</code> node with the specified attribute local
        name and namespace URI or <code>null</code> if there is no such
        attribute.
        @since DOM Level 2
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.setAttributeNodeNS(org.w3c.dom.Attr)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Element.getElementsByTagNameNS(System.String,System.String)" -->
    <member name="M:org.w3c.dom.Element.hasAttribute(System.String)">
      <summary>
        Returns <code>true</code> when an attribute with a given name is
        specified on this element or has a default value, <code>false</code>
        otherwise.
      </summary>
      <param name="nameThe"> name of the attribute to look for. </param>
      <returns>
        <code>true</code> if an attribute with the given name is
        specified on this element or has a default value, <code>false</code>
        otherwise.
        @since DOM Level 2
      </returns>
    </member>
    <member name="M:org.w3c.dom.Element.hasAttributeNS(System.String,System.String)">
      <summary>
        Returns <code>true</code> when an attribute with a given local name and
        namespace URI is specified on this element or has a default value,
        <code>false</code> otherwise. HTML-only DOM implementations do not
        need to implement this method.
      </summary>
      <param name="namespaceURIThe"> namespace URI of the attribute to look for. </param>
      <param name="localNameThe"> local name of the attribute to look for. </param>
      <returns>
        <code>true</code> if an attribute with the given local name
        and namespace URI is specified or has a default value on this
        element, <code>false</code> otherwise.
        @since DOM Level 2
      </returns>
    </member>
    <member name="P:org.w3c.dom.Element.tagName">
      <summary>
        The name of the element. For example, in:
        <pre>
          &lt;elementExample
          id="demo"&gt; ... &lt;/elementExample&gt; ,
        </pre>
        <code>tagName</code> has
        the value <code>"elementExample"</code>. Note that this is
        case-preserving in XML, as are all of the operations of the DOM. The
        HTML DOM returns the <code>tagName</code> of an HTML element in the
        canonical uppercase form, regardless of the case in the source HTML
        document.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.EventTarget" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.events.EventTarget.addEventListener(System.String,org.w3c.dom.events.EventListener,System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.events.EventTarget.removeEventListener(System.String,org.w3c.dom.events.EventListener,System.Boolean)" -->
    <member name="M:org.w3c.dom.events.EventTarget.dispatchEvent(org.w3c.dom.events.Event)">
      <summary>
        This method allows the dispatch of events into the implementations
        event model. Events dispatched in this manner will have the same
        capturing and bubbling behavior as events dispatched directly by the
        implementation. The target of the event is the
        <code> EventTarget</code> on which <code>dispatchEvent</code> is
        called.
      </summary>
      <param name="evtSpecifies">
        the event type, behavior, and contextual
        information to be used in processing the event.
      </param>
      <returns>
        The return value of <code>dispatchEvent</code> indicates
        whether any of the listeners which handled the event called
        <code>preventDefault</code>. If <code>preventDefault</code> was
        called the value is false, else the value is true.
      </returns>
      <exception cref="T:org.w3c.dom.events.EventException">
        UNSPECIFIED_EVENT_TYPE_ERR: Raised if the <code>Event</code>'s type
        was not specified by initializing the event before
        <code>dispatchEvent</code> was called. Specification of the
        <code>Event</code>'s type as <code>null</code> or an empty string
        will also trigger this exception.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.DocumentEvent" -->
    <member name="M:org.w3c.dom.events.DocumentEvent.createEvent(System.String)">

      <param name="eventTypeThe">
        <code>eventType</code> parameter specifies the
        type of <code>Event</code> interface to be created. If the
        <code>Event</code> interface specified is supported by the
        implementation this method will return a new <code>Event</code> of
        the interface type requested. If the <code>Event</code> is to be
        dispatched via the <code>dispatchEvent</code> method the
        appropriate event init method must be called after creation in
        order to initialize the <code>Event</code>'s values. As an example,
        a user wishing to synthesize some kind of <code>UIEvent</code>
        would call <code>createEvent</code> with the parameter "UIEvents".
        The <code>initUIEvent</code> method could then be called on the
        newly created <code>UIEvent</code> to set the specific type of
        UIEvent to be dispatched and set its context information.The
        <code>createEvent</code> method is used in creating
        <code>Event</code>s when it is either inconvenient or unnecessary
        for the user to create an <code>Event</code> themselves. In cases
        where the implementation provided <code>Event</code> is
        insufficient, users may supply their own <code>Event</code>
        implementations for use with the <code>dispatchEvent</code> method.
      </param>
      <returns>
        The newly created <code>Event</code>
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        NOT_SUPPORTED_ERR: Raised if the implementation does not support the
        type of <code>Event</code> interface requested
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.ViewCSS" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.views.AbstractView" -->
    <member name="P:org.w3c.dom.views.AbstractView.document">
      <summary>
        The source <code>DocumentView</code> of which this is an
        <code>AbstractView</code>.
      </summary>
    </member>
    <member name="M:org.w3c.dom.css.ViewCSS.getComputedStyle(org.w3c.dom.Element,System.String)">
      <summary>
        This method is used to get the computed style as it is defined in .
      </summary>
      <param name="elt">
        The element whose style is to be computed. This parameter
        cannot be null.
      </param>
      <param name="pseudoElt">
        The pseudo-element or <code>null</code> if none.
      </param>
      <returns>
        The computed style. The <code>CSSStyleDeclaration</code> is
        read-only and contains only absolute values.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.DocumentCSS" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.stylesheets.DocumentStyle" -->
    <member name="P:org.w3c.dom.stylesheets.DocumentStyle.styleSheets">
      <summary>
        A list containing all the style sheets explicitly linked into or
        embedded in a document. For HTML documents, this includes external
        style sheets, included via the HTML  LINK element, and inline  STYLE
        elements. In XML, this includes external style sheets, included via
        style sheet processing instructions (see ).
      </summary>
    </member>
    <member name="M:org.w3c.dom.css.DocumentCSS.getOverrideStyle(org.w3c.dom.Element,System.String)">
      <summary>
        This method is used to retrieve the override style declaration for a
        specified element and a specified pseudo-element.
      </summary>
      <param name="elt">
        The element whose style is to be modified. This parameter
        cannot be null.
      </param>
      <param name="pseudoElt">
        The pseudo-element or <code>null</code> if none.
      </param>
      <returns>  The override style declaration.  </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.NodeList" -->
    <member name="M:org.w3c.dom.NodeList.item(System.Int32)">
      <summary>
        Returns the <code>index</code>th item in the collection. If
        <code>index</code> is greater than or equal to the number of nodes in
        the list, this returns <code>null</code>.
      </summary>
      <param name="indexIndex"> into the collection. </param>
      <returns>
        The node at the <code>index</code>th position in the
        <code>NodeList</code>, or <code>null</code> if that is not a valid
        index.
      </returns>
    </member>
    <member name="P:org.w3c.dom.NodeList.length">
      <summary>
        The number of nodes in the list. The range of valid child node indices
        is 0 to <code>length-1</code> inclusive.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.DOMImplementation" -->
    <member name="M:org.w3c.dom.DOMImplementation.hasFeature(System.String,System.String)">
      <summary>
        Test if the DOM implementation implements a specific feature.
      </summary>
      <param name="featureThe">
        name of the feature to test (case-insensitive). The
        values used by DOM features are defined throughout the DOM Level 2
        specifications and listed in the  section. The name must be an XML
        name. To avoid possible conflicts, as a convention, names referring
        to features defined outside the DOM specification should be made
        unique by reversing the name of the Internet domain name of the
        person (or the organization that the person belongs to) who defines
        the feature, component by component, and using this as a prefix.
        For instance, the W3C SVG Working Group defines the feature
        "org.w3c.dom.svg".
      </param>
      <param name="versionThis">
        is the version number of the feature to test. In
        Level 2, the string can be either "2.0" or "1.0". If the version is
        not specified, supporting any version of the feature causes the
        method to return <code>true</code>.
      </param>
      <returns>
        <code>true</code> if the feature is implemented in the
        specified version, <code>false</code> otherwise.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.DOMImplementation.createDocumentType(System.String,System.String,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.DOMImplementation.createDocument(System.String,System.String,org.w3c.dom.DocumentType)" -->
    <member name="T:org.w3c.dom.html.HTMLTableColElement">
      <summary>
        Regroups the <code>COL</code> and <code>COLGROUP</code> elements. See the
        COL element definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLElement">
      <summary>
        All HTML element interfaces derive from this class. Elements that only
        exposethe HTML core attributes are represented by the base
        <code>HTMLElement</code> interface. These elements are as follows:HEAD
        special: SUB, SUP, SPAN, BDOfont: TT, I, B, U, S, STRIKE, BIG, SMALL
        phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBRlist:
        DD, DTNOFRAMES, NOSCRIPTADDRESS, CENTER
        Note. The <code>style</code> attribute for thisinterface is reserved for
        future usage.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLElement.id">
      <summary>
        The element's identifier. See the id attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLElement.title">
      <summary>
        The element's advisory title. See the title attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLElement.lang">
      <summary>
        Language code defined in RFC 1766. See the lang attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLElement.dir">
      <summary>
        Specifies the base direction of directionally neutraltext and the
        directionality of tables. See the dir attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLElement.className">
      <summary>
        The class attribute of the element. This attribute has been renameddue to
        conflicts with the "class" keyword exposed by many languages. See the
        class attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableColElement.align">
      <summary>
        Horizontal alignment of cell data in column. See the align attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableColElement.ch">
      <summary>
        Alignment character for cells in a column. See the char attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableColElement.chOff">
      <summary>
        Offset of alignment character. See the charoff attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableColElement.span">
      <summary>
        Indicates the number of columns in a group or affected by a grouping. See
        the span attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableColElement.vAlign">
      <summary>
        Vertical alignment of cell data in column. See the valign attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableColElement.width">
      <summary>
        Default column width. See the width attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLScriptElement">
      <summary>
        Script statements. See the SCRIPT element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.text">
      <summary>
        The script content of the element.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.htmlFor">
      <summary>
        Reserved for future use.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.event">
      <summary>
        Reserved for future use.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.charset">
      <summary>
        The character encoding of the linked resource. See the charset attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.defer">
      <summary>
        Indicates that the user agent can defer processing of the script.  See
        the defer attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.src">
      <summary>
        URI designating an external script. See the src attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLScriptElement.type">
      <summary>
        The content type of the script language. See the type attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLLIElement">
      <summary>
        List item. See the LI element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLIElement.type">
      <summary>
        List item bullet style. See the type attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLIElement.value">
      <summary>
        Reset sequence number when used in <code>OL</code> See the value
        attribute definition in HTML 4.0. This attribute is deprecated in HTML
        4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLFormElement">
      <summary>
        The <code>FORM</code> element encompasses behavior similar to acollection
        and an element. It provides direct access to the containedinput elements
        as well as the attributes of the form element. See the FORM element
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLFormElement.submit">
      <summary>
        Submits the form. It performs the same action as a  submit button.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLFormElement.reset">
      <summary>
        Restores a form element's default values. It performs  the same action as
        a reset button.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.elements">
      <summary>
        Returns a collection of all control elements in the form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.length">
      <summary>
        The number of form controls in the form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.name">
      <summary>
        Names the form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.acceptCharset">
      <summary>
        List of character sets supported by the server. See the accept-charset
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.action">
      <summary>
        Server-side form handler. See the action attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.enctype">
      <summary>
        The content type of the submitted form, generally
        "application/x-www-form-urlencoded".  See the enctype attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.method">
      <summary>
        HTTP method used to submit form. See the method attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFormElement.target">
      <summary>
        Frame to render the resource in. See the target attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLBaseElement">
      <summary>
        Document base URI. See the BASE element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBaseElement.href">
      <summary>
        The base URI See the href attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBaseElement.target">
      <summary>
        The default target frame. See the target attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLAreaElement">
      <summary>
        Client-side image map area definition. See the AREA element definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.alt">
      <summary>
        Alternate text for user agents not rendering the normal contentof this
        element. See the alt attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.coords">
      <summary>
        Comma-separated list of lengths, defining an active region geometry.See
        also <code>shape</code> for the shape of the region. See the coords
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.href">
      <summary>
        The URI of the linked resource. See the href attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.noHref">
      <summary>
        Specifies that this area is inactive, i.e., has no associated action. See
        the nohref attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.shape">
      <summary>
        The shape of the active area. The coordinates are givenby
        <code>coords</code>. See the shape attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAreaElement.target">
      <summary>
        Frame to render the resource in. See the target attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLAppletElement">
      <summary>
        An embedded Java applet. See the APPLET element definition in HTML 4.0.
        This element is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.align">
      <summary>
        Aligns this object (vertically or horizontally) with respect to its
        surrounding text. See the align attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.alt">
      <summary>
        Alternate text for user agents not rendering the normal contentof this
        element. See the alt attribute definition in HTML 4.0. This attribute is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.archive">
      <summary>
        Comma-separated archive list. See the archive attribute definition in
        HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.code">
      <summary>
        Applet class file.  See the code attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.codeBase">
      <summary>
        Optional base URI for applet. See the codebase attribute definition in
        HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.height">
      <summary>
        Override height. See the height attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.hspace">
      <summary>
        Horizontal space to the left and right of this image, applet, or object.
        See the hspace attribute definition in HTML 4.0. This attribute is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.name">
      <summary>
        The name of the applet. See the name attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.object">
      <summary>
        Serialized applet file. See the object attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.vspace">
      <summary>
        Vertical space above and below this image, applet, or object. See the
        vspace attribute definition in HTML 4.0. This attribute is deprecated in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAppletElement.width">
      <summary>
        Override width. See the width attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.UIEvent" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.Event" -->
    <member name="M:org.w3c.dom.events.Event.stopPropagation">
      <summary>
        The <code>stopPropagation</code> method is used prevent further
        propagation of an event during event flow. If this method is called
        by any <code>EventListener</code> the event will cease propagating
        through the tree. The event will complete dispatch to all listeners
        on the current <code>EventTarget</code> before event flow stops. This
        method may be used during any stage of event flow.
      </summary>
    </member>
    <member name="M:org.w3c.dom.events.Event.preventDefault">
      <summary>
        If an event is cancelable, the <code>preventDefault</code> method is
        used to signify that the event is to be canceled, meaning any default
        action normally taken by the implementation as a result of the event
        will not occur. If, during any stage of event flow, the
        <code>preventDefault</code> method is called the event is canceled.
        Any default action associated with the event will not occur. Calling
        this method for a non-cancelable event has no effect. Once
        <code>preventDefault</code> has been called it will remain in effect
        throughout the remainder of the event's propagation. This method may
        be used during any stage of event flow.
      </summary>
    </member>
    <member name="M:org.w3c.dom.events.Event.initEvent(System.String,System.Boolean,System.Boolean)">
      <summary>
        The <code>initEvent</code> method is used to initialize the value of an
        <code>Event</code> created through the <code>DocumentEvent</code>
        interface. This method may only be called before the
        <code>Event</code> has been dispatched via the
        <code>dispatchEvent</code> method, though it may be called multiple
        times during that phase if necessary. If called multiple times the
        final invocation takes precedence. If called from a subclass of
        <code>Event</code> interface only the values specified in the
        <code>initEvent</code> method are modified, all other attributes are
        left unchanged.
      </summary>
      <param name="eventTypeArgSpecifies">
        the event type. This type may be any
        event type currently defined in this specification or a new event
        type.. The string must be an XML name. Any new event type must not
        begin with any upper, lower, or mixed case version of the string
        "DOM". This prefix is reserved for future DOM event sets. It is
        also strongly recommended that third parties adding their own
        events use their own prefix to avoid confusion and lessen the
        probability of conflicts with other new events.
      </param>
      <param name="canBubbleArgSpecifies"> whether or not the event can bubble. </param>
      <param name="cancelableArgSpecifies">
        whether or not the event's default
        action can be prevented.
      </param>
    </member>
    <member name="P:org.w3c.dom.events.Event.type">
      <summary>
        The name of the event (case-insensitive). The name must be an XML name.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.Event.target">
      <summary>
        Used to indicate the <code>EventTarget</code> to which the event was
        originally dispatched.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.Event.currentTarget">
      <summary>
        Used to indicate the <code>EventTarget</code> whose
        <code>EventListeners</code> are currently being processed. This is
        particularly useful during capturing and bubbling.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.Event.eventPhase">
      <summary>
        Used to indicate which phase of event flow is currently being
        evaluated.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.Event.bubbles">
      <summary>
        Used to indicate whether or not an event is a bubbling event. If the
        event can bubble the value is true, else the value is false.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.Event.cancelable">
      <summary>
        Used to indicate whether or not an event can have its default action
        prevented. If the default action can be prevented the value is true,
        else the value is false.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.Event.timeStamp">
      <summary>
        Used to specify the time (in milliseconds relative to the epoch) at
        which the event was created. Due to the fact that some systems may
        not provide this information the value of <code>timeStamp</code> may
        be not available for all events. When not available, a value of 0
        will be returned. Examples of epoch time are the time of the system
        start or 0:0:0 UTC 1st January 1970.
      </summary>
    </member>
    <member name="M:org.w3c.dom.events.UIEvent.initUIEvent(System.String,System.Boolean,System.Boolean,org.w3c.dom.views.AbstractView,System.Int32)">
      <summary>
        The <code>initUIEvent</code> method is used to initialize the value of
        a <code>UIEvent</code> created through the <code>DocumentEvent</code>
        interface. This method may only be called before the
        <code>UIEvent</code> has been dispatched via the
        <code>dispatchEvent</code> method, though it may be called multiple
        times during that phase if necessary. If called multiple times, the
        final invocation takes precedence.
      </summary>
      <param name="typeArgSpecifies"> the event type. </param>
      <param name="canBubbleArgSpecifies"> whether or not the event can bubble. </param>
      <param name="cancelableArgSpecifies">
        whether or not the event's default
        action can be prevented.
      </param>
      <param name="viewArgSpecifies">
        the <code>Event</code>'s
        <code>AbstractView</code>.
      </param>
      <param name="detailArgSpecifies">
        the <code>Event</code>'s detail.
      </param>
    </member>
    <member name="P:org.w3c.dom.events.UIEvent.view">
      <summary>
        The <code>view</code> attribute identifies the <code>AbstractView</code>
        from which the event was generated.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.UIEvent.detail">
      <summary>
        Specifies some detail information about the <code>Event</code>,
        depending on the type of event.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.DOMException" -->
    <member name="F:org.w3c.dom.DOMException.INDEX_SIZE_ERR">
      <summary>
        If index or size is negative, or greater than the allowed value
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.DOMSTRING_SIZE_ERR">
      <summary>
        If the specified range of text does not fit into a DOMString
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.HIERARCHY_REQUEST_ERR">
      <summary>
        If any node is inserted somewhere it doesn't belong
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.WRONG_DOCUMENT_ERR">
      <summary>
        If a node is used in a different document than the one that created it
        (that doesn't support it)
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.INVALID_CHARACTER_ERR">
      <summary>
        If an invalid or illegal character is specified, such as in a name. See
        production 2 in the XML specification for the definition of a legal
        character, and production 5 for the definition of a legal name
        character.
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.NO_DATA_ALLOWED_ERR">
      <summary>
        If data is specified for a node which does not support data
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.NO_MODIFICATION_ALLOWED_ERR">
      <summary>
        If an attempt is made to modify an object where modifications are not
        allowed
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.NOT_FOUND_ERR">
      <summary>
        If an attempt is made to reference a node in a context where it does
        not exist
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.NOT_SUPPORTED_ERR">
      <summary>
        If the implementation does not support the requested type of object or
        operation.
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.INUSE_ATTRIBUTE_ERR">
      <summary>
        If an attempt is made to add an attribute that is already in use
        elsewhere
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.INVALID_STATE_ERR">
      <summary>
        If an attempt is made to use an object that is not, or is no longer,
        usable.
        @since DOM Level 2
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.SYNTAX_ERR">
      <summary>
        If an invalid or illegal string is specified.
        @since DOM Level 2
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.INVALID_MODIFICATION_ERR">
      <summary>
        If an attempt is made to modify the type of the underlying object.
        @since DOM Level 2
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.NAMESPACE_ERR">
      <summary>
        If an attempt is made to create or change an object in a way which is
        incorrect with regard to namespaces.
        @since DOM Level 2
      </summary>
    </member>
    <member name="F:org.w3c.dom.DOMException.INVALID_ACCESS_ERR">
      <summary>
        If a parameter or an operation is not supported by the underlying
        object.
        @since DOM Level 2
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.DOMImplementationCSS" -->
    <member name="M:org.w3c.dom.css.DOMImplementationCSS.createCSSStyleSheet(System.String,System.String)">
      <summary>
        Creates a new <code>CSSStyleSheet</code>.
      </summary>
      <param name="title"> The advisory title. See also the  section. </param>
      <param name="media">
        The comma-separated list of media associated with the new
        style sheet. See also the  section.
      </param>
      <returns> A new CSS style sheet. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        SYNTAX_ERR: Raised if the specified media string value has a syntax
        error and is unparsable.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSFontFaceRule" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSRule" -->
    <member name="P:org.w3c.dom.css.CSSRule.type">
      <summary>
        The type of the rule, as defined above. The expectation is that
        binding-specific casting methods can be used to cast down from an
        instance of the <code>CSSRule</code> interface to the specific
        derived interface implied by the <code>type</code>.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSSRule.cssText" -->
    <member name="P:org.w3c.dom.css.CSSRule.parentStyleSheet">
      <summary>
        The style sheet that contains this rule.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSRule.parentRule">
      <summary>
        If this rule is contained inside another rule (e.g. a style rule
        inside an @media block), this is the containing rule. If this rule is
        not nested inside any other rules, this returns <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSFontFaceRule.style">
      <summary>
        The declaration-block of this rule.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLFrameSetElement">
      <summary>
        Create a grid of frames. See the FRAMESET element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameSetElement.cols">
      <summary>
        The number of columns of frames in the frameset. See the cols attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameSetElement.rows">
      <summary>
        The number of rows of frames in the frameset. See the rows attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLDirectoryElement">
      <summary>
        Directory list. See the DIR element definition in HTML 4.0. This element is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDirectoryElement.compact">
      <summary>
        Reduce spacing between list items. See the compact attribute definition
        in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSMediaRule" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSMediaRule.insertRule(System.String,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSMediaRule.deleteRule(System.Int32)" -->
    <member name="P:org.w3c.dom.css.CSSMediaRule.media">
      <summary>
        A list of media types for this rule.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSMediaRule.cssRules">
      <summary>
        A list of all CSS rules contained within the media block.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Notation" -->
    <member name="P:org.w3c.dom.Notation.publicId">
      <summary>
        The public identifier of this notation. If the public identifier was
        not specified, this is <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Notation.systemId">
      <summary>
        The system identifier of this notation. If the system identifier was
        not specified, this is <code>null</code>.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLLegendElement">
      <summary>
        Provides a caption for a <code>FIELDSET</code> grouping.  See the LEGEND
        element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLegendElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLegendElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLegendElement.align">
      <summary>
        Text alignment relative to <code>FIELDSET</code>. See the align attribute
        definition in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLLabelElement">
      <summary>
        Form field label text. See the LABEL element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLabelElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLabelElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLabelElement.htmlFor">
      <summary>
        This attribute links this label with another form controlby
        <code>id</code> attribute. See the for attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLFrameElement">
      <summary>
        Create a frame. See the FRAME element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.frameBorder">
      <summary>
        Request frame borders. See the frameborder attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.longDesc">
      <summary>
        URI designating a long description of this image or frame. See the
        longdesc attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.marginHeight">
      <summary>
        Frame margin height, in pixels. See the marginheight attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.marginWidth">
      <summary>
        Frame margin width, in pixels. See the marginwidth attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.name">
      <summary>
        The frame name (object of the <code>target</code> attribute). See the
        name attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.noResize">
      <summary>
        When true, forbid user from resizing frame. See the noresize attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.scrolling">
      <summary>
        Specify whether or not the frame should have scrollbars. See the
        scrolling attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFrameElement.src">
      <summary>
        A URI designating the initial frame contents. See the src attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.MouseEvent" -->
    <member name="M:org.w3c.dom.events.MouseEvent.initMouseEvent(System.String,System.Boolean,System.Boolean,org.w3c.dom.views.AbstractView,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int16,org.w3c.dom.events.EventTarget)">
      <summary>
        The <code>initMouseEvent</code> method is used to initialize the value
        of a <code>MouseEvent</code> created through the
        <code>DocumentEvent</code> interface. This method may only be called
        before the <code>MouseEvent</code> has been dispatched via the
        <code>dispatchEvent</code> method, though it may be called multiple
        times during that phase if necessary. If called multiple times, the
        final invocation takes precedence.
      </summary>
      <param name="typeArgSpecifies"> the event type. </param>
      <param name="canBubbleArgSpecifies"> whether or not the event can bubble. </param>
      <param name="cancelableArgSpecifies">
        whether or not the event's default
        action can be prevented.
      </param>
      <param name="viewArgSpecifies">
        the <code>Event</code>'s
        <code>AbstractView</code>.
      </param>
      <param name="detailArgSpecifies">
        the <code>Event</code>'s mouse click count.
      </param>
      <param name="screenXArgSpecifies">
        the <code>Event</code>'s screen x coordinate
      </param>
      <param name="screenYArgSpecifies">
        the <code>Event</code>'s screen y coordinate
      </param>
      <param name="clientXArgSpecifies">
        the <code>Event</code>'s client x coordinate
      </param>
      <param name="clientYArgSpecifies">
        the <code>Event</code>'s client y coordinate
      </param>
      <param name="ctrlKeyArgSpecifies">
        whether or not control key was depressed
        during the <code>Event</code>.
      </param>
      <param name="altKeyArgSpecifies">
        whether or not alt key was depressed during
        the <code>Event</code>.
      </param>
      <param name="shiftKeyArgSpecifies">
        whether or not shift key was depressed
        during the <code>Event</code>.
      </param>
      <param name="metaKeyArgSpecifies">
        whether or not meta key was depressed
        during the <code>Event</code>.
      </param>
      <param name="buttonArgSpecifies">
        the <code>Event</code>'s mouse button.
      </param>
      <param name="relatedTargetArgSpecifies">
        the <code>Event</code>'s related
        <code>EventTarget</code>.
      </param>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.screenX">
      <summary>
        The horizontal coordinate at which the event occurred relative to the
        origin of the screen coordinate system.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.screenY">
      <summary>
        The vertical coordinate at which the event occurred relative to the
        origin of the screen coordinate system.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.clientX">
      <summary>
        The horizontal coordinate at which the event occurred relative to the
        DOM implementation's client area.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.clientY">
      <summary>
        The vertical coordinate at which the event occurred relative to the DOM
        implementation's client area.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.ctrlKey">
      <summary>
        Used to indicate whether the 'ctrl' key was depressed during the firing
        of the event.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.shiftKey">
      <summary>
        Used to indicate whether the 'shift' key was depressed during the
        firing of the event.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.altKey">
      <summary>
        Used to indicate whether the 'alt' key was depressed during the firing
        of the event. On some platforms this key may map to an alternative
        key name.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.metaKey">
      <summary>
        Used to indicate whether the 'meta' key was depressed during the firing
        of the event. On some platforms this key may map to an alternative
        key name.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.button">
      <summary>
        During mouse events caused by the depression or release of a mouse
        button, <code>button</code> is used to indicate which mouse button
        changed state. The values for <code>button</code> range from zero to
        indicate the left button of the mouse, one to indicate the middle
        button if present, and two to indicate the right button. For mice
        configured for left handed use in which the button actions are
        reversed the values are instead read from right to left.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MouseEvent.relatedTarget">
      <summary>
        Used to identify a secondary <code>EventTarget</code> related to a UI
        event. Currently this attribute is used with the mouseover event to
        indicate the <code>EventTarget</code> which the pointing device
        exited and with the mouseout event to indicate the
        <code>EventTarget</code> which the pointing device entered.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSRuleList" -->
    <member name="M:org.w3c.dom.css.CSSRuleList.item(System.Int32)">
      <summary>
        Used to retrieve a CSS rule by ordinal index. The order in this
        collection represents the order of the rules in the CSS style sheet.
        If index is greater than or equal to the number of rules in the list,
        this returns <code>null</code>.
      </summary>
      <param name="indexIndex"> into the collection </param>
      <returns>
        The style rule at the <code>index</code> position in the
        <code>CSSRuleList</code>, or <code>null</code> if that is not a
        valid index.
      </returns>
    </member>
    <member name="P:org.w3c.dom.css.CSSRuleList.length">
      <summary>
        The number of <code>CSSRules</code> in the list. The range of valid
        child rule indices is <code>0</code> to <code>length-1</code>
        inclusive.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Document" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.createElement(System.String)" -->
    <member name="M:org.w3c.dom.Document.createDocumentFragment">
      <summary>
        Creates an empty <code>DocumentFragment</code> object.
      </summary>
      <returns>
        A new <code>DocumentFragment</code>.
      </returns>
    </member>
    <member name="M:org.w3c.dom.Document.createTextNode(System.String)">
      <summary>
        Creates a <code>Text</code> node given the specified string.
      </summary>
      <param name="dataThe"> data for the node. </param>
      <returns>
        The new <code>Text</code> object.
      </returns>
    </member>
    <member name="M:org.w3c.dom.Document.createComment(System.String)">
      <summary>
        Creates a <code>Comment</code> node given the specified string.
      </summary>
      <param name="dataThe"> data for the node. </param>
      <returns>
        The new <code>Comment</code> object.
      </returns>
    </member>
    <member name="M:org.w3c.dom.Document.createCDATASection(System.String)">
      <summary>
        Creates a <code>CDATASection</code> node whose value is the specified
        string.
      </summary>
      <param name="dataThe">
        data for the <code>CDATASection</code> contents.
      </param>
      <returns>
        The new <code>CDATASection</code> object.
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        NOT_SUPPORTED_ERR: Raised if this document is an HTML document.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.createProcessingInstruction(System.String,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.createAttribute(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.createEntityReference(System.String)" -->
    <member name="M:org.w3c.dom.Document.getElementsByTagName(System.String)">
      <summary>
        Returns a <code>NodeList</code> of all the <code>Elements</code> with a
        given tag name in the order in which they are encountered in a
        preorder traversal of the <code>Document</code> tree.
      </summary>
      <param name="tagnameThe">
        name of the tag to match on. The special value "*"
        matches all tags.
      </param>
      <returns>
        A new <code>NodeList</code> object containing all the matched
        <code>Elements</code>.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.importNode(org.w3c.dom.Node,System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.createElementNS(System.String,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Document.createAttributeNS(System.String,System.String)" -->
    <member name="M:org.w3c.dom.Document.getElementsByTagNameNS(System.String,System.String)">
      <summary>
        Returns a <code>NodeList</code> of all the <code>Elements</code> with a
        given local name and namespace URI in the order in which they are
        encountered in a preorder traversal of the <code>Document</code> tree.
      </summary>
      <param name="namespaceURIThe">
        namespace URI of the elements to match on. The
        special value "*" matches all namespaces.
      </param>
      <param name="localNameThe">
        local name of the elements to match on. The
        special value "*" matches all local names.
      </param>
      <returns>
        A new <code>NodeList</code> object containing all the matched
        <code>Elements</code>.
        @since DOM Level 2
      </returns>
    </member>
    <member name="M:org.w3c.dom.Document.getElementById(System.String)">
      <summary>
        Returns the <code>Element</code> whose <code>ID</code> is given by
        <code>elementId</code>. If no such element exists, returns
        <code>null</code>. Behavior is not defined if more than one element
        has this <code>ID</code>. The DOM implementation must have
        information that says which attributes are of type ID. Attributes
        with the name "ID" are not of type ID unless so defined.
        Implementations that do not know whether attributes are of type ID or
        not are expected to return <code>null</code>.
      </summary>
      <param name="elementIdThe">
        unique <code>id</code> value for an element.
      </param>
      <returns>
        The matching element.
        @since DOM Level 2
      </returns>
    </member>
    <member name="P:org.w3c.dom.Document.doctype">
      <summary>
        The Document Type Declaration (see <code>DocumentType</code>)
        associated with this document. For HTML documents as well as XML
        documents without a document type declaration this returns
        <code>null</code>. The DOM Level 2 does not support editing the
        Document Type Declaration. <code>docType</code> cannot be altered in
        any way, including through the use of methods inherited from the
        <code>Node</code> interface, such as <code>insertNode</code> or
        <code>removeNode</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Document.implementation">
      <summary>
        The <code>DOMImplementation</code> object that handles this document. A
        DOM application may use objects from multiple implementations.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Document.documentElement">
      <summary>
        This is a convenience attribute that allows direct access to the child
        node that is the root element of the document. For HTML documents,
        this is the element with the tagName "HTML".
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLObjectElement">
      <summary>
        Generic embedded object. Note. In principle, allproperties on the object
        element are read-write but in someenvironments some properties may be
        read-only once the underlyingobject is instantiated. See the OBJECT
        element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.code">
      <summary>
        Applet class file. See the <code>code</code> attribute for
        HTMLAppletElement.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.align">
      <summary>
        Aligns this object (vertically or horizontally) with respect to its
        surrounding text. See the align attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.archive">
      <summary>
        Space-separated list of archives. See the archive attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.border">
      <summary>
        Width of border around the object. See the border attribute definition in
        HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.codeBase">
      <summary>
        Base URI for <code>classid</code>, <code>data</code>, and
        <code>archive</code> attributes. See the codebase attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.codeType">
      <summary>
        Content type for data downloaded via <code>classid</code> attribute. See
        the codetype attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.data">
      <summary>
        A URI specifying the location of the object's data.  See the data
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.declare">
      <summary>
        Declare (for future reference), but do not instantiate, thisobject. See
        the declare attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.height">
      <summary>
        Override height. See the height attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.hspace">
      <summary>
        Horizontal space to the left and right of this image, applet, or object.
        See the hspace attribute definition in HTML 4.0. This attribute is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.name">
      <summary>
        Form control or object name when submitted with a form. See the name
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.standby">
      <summary>
        Message to render while loading the object. See the standby attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.type">
      <summary>
        Content type for data downloaded via <code>data</code> attribute. See the
        type attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.useMap">
      <summary>
        Use client-side image map. See the usemap attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.vspace">
      <summary>
        Vertical space above and below this image, applet, or object. See the
        vspace attribute definition in HTML 4.0. This attribute is deprecated in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLObjectElement.width">
      <summary>
        Override width. See the width attribute definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.MutationEvent" -->
    <member name="M:org.w3c.dom.events.MutationEvent.initMutationEvent(System.String,System.Boolean,System.Boolean,org.w3c.dom.Node,System.String,System.String,System.String,System.Int16)">
      <summary>
        The <code>initMutationEvent</code> method is used to initialize the
        value of a <code>MutationEvent</code> created through the
        <code>DocumentEvent</code> interface. This method may only be called
        before the <code>MutationEvent</code> has been dispatched via the
        <code>dispatchEvent</code> method, though it may be called multiple
        times during that phase if necessary. If called multiple times, the
        final invocation takes precedence.
      </summary>
      <param name="typeArgSpecifies"> the event type. </param>
      <param name="canBubbleArgSpecifies"> whether or not the event can bubble. </param>
      <param name="cancelableArgSpecifies">
        whether or not the event's default
        action can be prevented.
      </param>
      <param name="relatedNodeArgSpecifies">
        the <code>Event</code>'s related Node.
      </param>
      <param name="prevValueArgSpecifies">
        the <code>Event</code>'s
        <code>prevValue</code> attribute. This value may be null.
      </param>
      <param name="newValueArgSpecifies">
        the <code>Event</code>'s
        <code>newValue</code> attribute. This value may be null.
      </param>
      <param name="attrNameArgSpecifies">
        the <code>Event</code>'s
        <code>attrName</code> attribute. This value may be null.
      </param>
      <param name="attrChangeArgSpecifies">
        the <code>Event</code>'s
        <code>attrChange</code> attribute
      </param>
    </member>
    <member name="P:org.w3c.dom.events.MutationEvent.relatedNode">
      <summary>
        <code>relatedNode</code> is used to identify a secondary node related
        to a mutation event. For example, if a mutation event is dispatched
        to a node indicating that its parent has changed, the
        <code>relatedNode</code> is the changed parent. If an event is
        instead dispatched to a subtree indicating a node was changed within
        it, the <code>relatedNode</code> is the changed node. In the case of
        the DOMAttrModified event it indicates the <code>Attr</code> node
        which was modified, added, or removed.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MutationEvent.prevValue">
      <summary>
        <code>prevValue</code> indicates the previous value of the
        <code>Attr</code> node in DOMAttrModified events, and of the
        <code>CharacterData</code> node in DOMCharDataModified events.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MutationEvent.newValue">
      <summary>
        <code>newValue</code> indicates the new value of the <code>Attr</code>
        node in DOMAttrModified events, and of the <code>CharacterData</code>
        node in DOMCharDataModified events.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MutationEvent.attrName">
      <summary>
        <code>attrName</code> indicates the name of the changed
        <code>Attr</code> node in a DOMAttrModified event.
      </summary>
    </member>
    <member name="P:org.w3c.dom.events.MutationEvent.attrChange">
      <summary>
        <code>attrChange</code> indicates the type of change which triggered
        the DOMAttrModified event. The values can be <code>MODIFICATION</code>
        , <code>ADDITION</code>, or <code>REMOVAL</code>.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Comment" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.CharacterData" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.CharacterData.substringData(System.Int32,System.Int32)" -->
    <member name="M:org.w3c.dom.CharacterData.appendData(System.String)">
      <summary>
        Append the string to the end of the character data of the node. Upon
        success, <code>data</code> provides access to the concatenation of
        <code>data</code> and the <code>DOMString</code> specified.
      </summary>
      <param name="argThe">
        <code>DOMString</code> to append.
      </param>
      <exception cref="T:org.w3c.dom.DOMException">
        NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.CharacterData.insertData(System.Int32,System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.CharacterData.deleteData(System.Int32,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.CharacterData.replaceData(System.Int32,System.Int32,System.String)" -->
    <member name="P:org.w3c.dom.CharacterData.data">
      <summary>
        The character data of the node that implements this interface. The DOM
        implementation may not put arbitrary limits on the amount of data
        that may be stored in a <code>CharacterData</code> node. However,
        implementation limits may mean that the entirety of a node's data may
        not fit into a single <code>DOMString</code>. In such cases, the user
        may call <code>substringData</code> to retrieve the data in
        appropriately sized pieces.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        DOMSTRING_SIZE_ERR: Raised when it would return more characters than
        fit in a <code>DOMString</code> variable on the implementation
        platform.
      </exception>
    </member>
    <member name="P:org.w3c.dom.CharacterData.length">
      <summary>
        The number of 16-bit units that are available through <code>data</code>
        and the <code>substringData</code> method below. This may have the
        value zero, i.e., <code>CharacterData</code> nodes may be empty.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLTableCellElement">
      <summary>
        The object used to represent the <code>TH</code> and <code>TD</code>
        elements. See the TD element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.cellIndex">
      <summary>
        The index of this cell in the row.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.abbr">
      <summary>
        Abbreviation for header cells. See the abbr attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.align">
      <summary>
        Horizontal alignment of data in cell. See the align attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.axis">
      <summary>
        Names group of related headers. See the axis attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.bgColor">
      <summary>
        Cell background color. See the bgcolor attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.ch">
      <summary>
        Alignment character for cells in a column. See the char attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.chOff">
      <summary>
        Offset of alignment character. See the charoff attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.colSpan">
      <summary>
        Number of columns spanned by cell. See the colspan attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.headers">
      <summary>
        List of <code>id</code> attribute values for header cells. See the
        headers attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.height">
      <summary>
        Cell height. See the height attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.noWrap">
      <summary>
        Suppress word wrapping. See the nowrap attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.rowSpan">
      <summary>
        Number of rows spanned by cell. See the rowspan attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.scope">
      <summary>
        Scope covered by header cells. See the scope attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.vAlign">
      <summary>
        Vertical alignment of data in cell. See the valign attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCellElement.width">
      <summary>
        Cell width. See the width attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLOptionElement">
      <summary>
        A selectable choice. See the OPTION element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.defaultSelected">
      <summary>
        Stores the initial value of the <code>selected</code> attribute.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.text">
      <summary>
        The text contained within the option element.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.index">
      <summary>
        The index of this <code>OPTION</code> in its parent <code>SELECT</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.disabled">
      <summary>
        The control is unavailable in this context. See the disabled attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.label">
      <summary>
        Option label for use in hierarchical menus. See the label attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.selected">
      <summary>
        Means that this option is initially selected. See the selected attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptionElement.value">
      <summary>
        The current form control value. See the value attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLMenuElement">
      <summary>
        Menu list. See the MENU element definition in HTML 4.0. This element is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMenuElement.compact">
      <summary>
        Reduce spacing between list items. See the compact attribute definition
        in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLBRElement">
      <summary>
        Force a line break. See the BR element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBRElement.clear">
      <summary>
        Control flow of text around floats. See the clear attribute definition in
        HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.EventException" -->
    <member name="F:org.w3c.dom.events.EventException.UNSPECIFIED_EVENT_TYPE_ERR">
      <summary>
        If the <code>Event</code>'s type was not specified by initializing the
        event before the method was called. Specification of the Event's type
        as <code>null</code> or an empty string will also trigger this
        exception.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSValueList" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSValue" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSSValue.cssText" -->
    <member name="P:org.w3c.dom.css.CSSValue.cssValueType">
      <summary>
        A code defining the type of the value as defined above.
      </summary>
    </member>
    <member name="M:org.w3c.dom.css.CSSValueList.item(System.Int32)">
      <summary>
        Used to retrieve a <code>CSSValue</code> by ordinal index. The order in
        this collection represents the order of the values in the CSS style
        property. If index is greater than or equal to the number of values
        in the list, this returns <code>null</code>.
      </summary>
      <param name="indexIndex"> into the collection. </param>
      <returns>
        The <code>CSSValue</code> at the <code>index</code> position
        in the <code>CSSValueList</code>, or <code>null</code> if that is
        not a valid index.
      </returns>
    </member>
    <member name="P:org.w3c.dom.css.CSSValueList.length">
      <summary>
        The number of <code>CSSValues</code> in the list. The range of valid
        values of the indices is <code>0</code> to <code>length-1</code>
        inclusive.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.Counter" -->
    <member name="P:org.w3c.dom.css.Counter.identifier">
      <summary>
        This attribute is used for the identifier of the counter.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.Counter.listStyle">
      <summary>
        This attribute is used for the style of the list.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.Counter.separator">
      <summary>
        This attribute is used for the separator of the nested counters.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLTextAreaElement">
      <summary>
        Multi-line text field. See the TEXTAREA element definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTextAreaElement.blur">
      <summary>
        Removes keyboard focus from this element.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTextAreaElement.focus">
      <summary>
        Gives keyboard focus to this element.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTextAreaElement.select">
      <summary>
        Select the contents of the <code>TEXTAREA</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.defaultValue">
      <summary>
        Stores the initial control value (i.e., the initial value of
        <code>value</code>).
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.cols">
      <summary>
        Width of control (in characters). See the cols attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.disabled">
      <summary>
        The control is unavailable in this context. See the disabled attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.name">
      <summary>
        Form control or object name when submitted with a form. See the name
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.readOnly">
      <summary>
        This control is read-only. See the readonly attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.rows">
      <summary>
        Number of text rows. See the rows attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.type">
      <summary>
        The type of this form control.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTextAreaElement.value">
      <summary>
        The current textual content of the multi-line text field. If the entirety
        of the data can not fit into a single wstring, the implementation may
        truncate the data.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLTableElement">
      <summary>
        The create* and delete* methods on the table allow authors to constructand
        modify tables. HTML 4.0 specifies that only one of each of the
        <code>CAPTION</code>, <code>THEAD</code>, and <code>TFOOT</code>elements
        may exist in a table. Therefore, if one exists, and thecreateTHead() or
        createTFoot() method is called, the method returnsthe existing THead or
        TFoot element. See the TABLE element definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.createTHead">
      <summary>
        Create a table header row or return an existing one.
      </summary>
      <returns>
        A new table header element (<code>THEAD</code>).
      </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.deleteTHead">
      <summary>
        Delete the header from the table, if one exists.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.createTFoot">
      <summary>
        Create a table footer row or return an existing one.
      </summary>
      <returns>
        A footer element (<code>TFOOT</code>).
      </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.deleteTFoot">
      <summary>
        Delete the footer from the table, if one exists.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.createCaption">
      <summary>
        Create a new table caption object or return an existing one.
      </summary>
      <returns>
        A <code>CAPTION</code> element.
      </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.deleteCaption">
      <summary>
        Delete the table caption, if one exists.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.insertRow(System.Int32)">
      <summary>
        Insert a new empty row in the table.Note. A table row cannot be empty
        according to HTML 4.0 Recommendation.
      </summary>
      <param name="index"> The row number where to insert a new row. </param>
      <returns> The newly created row. </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableElement.deleteRow(System.Int32)">
      <summary>
        Delete a table row.
      </summary>
      <param name="index"> The index of the row to be deleted. </param>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.caption">
      <summary>
        Returns the table's <code>CAPTION</code>, or void if none exists.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.tHead">
      <summary>
        Returns the table's <code>THEAD</code>, or <code>null</code> if none
        exists.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.tFoot">
      <summary>
        Returns the table's <code>TFOOT</code>, or <code>null</code> if none
        exists.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.rows">
      <summary>
        Returns a collection of all the rows in the table, including all in
        <code>THEAD</code>, <code>TFOOT</code>, all <code>TBODY</code> elements.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.tBodies">
      <summary>
        Returns a collection of the defined table bodies.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.align">
      <summary>
        Specifies the table's position with respect to the rest of the document.
        See the align attribute definition in HTML 4.0. This attribute is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.bgColor">
      <summary>
        Cell background color. See the bgcolor attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.border">
      <summary>
        The width of the border around the table. See the border attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.cellPadding">
      <summary>
        Specifies the horizontal and vertical space between cell content andcell
        borders. See the cellpadding attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.cellSpacing">
      <summary>
        Specifies the horizontal and vertical separation between cells. See the
        cellspacing attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.frame">
      <summary>
        Specifies which external table borders to render. See the frame attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.rules">
      <summary>
        Specifies which internal table borders to render. See the rules attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.summary">
      <summary>
        Supplementary description about the purpose or structureof a table. See
        the summary attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableElement.width">
      <summary>
        Specifies the desired table width. See the width attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLHeadingElement">
      <summary>
        For the <code>H1</code> to <code>H6</code> elements. See the H1 element
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHeadingElement.align">
      <summary>
        Horizontal text alignment. See the align attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSUnknownRule" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSCharsetRule" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSSCharsetRule.encoding" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.ProcessingInstruction" -->
    <member name="P:org.w3c.dom.ProcessingInstruction.target">
      <summary>
        The target of this processing instruction. XML defines this as being
        the first token following the markup that begins the processing
        instruction.
      </summary>
    </member>
    <member name="P:org.w3c.dom.ProcessingInstruction.data">
      <summary>
        The content of this processing instruction. This is from the first non
        white space character after the target to the character immediately
        preceding the <code>?&gt;</code>.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
      </exception>
    </member>
    <member name="T:org.w3c.dom.html.HTMLStyleElement">
      <summary>
        Style information. A more detailed style sheet object model is planned to be
        defined in a separate document. See the STYLE element definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLStyleElement.disabled">
      <summary>
        Enables/disables the style sheet.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLStyleElement.media">
      <summary>
        Designed for use with one or more target media. See the media attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLStyleElement.type">
      <summary>
        The style sheet language (Internet media type). See the type attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLQuoteElement">
      <summary>
        For the <code>Q</code> and <code>BLOCKQUOTE</code> elements. See the Q
        element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLQuoteElement.cite">
      <summary>
        A URI designating a document that designates a source document or
        message. See the cite attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLParagraphElement">
      <summary>
        Paragraphs. See the P element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLParagraphElement.align">
      <summary>
        Horizontal text alignment. See the align attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLModElement">
      <summary>
        Notice of modification to part of a document. See the  INS  and DEL
        element definitions in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLModElement.cite">
      <summary>
        A URI designating a document that describes the reason forthe change. See
        the cite attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLModElement.dateTime">
      <summary>
        The date and time of the change. See the datetime attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLDListElement">
      <summary>
        Definition list. See the DL element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDListElement.compact">
      <summary>
        Reduce spacing between list items. See the compact attribute definition
        in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLButtonElement">
      <summary>
        Push button. See the BUTTON element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.disabled">
      <summary>
        The control is unavailable in this context. See the disabled attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.name">
      <summary>
        Form control or object name when submitted with a form. See the name
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.type">
      <summary>
        The type of button. See the type attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLButtonElement.value">
      <summary>
        The current form control value. See the value attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Entity" -->
    <member name="P:org.w3c.dom.Entity.publicId">
      <summary>
        The public identifier associated with the entity, if specified. If the
        public identifier was not specified, this is <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Entity.systemId">
      <summary>
        The system identifier associated with the entity, if specified. If the
        system identifier was not specified, this is <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.Entity.notationName">
      <summary>
        For unparsed entities, the name of the notation for the entity. For
        parsed entities, this is <code>null</code>.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.Rect" -->
    <member name="P:org.w3c.dom.css.Rect.top">
      <summary>
        This attribute is used for the top of the rect.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.Rect.right">
      <summary>
        This attribute is used for the right of the rect.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.Rect.bottom">
      <summary>
        This attribute is used for the bottom of the rect.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.Rect.left">
      <summary>
        This attribute is used for the left of the rect.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSImportRule" -->
    <member name="P:org.w3c.dom.css.CSSImportRule.href">
      <summary>
        The location of the style sheet to be imported. The attribute will not
        contain the <code>"url(...)"</code> specifier around the URI.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSImportRule.media">
      <summary>
        A list of media types for which this style sheet may be used.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSImportRule.styleSheet">
      <summary>
        The style sheet referred to by this rule, if it has been loaded. The
        value of this attribute is <code>null</code> if the style sheet has
        not yet been loaded or if it will not be loaded (e.g. if the style
        sheet is for a media type not supported by the user agent).
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLTableRowElement">
      <summary>
        A row in a table. See the TR element definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableRowElement.insertCell(System.Int32)">
      <summary>
        Insert an empty <code>TD</code> cell into this row.
      </summary>
      <param name="index"> The place to insert the cell. </param>
      <returns> The newly created cell. </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableRowElement.deleteCell(System.Int32)">
      <summary>
        Delete a cell from the current row.
      </summary>
      <param name="index"> The index of the cell to delete. </param>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.rowIndex">
      <summary>
        The index of this row, relative to the entire table.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.sectionRowIndex">
      <summary>
        The index of this row, relative to the current section(<code>THEAD</code>
        , <code>TFOOT</code>, or <code>TBODY</code>).
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.cells">
      <summary>
        The collection of cells in this row.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.align">
      <summary>
        Horizontal alignment of data within cells of this row. See the align
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.bgColor">
      <summary>
        Background color for rows. See the bgcolor attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.ch">
      <summary>
        Alignment character for cells in a column. See the char attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.chOff">
      <summary>
        Offset of alignment character. See the charoff attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableRowElement.vAlign">
      <summary>
        Vertical alignment of data within cells of this row. See the valign
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLMetaElement">
      <summary>
        This contains generic meta-information about the document. See the META
        element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMetaElement.content">
      <summary>
        Associated information. See the content attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMetaElement.httpEquiv">
      <summary>
        HTTP response header name. See the http-equiv attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMetaElement.name">
      <summary>
        Meta information name. See the name attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMetaElement.scheme">
      <summary>
        Select form of content. See the scheme attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLFieldSetElement">
      <summary>
        Organizes form controls into logical groups. See the  FIELDSET  element
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFieldSetElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLBaseFontElement">
      <summary>
        Base font. See the BASEFONT element definition in HTML 4.0. This element is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBaseFontElement.color">
      <summary>
        Font color. See the color attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBaseFontElement.face">
      <summary>
        Font face identifier. See the face attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBaseFontElement.size">
      <summary>
        Font size. See the size attribute definition in HTML 4.0. This attribute
        is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.events.EventListener" -->
    <member name="M:org.w3c.dom.events.EventListener.handleEvent(org.w3c.dom.events.Event)">
      <summary>
        This method is called whenever an event occurs of the type for which
        the <code> EventListener</code> interface was registered.
      </summary>
      <param name="evt">
        The <code>Event</code> contains contextual information
        about the event. It also contains the <code>stopPropagation</code>
        and <code>preventDefault</code> methods which are used in
        determining the event's flow and default action.
      </param>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSStyleSheet" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.stylesheets.StyleSheet" -->
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.type">
      <summary>
        This specifies the style sheet language for this style sheet. The
        style sheet language is specified as a content type (e.g.
        "text/css"). The content type is often specified in the
        <code>ownerNode</code>. Also see the type attribute definition for
        the <code>LINK</code> element in HTML 4.0, and the type
        pseudo-attribute for the XML style sheet processing instruction.
      </summary>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.disabled">
      <summary>
        <code>false</code> if the style sheet is applied to the document.
        <code>true</code> if it is not. Modifying this attribute may cause a
        new resolution of style for the document. A stylesheet only applies
        if both an appropriate medium definition is present and the disabled
        attribute is false. So, if the media doesn't apply to the current
        user agent, the <code>disabled</code> attribute is ignored.
      </summary>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.ownerNode">
      <summary>
        The node that associates this style sheet with the document. For HTML,
        this may be the corresponding <code>LINK</code> or <code>STYLE</code>
        element. For XML, it may be the linking processing instruction. For
        style sheets that are included by other style sheets, the value of
        this attribute is <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.parentStyleSheet">
      <summary>
        For style sheet languages that support the concept of style sheet
        inclusion, this attribute represents the including style sheet, if
        one exists. If the style sheet is a top-level style sheet, or the
        style sheet language does not support inclusion, the value of this
        attribute is <code>null</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.href">
      <summary>
        If the style sheet is a linked style sheet, the value of its attribute
        is its location. For inline style sheets, the value of this attribute
        is <code>null</code>. See the href attribute definition for the
        <code>LINK</code> element in HTML 4.0, and the href pseudo-attribute
        for the XML style sheet processing instruction.
      </summary>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.title">
      <summary>
        The advisory title. The title is often specified in the
        <code>ownerNode</code>. See the title attribute definition for the
        <code>LINK</code> element in HTML 4.0, and the title pseudo-attribute
        for the XML style sheet processing instruction.
      </summary>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheet.media">
      <summary>
        The intended destination media for style information. The media is
        often specified in the <code>ownerNode</code>. If no media has been
        specified, the <code>MediaList</code> will be empty. See the media
        attribute definition for the <code>LINK</code> element in HTML 4.0,
        and the media pseudo-attribute for the XML style sheet processing
        instruction . Modifying the media list may cause a change to the
        attribute <code>disabled</code>.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSStyleSheet.insertRule(System.String,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSStyleSheet.deleteRule(System.Int32)" -->
    <member name="P:org.w3c.dom.css.CSSStyleSheet.ownerRule">
      <summary>
        If this style sheet comes from an <code>@import</code> rule, the
        <code>ownerRule</code> attribute will contain the
        <code>CSSImportRule</code>. In that case, the <code>ownerNode</code>
        attribute in the <code>StyleSheet</code> interface will be
        <code>null</code>. If the style sheet comes from an element or a
        processing instruction, the <code>ownerRule</code> attribute will be
        <code>null</code> and the <code>ownerNode</code> attribute will
        contain the <code>Node</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSStyleSheet.cssRules">
      <summary>
        The list of all CSS rules contained within the style sheet. This
        includes both rule sets and at-rules.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSStyleDeclaration" -->
    <member name="M:org.w3c.dom.css.CSSStyleDeclaration.getPropertyValue(System.String)">
      <summary>
        Used to retrieve the value of a CSS property if it has been explicitly
        set within this declaration block.
      </summary>
      <param name="propertyName">
        The name of the CSS property. See the CSS property
        index.
      </param>
      <returns>
        Returns the value of the property if it has been explicitly
        set for this declaration block. Returns the empty string if the
        property has not been set.
      </returns>
    </member>
    <member name="M:org.w3c.dom.css.CSSStyleDeclaration.getPropertyCSSValue(System.String)">
      <summary>
        Used to retrieve the object representation of the value of a CSS
        property if it has been explicitly set within this declaration block.
        This method returns <code>null</code> if the property is a shorthand
        property. Shorthand property values can only be accessed and modified
        as strings, using the <code>getPropertyValue</code> and
        <code>setProperty</code> methods.
      </summary>
      <param name="propertyName">
        The name of the CSS property. See the CSS property
        index.
      </param>
      <returns>
        Returns the value of the property if it has been explicitly
        set for this declaration block. Returns <code>null</code> if the
        property has not been set.
      </returns>
    </member>
    <member name="M:org.w3c.dom.css.CSSStyleDeclaration.removeProperty(System.String)">
      <summary>
        Used to remove a CSS property if it has been explicitly set within
        this declaration block.
      </summary>
      <param name="propertyName">
        The name of the CSS property. See the CSS property
        index.
      </param>
      <returns>
        Returns the value of the property if it has been explicitly
        set for this declaration block. Returns the empty string if the
        property has not been set or the property name does not correspond
        to a known CSS property.
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration is readonly
        or the property is readonly.
      </exception>
    </member>
    <member name="M:org.w3c.dom.css.CSSStyleDeclaration.getPropertyPriority(System.String)">
      <summary>
        Used to retrieve the priority of a CSS property (e.g. the
        <code>"important"</code> qualifier) if the property has been
        explicitly set in this declaration block.
      </summary>
      <param name="propertyName">
        The name of the CSS property. See the CSS property
        index.
      </param>
      <returns>
        A string representing the priority (e.g.
        <code>"important"</code>) if one exists. The empty string if none
        exists.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSStyleDeclaration.setProperty(System.String,System.String,System.String)" -->
    <member name="M:org.w3c.dom.css.CSSStyleDeclaration.item(System.Int32)">
      <summary>
        Used to retrieve the properties that have been explicitly set in this
        declaration block. The order of the properties retrieved using this
        method does not have to be the order in which they were set. This
        method can be used to iterate over all properties in this declaration
        block.
      </summary>
      <param name="index"> Index of the property name to retrieve. </param>
      <returns>
        The name of the property at this ordinal position. The empty
        string if no property exists at this position.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSSStyleDeclaration.cssText" -->
    <member name="P:org.w3c.dom.css.CSSStyleDeclaration.length">
      <summary>
        The number of properties that have been explicitly set in this
        declaration block. The range of valid indices is 0 to length-1
        inclusive.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSStyleDeclaration.parentRule">
      <summary>
        The CSS rule that contains this declaration block or <code>null</code>
        if this <code>CSSStyleDeclaration</code> is not attached to a
        <code>CSSRule</code>.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.smil.ElementTimeControl" -->
    <member name="M:org.w3c.dom.smil.ElementTimeControl.beginElement">
      <summary>
        Causes this element to begin the local timeline (subject to restart constraints).
      </summary>
      <returns>
        <code>true</code> if the method call was successful and the
        element was begun. <code>false</code> if the method call
        failed. Possible reasons for failure include:
        <ul>
          <li>
            The element does not support the <code>beginElement</code>
            method. The <code>begin</code> attribute is not set to
            <code>"indefinite"</code>.
          </li>
          <li>
            The element is already active and cannot be restarted when it is
            active. The <code>restart</code> attribute is set to
            <code>"whenNotActive"</code>.
          </li>
          <li>
            The element is active or has been active and cannot be
            restarted. The <code>restart</code> attribute is set to
            <code>"never"</code>.
          </li>
        </ul>
        @raise DOMException <code>SYNTAX_ERR</code>: The element was not defined
        with the appropriate syntax to allow <code>beginElement</code> calls.
      </returns>
    </member>
    <member name="M:org.w3c.dom.smil.ElementTimeControl.beginElementAt(System.Single)">
      <summary>
        Causes this element to begin the local timeline (subject to restart
        constraints), at the passed offset from the current time when the method
        is called. If the offset is &gt;= 0, the semantics are equivalent to an
        event-base begin with the specified offset. If the offset is &lt; 0, the
        semantics are equivalent to beginElement(), but the element active
        duration is evaluated as though the element had begun at the passed
        (negative) offset from the current time when the method is called.
      </summary>
      <param name="offset"> The offset in seconds at which to begin the element. </param>
      <returns>
        <code>true</code> if the method call was successful and the element was begun.
        <code>false</code> if the method call failed.
        Possible reasons for failure include:
        <ul>
          <li>
            The element does not support the
            <code>beginElementAt</code> method. The
            <code>begin</code> attribute is not set to
            <code>"indefinite"</code>.
          </li>
          <li>
            The element is already active and cannot be
            restarted when it is active. The
            <code>restart</code> attribute is set to
            <code>"whenNotActive"</code>.
          </li>
          <li>
            The element is active or has been active and
            cannot be restarted. The <code>restart</code>
            attribute is set to <code>"never"</code>.
          </li>
        </ul>
        @raise DOMException SYNTAX_ERR: The element was not defined with the appropriate
        syntax to allow <code>beginElementAt</code> calls.
      </returns>
    </member>
    <member name="M:org.w3c.dom.smil.ElementTimeControl.endElement">
      <summary>
        Causes this element to end the local timeline.
      </summary>
      <returns>
        <code>true</code> if the method call was
        successful and the element was ended.
        <code>false</code> if method call failed. Possible
        reasons for failure include:
        <ul>
          <li>
            The element does not support the
            <code>endElement</code> method. The
            <code>end</code> attribute is not set to
            <code>"indefinite"</code>.
          </li>
          <li>The element is not active.</li>
        </ul>
        @raise DOMException SYNTAX_ERR: The element was not defined with the
        appropriate syntax to allow <code>endElement</code>
        calls.
      </returns>
    </member>
    <member name="M:org.w3c.dom.smil.ElementTimeControl.endElementAt(System.Single)">
      <summary>
        Causes this element to end the local timeline at the specified offset
        from the current time when the method is called
      </summary>
      <param name="offset">
        The offset in seconds at which to end the element.
        Must be <code>&gt;= 0</code>.
      </param>
      <returns>
        <code>true</code> if the method call was
        successful and the element was ended.
        <code>false</code> if method call failed. Possible
        reasons for failure include:
        <ul>
          <li>
            The element does not support the
            <code>endElementAt</code> method. The
            <code>end</code> attribute is not set to
            <code>"indefinite"</code>.
          </li>
          <li>The element is not active.</li>
        </ul>
        @raise DOMException SYNTAX_ERR: The element was not defined with the
        appropriate syntax to allow
        <code>endElementAt</code> calls.
      </returns>
    </member>
    <member name="T:org.w3c.dom.html.HTMLIFrameElement">
      <summary>
        Inline subwindows. See the IFRAME element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.align">
      <summary>
        Aligns this object (vertically or horizontally) with respect to its
        surrounding text. See the align attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.frameBorder">
      <summary>
        Request frame borders. See the frameborder attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.height">
      <summary>
        Frame height. See the height attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.longDesc">
      <summary>
        URI designating a long description of this image or frame. See the
        longdesc attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.marginHeight">
      <summary>
        Frame margin height, in pixels. See the marginheight attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.marginWidth">
      <summary>
        Frame margin width, in pixels. See the marginwidth attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.name">
      <summary>
        The frame name (object of the <code>target</code> attribute). See the
        name attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.scrolling">
      <summary>
        Specify whether or not the frame should have scrollbars. See the
        scrolling attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.src">
      <summary>
        A URI designating the initial frame contents. See the src attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIFrameElement.width">
      <summary>
        Frame width. See the width attribute definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.EntityReference" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.DocumentFragment" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.traversal.TreeWalker" -->
    <member name="M:org.w3c.dom.traversal.TreeWalker.parentNode">
      <summary>
        Moves to and returns the closest visible ancestor node of the current
        node. If the search for <code>parentNode</code> attempts to step
        upward from the <code>TreeWalker</code>'s <code>root</code> node, or
        if it fails to find a visible ancestor node, this method retains the
        current position and returns <code>null</code>.
      </summary>
      <returns>
        The new parent node, or <code>null</code> if the current node
        has no parent  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="M:org.w3c.dom.traversal.TreeWalker.firstChild">
      <summary>
        Moves the <code>TreeWalker</code> to the first visible child of the
        current node, and returns the new node. If the current node has no
        visible children, returns <code>null</code>, and retains the current
        node.
      </summary>
      <returns>
        The new node, or <code>null</code> if the current node has no
        visible children  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="M:org.w3c.dom.traversal.TreeWalker.lastChild">
      <summary>
        Moves the <code>TreeWalker</code> to the last visible child of the
        current node, and returns the new node. If the current node has no
        visible children, returns <code>null</code>, and retains the current
        node.
      </summary>
      <returns>
        The new node, or <code>null</code> if the current node has no
        children  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="M:org.w3c.dom.traversal.TreeWalker.previousSibling">
      <summary>
        Moves the <code>TreeWalker</code> to the previous sibling of the
        current node, and returns the new node. If the current node has no
        visible previous sibling, returns <code>null</code>, and retains the
        current node.
      </summary>
      <returns>
        The new node, or <code>null</code> if the current node has no
        previous sibling.  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="M:org.w3c.dom.traversal.TreeWalker.nextSibling">
      <summary>
        Moves the <code>TreeWalker</code> to the next sibling of the current
        node, and returns the new node. If the current node has no visible
        next sibling, returns <code>null</code>, and retains the current node.
      </summary>
      <returns>
        The new node, or <code>null</code> if the current node has no
        next sibling.  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="M:org.w3c.dom.traversal.TreeWalker.previousNode">
      <summary>
        Moves the <code>TreeWalker</code> to the previous visible node in
        document order relative to the current node, and returns the new
        node. If the current node has no previous node,  or if the search for
        <code>previousNode</code> attempts to step upward from the
        <code>TreeWalker</code>'s <code>root</code> node,  returns
        <code>null</code>, and retains the current node.
      </summary>
      <returns>
        The new node, or <code>null</code> if the current node has no
        previous node  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="M:org.w3c.dom.traversal.TreeWalker.nextNode">
      <summary>
        Moves the <code>TreeWalker</code> to the next visible node in document
        order relative to the current node, and returns the new node. If the
        current node has no next node, or if the search for nextNode attempts
        to step upward from the <code>TreeWalker</code>'s <code>root</code>
        node, returns <code>null</code>, and retains the current node.
      </summary>
      <returns>
        The new node, or <code>null</code> if the current node has no
        next node  in the <code>TreeWalker</code>'s logical view.
      </returns>
    </member>
    <member name="P:org.w3c.dom.traversal.TreeWalker.root">
      <summary>
        The <code>root</code> node of the <code>TreeWalker</code>, as specified
        when it was created.
      </summary>
    </member>
    <member name="P:org.w3c.dom.traversal.TreeWalker.whatToShow">
      <summary>
        This attribute determines which node types are presented via the
        <code>TreeWalker</code>. The available set of constants is defined in
        the <code>NodeFilter</code> interface.  Nodes not accepted by
        <code>whatToShow</code> will be skipped, but their children may still
        be considered. Note that this skip takes precedence over the filter,
        if any.
      </summary>
    </member>
    <member name="P:org.w3c.dom.traversal.TreeWalker.filter">
      <summary>
        The filter used to screen nodes.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.traversal.TreeWalker.expandEntityReferences" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.traversal.TreeWalker.currentNode" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.stylesheets.MediaList" -->
    <member name="M:org.w3c.dom.stylesheets.MediaList.item(System.Int32)">
      <summary>
        Returns the <code>index</code>th in the list. If <code>index</code> is
        greater than or equal to the number of media in the list, this
        returns <code>null</code>.
      </summary>
      <param name="index"> Index into the collection. </param>
      <returns>
        The medium at the <code>index</code>th position in the
        <code>MediaList</code>, or <code>null</code> if that is not a valid
        index.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.stylesheets.MediaList.deleteMedium(System.String)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.stylesheets.MediaList.appendMedium(System.String)" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.stylesheets.MediaList.mediaText" -->
    <member name="P:org.w3c.dom.stylesheets.MediaList.length">
      <summary>
        The number of media in the list. The range of valid media is
        <code>0</code> to <code>length-1</code> inclusive.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.ranges.Range" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.setStart(org.w3c.dom.Node,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.setEnd(org.w3c.dom.Node,System.Int32)" -->
    <member name="M:org.w3c.dom.ranges.Range.collapse(System.Boolean)">
      <summary>
        Collapse a Range onto one of its boundary-points
      </summary>
      <param name="toStartIf">
        TRUE, collapses the Range onto its start; if FALSE,
        collapses it onto its end.
      </param>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="M:org.w3c.dom.ranges.Range.selectNode(org.w3c.dom.Node)">
      <summary>
        Select a node and its contents
      </summary>
      <param name="refNodeThe"> node to select. </param>
      <exception cref="T:org.w3c.dom.ranges.RangeException">
        INVALID_NODE_TYPE_ERR: Raised if an ancestor of <code>refNode</code>
        is an Entity, Notation or DocumentType node or if
        <code>refNode</code> is a Document, DocumentFragment, Attr, Entity,
        or Notation node.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="M:org.w3c.dom.ranges.Range.selectNodeContents(org.w3c.dom.Node)">
      <summary>
        Select the contents within a node
      </summary>
      <param name="refNodeNode"> to select from </param>
      <exception cref="T:org.w3c.dom.ranges.RangeException">
        INVALID_NODE_TYPE_ERR: Raised if <code>refNode</code> or an ancestor
        of <code>refNode</code> is an Entity, Notation or DocumentType node.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.compareBoundaryPoints(System.Int16,org.w3c.dom.ranges.Range)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.deleteContents" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.extractContents" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.cloneContents" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.insertNode(org.w3c.dom.Node)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.ranges.Range.surroundContents(org.w3c.dom.Node)" -->
    <member name="M:org.w3c.dom.ranges.Range.cloneRange">
      <summary>
        Produces a new Range whose boundary-points are equal to the
        boundary-points of the Range.
      </summary>
      <returns> The duplicated Range. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="M:org.w3c.dom.ranges.Range.ToString">
      <summary>
        Returns the contents of a Range as a string. This string contains only
        the data characters, not any markup.
      </summary>
      <returns> The contents of the Range. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="M:org.w3c.dom.ranges.Range.detach">
      <summary>
        Called to indicate that the Range is no longer in use and that the
        implementation may relinquish any resources associated with this
        Range. Subsequent calls to any methods or attribute getters on this
        Range will result in a <code>DOMException</code> being thrown with an
        error code of <code>INVALID_STATE_ERR</code>.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.startContainer">
      <summary>
        Node within which the Range begins
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.startOffset">
      <summary>
        Offset within the starting node of the Range.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.endContainer">
      <summary>
        Node within which the Range ends
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.endOffset">
      <summary>
        Offset within the ending node of the Range.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.collapsed">
      <summary>
        TRUE if the Range is collapsed
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.commonAncestorContainer">
      <summary>
        The deepest common ancestor container of the Range's two
        boundary-points.
      </summary>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.startBefore">
      <summary>
        Sets the start position to be before a node
      </summary>
      <param name="refNodeRange">
        starts before <code>refNode</code>
      </param>
      <exception cref="T:org.w3c.dom.ranges.RangeException">
        INVALID_NODE_TYPE_ERR: Raised if the root container of
        <code>refNode</code> is not an Attr, Document, or DocumentFragment
        node or if <code>refNode</code> is a Document, DocumentFragment,
        Attr, Entity, or Notation node.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.startAfter">
      <summary>
        Sets the start position to be after a node
      </summary>
      <param name="refNodeRange">
        starts after <code>refNode</code>
      </param>
      <exception cref="T:org.w3c.dom.ranges.RangeException">
        INVALID_NODE_TYPE_ERR: Raised if the root container of
        <code>refNode</code> is not an Attr, Document, or DocumentFragment
        node or if <code>refNode</code> is a Document, DocumentFragment,
        Attr, Entity, or Notation node.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.endBefore">
      <summary>
        Sets the end position to be before a node.
      </summary>
      <param name="refNodeRange">
        ends before <code>refNode</code>
      </param>
      <exception cref="T:org.w3c.dom.ranges.RangeException">
        INVALID_NODE_TYPE_ERR: Raised if the root container of
        <code>refNode</code> is not an Attr, Document, or DocumentFragment
        node or if <code>refNode</code> is a Document, DocumentFragment,
        Attr, Entity, or Notation node.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <member name="P:org.w3c.dom.ranges.Range.endAfter">
      <summary>
        Sets the end of a Range to be after a node
      </summary>
      <param name="refNodeRange">
        ends after <code>refNode</code>.
      </param>
      <exception cref="T:org.w3c.dom.ranges.RangeException">
        INVALID_NODE_TYPE_ERR: Raised if the root container of
        <code>refNode</code> is not an Attr, Document or DocumentFragment
        node or if <code>refNode</code> is a Document, DocumentFragment,
        Attr, Entity, or Notation node.
      </exception>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if <code>detach()</code> has already been
        invoked on this object.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.ranges.DocumentRange" -->
    <member name="M:org.w3c.dom.ranges.DocumentRange.createRange">
      <summary>
        This interface can be obtained from the object implementing the
        <code>Document</code> interface using binding-specific casting
        methods.
      </summary>
      <returns>
        The initial state of the Range returned from this method is
        such that both of its boundary-points are positioned at the
        beginning of the corresponding Document, before any content. The
        Range returned can only be used to select content associated with
        this Document, or with DocumentFragments and Attrs for which this
        Document is the <code>ownerDocument</code>.
      </returns>
    </member>
    <member name="T:org.w3c.dom.html.HTMLMapElement">
      <summary>
        Client-side image map. See the MAP element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMapElement.areas">
      <summary>
        The list of areas defined for the image map.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLMapElement.name">
      <summary>
        Names the map (for use with <code>usemap</code>). See the name attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSPrimitiveValue" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSPrimitiveValue.setFloatValue(System.Int16,System.Single)" -->
    <member name="M:org.w3c.dom.css.CSSPrimitiveValue.getFloatValue(System.Int16)">
      <summary>
        This method is used to get a float value in a specified unit. If this
        CSS value doesn't contain a float value or can't be converted into
        the specified unit, a <code>DOMException</code> is raised.
      </summary>
      <param name="unitType">
        A unit code to get the float value. The unit code can
        only be a float unit type (i.e. <code>CSS_NUMBER</code>,
        <code>CSS_PERCENTAGE</code>, <code>CSS_EMS</code>,
        <code>CSS_EXS</code>, <code>CSS_PX</code>, <code>CSS_CM</code>,
        <code>CSS_MM</code>, <code>CSS_IN</code>, <code>CSS_PT</code>,
        <code>CSS_PC</code>, <code>CSS_DEG</code>, <code>CSS_RAD</code>,
        <code>CSS_GRAD</code>, <code>CSS_MS</code>, <code>CSS_S</code>,
        <code>CSS_HZ</code>, <code>CSS_KHZ</code>,
        <code>CSS_DIMENSION</code>).
      </param>
      <returns>  The float value in the specified unit. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float
        value or if the float value can't be converted into the specified
        unit.
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.css.CSSPrimitiveValue.setStringValue(System.Int16,System.String)" -->
    <member name="P:org.w3c.dom.css.CSSPrimitiveValue.primitiveType">
      <summary>
        The type of the value as defined by the constants specified above.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.CSSPrimitiveValue.stringValue">
      <summary>
        This method is used to get the string value. If the CSS value doesn't
        contain a string value, a <code>DOMException</code> is raised.  Some
        properties (like 'font-family' or 'voice-family') convert a
        whitespace separated list of idents to a string.
      </summary>
      <returns>
        The string value in the current unit. The current
        <code>primitiveType</code> can only be a string unit type (i.e.
        <code>CSS_STRING</code>, <code>CSS_URI</code>,
        <code>CSS_IDENT</code> and <code>CSS_ATTR</code>).
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string
        value.
      </exception>
    </member>
    <member name="P:org.w3c.dom.css.CSSPrimitiveValue.counterValue">
      <summary>
        This method is used to get the Counter value. If this CSS value
        doesn't contain a counter value, a <code>DOMException</code> is
        raised. Modification to the corresponding style property can be
        achieved using the <code>Counter</code> interface.
      </summary>
      <returns> The Counter value. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a
        Counter value (e.g. this is not <code>CSS_COUNTER</code>).
      </exception>
    </member>
    <member name="P:org.w3c.dom.css.CSSPrimitiveValue.rectValue">
      <summary>
        This method is used to get the Rect value. If this CSS value doesn't
        contain a rect value, a <code>DOMException</code> is raised.
        Modification to the corresponding style property can be achieved
        using the <code>Rect</code> interface.
      </summary>
      <returns> The Rect value. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect
        value. (e.g. this is not <code>CSS_RECT</code>).
      </exception>
    </member>
    <member name="P:org.w3c.dom.css.CSSPrimitiveValue.rGBColorValue">
      <summary>
        This method is used to get the RGB color. If this CSS value doesn't
        contain a RGB color value, a <code>DOMException</code> is raised.
        Modification to the corresponding style property can be achieved
        using the <code>RGBColor</code> interface.
      </summary>
      <returns> the RGB color value. </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_ACCESS_ERR: Raised if the attached property can't return a
        RGB color value (e.g. this is not <code>CSS_RGBCOLOR</code>).
      </exception>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSS2Properties" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.azimuth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.background" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.backgroundAttachment" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.backgroundColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.backgroundImage" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.backgroundPosition" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.backgroundRepeat" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.border" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderCollapse" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderSpacing" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderTop" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderRight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderBottom" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderLeft" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderTopColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderRightColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderBottomColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderLeftColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderTopStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderRightStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderBottomStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderLeftStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderTopWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderRightWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderBottomWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderLeftWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.borderWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.bottom" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.captionSide" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.clear" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.clip" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.color" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.content" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.counterIncrement" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.counterReset" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.cue" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.cueAfter" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.cueBefore" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.cursor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.direction" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.display" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.elevation" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.emptyCells" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.cssFloat" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.font" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontFamily" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontSize" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontSizeAdjust" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontStretch" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontVariant" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.fontWeight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.height" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.left" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.letterSpacing" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.lineHeight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.listStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.listStyleImage" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.listStylePosition" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.listStyleType" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.margin" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.marginTop" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.marginRight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.marginBottom" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.marginLeft" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.markerOffset" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.marks" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.maxHeight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.maxWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.minHeight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.minWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.orphans" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.outline" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.outlineColor" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.outlineStyle" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.outlineWidth" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.overflow" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.padding" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.paddingTop" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.paddingRight" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.paddingBottom" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.paddingLeft" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.page" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pageBreakAfter" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pageBreakBefore" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pageBreakInside" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pause" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pauseAfter" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pauseBefore" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pitch" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.pitchRange" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.playDuring" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.position" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.quotes" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.richness" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.right" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.size" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.speak" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.speakHeader" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.speakNumeral" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.speakPunctuation" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.speechRate" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.stress" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.tableLayout" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.textAlign" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.textDecoration" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.textIndent" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.textShadow" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.textTransform" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.top" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.unicodeBidi" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.verticalAlign" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.visibility" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.voiceFamily" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.volume" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.whiteSpace" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.widows" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.width" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.wordSpacing" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSS2Properties.zIndex" -->
    <member name="T:org.w3c.dom.html.HTMLTableCaptionElement">
      <summary>
        Table caption See the CAPTION element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableCaptionElement.align">
      <summary>
        Caption alignment with respect to the table. See the align attribute
        definition in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLFontElement">
      <summary>
        Local change to font. See the FONT element definition in HTML 4.0. This
        element is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFontElement.color">
      <summary>
        Font color. See the color attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFontElement.face">
      <summary>
        Font face identifier. See the face attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLFontElement.size">
      <summary>
        Font size. See the size attribute definition in HTML 4.0. This attribute
        is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLAnchorElement">
      <summary>
        The anchor element. See the A element definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLAnchorElement.blur">
      <summary>
        Removes keyboard focus from this element.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLAnchorElement.focus">
      <summary>
        Gives keyboard focus to this element.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.charset">
      <summary>
        The character encoding of the linked resource. See the charset attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.coords">
      <summary>
        Comma-separated list of lengths, defining an active region geometry.See
        also <code>shape</code> for the shape of the region. See the coords
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.href">
      <summary>
        The URI of the linked resource. See the href attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.hreflang">
      <summary>
        Language code of the linked resource. See the hreflang attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.name">
      <summary>
        Anchor name. See the name attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.rel">
      <summary>
        Forward link type. See the rel attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.rev">
      <summary>
        Reverse link type. See the rev attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.shape">
      <summary>
        The shape of the active area. The coordinates are givenby
        <code>coords</code>. See the shape attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.target">
      <summary>
        Frame to render the resource in. See the target attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLAnchorElement.type">
      <summary>
        Advisory content type. See the type attribute definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.DocumentType" -->
    <member name="P:org.w3c.dom.DocumentType.name">
      <summary>
        The name of DTD; i.e., the name immediately following the
        <code>DOCTYPE</code> keyword.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.DocumentType.entities" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.DocumentType.notations" -->
    <member name="P:org.w3c.dom.DocumentType.publicId">
      <summary>
        The public identifier of the external subset.
        @since DOM Level 2
      </summary>
    </member>
    <member name="P:org.w3c.dom.DocumentType.systemId">
      <summary>
        The system identifier of the external subset.
        @since DOM Level 2
      </summary>
    </member>
    <member name="P:org.w3c.dom.DocumentType.internalSubset">
      <summary>
        The internal subset as a string.The actual content returned depends on
        how much information is available to the implementation. This may
        vary depending on various parameters, including the XML processor
        used to build the document.
        @since DOM Level 2
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.RGBColor" -->
    <member name="P:org.w3c.dom.css.RGBColor.red">
      <summary>
        This attribute is used for the red value of the RGB color.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.RGBColor.green">
      <summary>
        This attribute is used for the green value of the RGB color.
      </summary>
    </member>
    <member name="P:org.w3c.dom.css.RGBColor.blue">
      <summary>
        This attribute is used for the blue value of the RGB color.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Text" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.Text.splitText(System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.stylesheets.StyleSheetList" -->
    <member name="M:org.w3c.dom.stylesheets.StyleSheetList.item(System.Int32)">
      <summary>
        Used to retrieve a style sheet by ordinal index. If index is greater
        than or equal to the number of style sheets in the list, this returns
        <code>null</code>.
      </summary>
      <param name="indexIndex"> into the collection </param>
      <returns>
        The style sheet at the <code>index</code> position in the
        <code>StyleSheetList</code>, or <code>null</code> if that is not a
        valid index.
      </returns>
    </member>
    <member name="P:org.w3c.dom.stylesheets.StyleSheetList.length">
      <summary>
        The number of <code>StyleSheets</code> in the list. The range of valid
        child stylesheet indices is <code>0</code> to <code>length-1</code>
        inclusive.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.smil.TimeEvent" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.smil.TimeEvent.initTimeEvent(System.String,org.w3c.dom.views.AbstractView,System.Int32)" -->
    <member name="P:org.w3c.dom.smil.TimeEvent.view">
      <summary>
        The <code>view</code> attribute identifies the <code>AbstractView</code>
        from which the event was generated.
      </summary>
    </member>
    <member name="P:org.w3c.dom.smil.TimeEvent.detail">
      <summary>
        Specifies some detail information about the <code>Event</code>,
        depending on the type of event.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLImageElement">
      <summary>
        Embedded image. See the IMG element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.lowSrc">
      <summary>
        URI designating the source of this image, for low-resolution output.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.name">
      <summary>
        The name of the element (for backwards compatibility).
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.align">
      <summary>
        Aligns this object (vertically or horizontally) with respect to its
        surrounding text. See the align attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.alt">
      <summary>
        Alternate text for user agents not rendering the normal contentof this
        element. See the alt attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.border">
      <summary>
        Width of border around image. See the border attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.height">
      <summary>
        Override height. See the height attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.hspace">
      <summary>
        Horizontal space to the left and right of this image. See the hspace
        attribute definition in HTML 4.0. This attribute is deprecated in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.isMap">
      <summary>
        Use server-side image map. See the ismap attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.longDesc">
      <summary>
        URI designating a long description of this image or frame. See the
        longdesc attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.src">
      <summary>
        URI designating the source of this image. See the src attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.useMap">
      <summary>
        Use client-side image map. See the usemap attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.vspace">
      <summary>
        Vertical space above and below this image. See the vspace attribute
        definition in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLImageElement.width">
      <summary>
        Override width. See the width attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLHtmlElement">
      <summary>
        Root of an HTML document. See the HTML element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHtmlElement.version">
      <summary>
        Version information about the document's DTD. See the version attribute
        definition in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.html.HTMLDocument" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.html.HTMLDocument.open" -->
    <member name="M:org.w3c.dom.html.HTMLDocument.close">
      <summary>
        Closes a document stream opened by <code>open()</code>and forces
        rendering.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLDocument.write(System.String)">
      <summary>
        Write a string of text to a document stream opened by<code>open()</code>.
        The text is parsed into the document's structuremodel.
      </summary>
      <param name="text">
        The string to be parsed into some structure in the document
        structuremodel.
      </param>
    </member>
    <member name="M:org.w3c.dom.html.HTMLDocument.writeln(System.String)">
      <summary>
        Write a string of text followed by a newline character to a document
        stream opened by <code>open()</code>. The text is parsed into the
        document's structure model.
      </summary>
      <param name="text">
        The string to be parsed into some structure in the document
        structuremodel.
      </param>
    </member>
    <member name="M:org.w3c.dom.html.HTMLDocument.getElementById(System.String)">
      <summary>
        Returns the Element whose <code>id</code> is given by elementId. If no
        such element exists, returns <code>null</code>. Behavior is not defined
        if more than one element has this <code>id</code>.
      </summary>
      <param name="elementId">
        The unique <code>id</code> value for an element.
      </param>
      <returns> The matching element. </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLDocument.getElementsByName(System.String)">
      <summary>
        Returns the (possibly empty) collection of elements whose<code>name</code>
        value is given by <code>elementName</code>.
      </summary>
      <param name="elementName">
        The <code>name</code> attribute value for an element.
      </param>
      <returns> The matching elements. </returns>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.title">
      <summary>
        The title of a document as specified by the <code>TITLE</code>element in
        the head of the document.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.referrer">
      <summary>
        Returns the URI of the page that linked to this page. The value isan
        empty string if the user navigated to the page directly (notthrough a
        link, but, for example, via a bookmark).
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.domain">
      <summary>
        The domain name of the server that served the document, or a nullstring
        if the server cannot be identified by a domain name.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.uRL">
      <summary>
        The complete URI of the document.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.body">
      <summary>
        The element that contains the content for the document. In documentswith
        <code>BODY</code> contents, returns the <code>BODY</code>element, and in
        frameset documents, this returns the outermost<code>FRAMESET</code>
        element.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.images">
      <summary>
        A collection of all the <code>IMG</code> elements in a document.The
        behavior is limited to <code>IMG</code> elements forbackwards
        compatibility.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.applets">
      <summary>
        A collection of all the <code>OBJECT</code> elements that includeapplets
        and <code>APPLET</code> (deprecated) elements ina document.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.links">
      <summary>
        A collection of all <code>AREA</code> elements andanchor (<code>A</code>)
        elements in a documentwith a value for the <code>href</code> attribute.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.forms">
      <summary>
        A collection of all the forms of a document.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.anchors">
      <summary>
        A collection of all the anchor (<code>A</code>) elements in a document
        with a value for the <code>name</code> attribute.Note. For reasons of
        backwardscompatibility, the returned set of anchors only contains those
        anchors created with the <code>name</code> attribute, not those created
        with the <code>id</code> attribute.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDocument.cookie">
      <summary>
        The cookies associated with this document. If there are none, thevalue is
        an empty string. Otherwise, the value is a string: asemicolon-delimited
        list of "name, value" pairs for all the cookiesassociated with the page.
        For example, <code>name=value;expires=date</code>.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLCollection">
      <summary>
        An <code>HTMLCollection</code> is a list of nodes. An individual nodemay be
        accessed by either ordinal index or the node's<code>name</code> or
        <code>id</code> attributes. Note:Collections in the HTML DOM are assumed
        to be live meaningthat they are automatically updated when the underlying
        document ischanged.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLCollection.item(System.Int32)">
      <summary>
        This method retrieves a node specified by ordinal index. Nodes are
        numbered in tree order (depth-first traversal order).
      </summary>
      <param name="index"> The index of the node to be fetched. The index origin is 0. </param>
      <returns>
        The <code>Node</code> at the corresponding position upon success.
        A value of <code>null</code> is returned if the index is out of range.
      </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLCollection.namedItem(System.String)">
      <summary>
        This method retrieves a <code>Node</code> using a name. It first searches
        for a <code>Node</code> with a matching <code>id</code> attribute. If it
        doesn't find one, it then searches for a <code>Node</code> with a
        matching <code>name</code> attribute, but only on those elements that
        are allowed a name attribute.
      </summary>
      <param name="name">
        The name of the <code>Node</code> to be fetched.
      </param>
      <returns>
        The <code>Node</code> with a <code>name</code> or <code>id</code>
        attribute whose value corresponds to the specified string. Upon
        failure (e.g., no node with this name exists), returns
        <code>null</code>.
      </returns>
    </member>
    <member name="P:org.w3c.dom.html.HTMLCollection.length">
      <summary>
        This attribute specifies the length or size of the list.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.traversal.DocumentTraversal" -->
    <member name="M:org.w3c.dom.traversal.DocumentTraversal.createNodeIterator(org.w3c.dom.Node,System.Int32,org.w3c.dom.traversal.NodeFilter,System.Boolean)">
      <summary>
        Create a new <code>NodeIterator</code> over the subtree rooted at the
        specified node.
      </summary>
      <param name="rootThe">
        node which will be iterated together with its children.
        The iterator is initially positioned just before this node. The
        <code>whatToShow</code> flags and the filter, if any, are not
        considered when setting this position. The root must not be
        <code>null</code>.
      </param>
      <param name="whatToShowThis">
        flag specifies which node types may appear in
        the logical view of the tree presented by the iterator. See the
        description of <code>NodeFilter</code> for the set of possible
        <code>SHOW_</code> values.These flags can be combined using
        <code>OR</code>.
      </param>
      <param name="filterThe">
        <code>NodeFilter</code> to be used with this
        <code>TreeWalker</code>, or <code>null</code> to indicate no filter.
      </param>
      <param name="entityReferenceExpansionThe">
        value of this flag determines
        whether entity reference nodes are expanded.
      </param>
      <returns>
        The newly created <code>NodeIterator</code>.
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        NOT_SUPPORTED_ERR: Raised if the specified <code>root</code> is
        <code>null</code>.
      </exception>
    </member>
    <member name="M:org.w3c.dom.traversal.DocumentTraversal.createTreeWalker(org.w3c.dom.Node,System.Int32,org.w3c.dom.traversal.NodeFilter,System.Boolean)">
      <summary>
        Create a new <code>TreeWalker</code> over the subtree rooted at the
        specified node.
      </summary>
      <param name="rootThe">
        node which will serve as the <code>root</code> for the
        <code>TreeWalker</code>. The <code>whatToShow</code> flags and the
        <code>NodeFilter</code> are not considered when setting this value;
        any node type will be accepted as the <code>root</code>. The
        <code>currentNode</code> of the <code>TreeWalker</code> is
        initialized to this node, whether or not it is visible. The
        <code>root</code> functions as a stopping point for traversal
        methods that look upward in the document structure, such as
        <code>parentNode</code> and nextNode. The <code>root</code> must
        not be <code>null</code>.
      </param>
      <param name="whatToShowThis">
        flag specifies which node types may appear in
        the logical view of the tree presented by the tree-walker. See the
        description of <code>NodeFilter</code> for the set of possible
        SHOW_ values.These flags can be combined using <code>OR</code>.
      </param>
      <param name="filterThe">
        <code>NodeFilter</code> to be used with this
        <code>TreeWalker</code>, or <code>null</code> to indicate no filter.
      </param>
      <param name="entityReferenceExpansionIf">
        this flag is false, the contents of
        <code>EntityReference</code> nodes are not presented in the logical
        view.
      </param>
      <returns>
        The newly created <code>TreeWalker</code>.
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        NOT_SUPPORTED_ERR: Raised if the specified <code>root</code> is
        <code>null</code>.
      </exception>
    </member>
    <member name="T:org.w3c.dom.html.HTMLUListElement">
      <summary>
        Unordered list. See the UL element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLUListElement.compact">
      <summary>
        Reduce spacing between list items. See the compact attribute definition
        in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLUListElement.type">
      <summary>
        Bullet style. See the type attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLTitleElement">
      <summary>
        The document title. See the TITLE element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTitleElement.text">
      <summary>
        The specified title as a string.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLSelectElement">
      <summary>
        The select element allows the selection of an option. The containedoptions
        can be directly accessed through the select element as acollection. See
        the SELECT element definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLSelectElement.add(org.w3c.dom.html.HTMLElement,org.w3c.dom.html.HTMLElement)">
      <summary>
        Add a new element to the collection of <code>OPTION</code> elementsfor
        this <code>SELECT</code>.
      </summary>
      <param name="element"> The element to add. </param>
      <param name="before">
        The element to insert before, or NULL for the head of the
        list.
      </param>
    </member>
    <member name="M:org.w3c.dom.html.HTMLSelectElement.remove(System.Int32)">
      <summary>
        Remove an element from the collection of <code>OPTION</code> elementsfor
        this <code>SELECT</code>. Does nothing if no element has the givenindex.
      </summary>
      <param name="index"> The index of the item to remove. </param>
    </member>
    <member name="M:org.w3c.dom.html.HTMLSelectElement.blur">
      <summary>
        Removes keyboard focus from this element.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLSelectElement.focus">
      <summary>
        Gives keyboard focus to this element.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.type">
      <summary>
        The type of control created.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.selectedIndex">
      <summary>
        The ordinal index of the selected option. The value -1 is returned ifno
        element is selected. If multiple options are selected, the index ofthe
        first selected option is returned.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.value">
      <summary>
        The current form control value.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.length">
      <summary>
        The number of options in this <code>SELECT</code>.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.options">
      <summary>
        The collection of <code>OPTION</code> elements contained by this element.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.disabled">
      <summary>
        The control is unavailable in this context. See the disabled attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.multiple">
      <summary>
        If true, multiple <code>OPTION</code> elements may be selected in this
        <code>SELECT</code>. See the multiple attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.name">
      <summary>
        Form control or object name when submitted with a form. See the name
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.size">
      <summary>
        Number of visible rows. See the size attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLSelectElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.ElementCSSInlineStyle" -->
    <member name="P:org.w3c.dom.css.ElementCSSInlineStyle.style">
      <summary>
        The style attribute.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.traversal.NodeFilter" -->
    <member name="M:org.w3c.dom.traversal.NodeFilter.acceptNode(org.w3c.dom.Node)">
      <summary>
        Test whether a specified node is visible in the logical view of a
        <code>TreeWalker</code> or <code>NodeIterator</code>. This function
        will be called by the implementation of <code>TreeWalker</code> and
        <code>NodeIterator</code>; it is not normally called directly from
        user code. (Though you could do so if you wanted to use the same
        filter to guide your own application logic.)
      </summary>
      <param name="nThe"> node to check to see if it passes the filter or not. </param>
      <returns>
        a constant to determine whether the node is accepted,
        rejected, or skipped, as defined above.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.stylesheets.LinkStyle" -->
    <member name="P:org.w3c.dom.stylesheets.LinkStyle.sheet">
      <summary>
        The style sheet.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLOListElement">
      <summary>
        Ordered list. See the OL element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOListElement.compact">
      <summary>
        Reduce spacing between list items. See the compact attribute definition
        in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOListElement.start">
      <summary>
        Starting sequence number. See the start attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOListElement.type">
      <summary>
        Numbering style. See the type attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLLinkElement">
      <summary>
        The <code>LINK</code> element specifies a link to an externalresource, and
        defines this document's relationship to that resource(or vice versa).  See
        the LINK element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.disabled">
      <summary>
        Enables/disables the link. This is currently only used for style sheet
        links, and may be used to activate or deactivate style sheets.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.charset">
      <summary>
        The character encoding of the resource being linked to. See the charset
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.href">
      <summary>
        The URI of the linked resource. See the href attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.hreflang">
      <summary>
        Language code of the linked resource. See the hreflang attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.media">
      <summary>
        Designed for use with one or more target media. See the media attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.rel">
      <summary>
        Forward link type. See the rel attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.rev">
      <summary>
        Reverse link type. See the rev attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.target">
      <summary>
        Frame to render the resource in. See the target attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLLinkElement.type">
      <summary>
        Advisory content type. See the type attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLBlockquoteElement">
      <summary>
        ??? See the BLOCKQUOTE element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBlockquoteElement.cite">
      <summary>
        A URI designating a document that describes the reason forthe change. See
        the cite attribute definition in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.CDATASection" -->
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.traversal.NodeIterator" -->
    <member name="M:org.w3c.dom.traversal.NodeIterator.nextNode">
      <summary>
        Returns the next node in the set and advances the position of the
        iterator in the set. After a <code>NodeIterator</code> is created,
        the first call to <code>nextNode()</code> returns the first node in
        the set.
      </summary>
      <returns>
        The next <code>Node</code> in the set being iterated over, or
        <code>null</code> if there are no more members in that set.
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if this method is called after the
        <code>detach</code> method was invoked.
      </exception>
    </member>
    <member name="M:org.w3c.dom.traversal.NodeIterator.previousNode">
      <summary>
        Returns the previous node in the set and moves the position of the
        <code>NodeIterator</code> backwards in the set.
      </summary>
      <returns>
        The previous <code>Node</code> in the set being iterated over,
        or <code>null</code> if there are no more members in that set.
      </returns>
      <exception cref="T:org.w3c.dom.DOMException">
        INVALID_STATE_ERR: Raised if this method is called after the
        <code>detach</code> method was invoked.
      </exception>
    </member>
    <member name="M:org.w3c.dom.traversal.NodeIterator.detach">
      <summary>
        Detaches the <code>NodeIterator</code> from the set which it iterated
        over, releasing any computational resources and placing the iterator
        in the INVALID state. After <code>detach</code> has been invoked,
        calls to <code>nextNode</code> or <code>previousNode</code> will
        raise the exception INVALID_STATE_ERR.
      </summary>
    </member>
    <member name="P:org.w3c.dom.traversal.NodeIterator.root">
      <summary>
        The root node of the <code>NodeIterator</code>, as specified when it
        was created.
      </summary>
    </member>
    <member name="P:org.w3c.dom.traversal.NodeIterator.whatToShow">
      <summary>
        This attribute determines which node types are presented via the
        iterator. The available set of constants is defined in the
        <code>NodeFilter</code> interface.  Nodes not accepted by
        <code>whatToShow</code> will be skipped, but their children may still
        be considered. Note that this skip takes precedence over the filter,
        if any.
      </summary>
    </member>
    <member name="P:org.w3c.dom.traversal.NodeIterator.filter">
      <summary>
        The <code>NodeFilter</code> used to screen nodes.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.traversal.NodeIterator.expandEntityReferences" -->
    <member name="T:org.w3c.dom.html.HTMLInputElement">
      <summary>
        Form control. Note. Depending upon the environmentthe page is being viewed,
        the value property may be read-only for thefile upload input type. For the
        "password" input type, the actual valuereturned may be masked to prevent
        unauthorized use. See the INPUT element definition in HTML 4.0.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLInputElement.blur">
      <summary>
        Removes keyboard focus from this element.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLInputElement.focus">
      <summary>
        Gives keyboard focus to this element.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLInputElement.select">
      <summary>
        Select the contents of the text area. For <code>INPUT</code> elements
        whose <code>type</code> attribute has one of the following values:
        "Text", "File", or "Password".
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLInputElement.click">
      <summary>
        Simulate a mouse-click. For <code>INPUT</code> elements whose
        <code>type</code> attribute has one of the followingvalues: "Button",
        "Checkbox", "Radio", "Reset", or "Submit".
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.defaultValue">
      <summary>
        Stores the initial control value (i.e., the initial value of
        <code>value</code>).
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.defaultChecked">
      <summary>
        When <code>type</code> has the value "Radio" or "Checkbox", stores the
        initial value of the <code>checked</code> attribute.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.accept">
      <summary>
        A comma-separated list of content types that a server processing thisform
        will handle correctly. See the accept attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.accessKey">
      <summary>
        A single character access key to give access to the form control. See the
        accesskey attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.align">
      <summary>
        Aligns this object (vertically or horizontally) with respect to its
        surrounding text. See the align attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.alt">
      <summary>
        Alternate text for user agents not rendering the normal contentof this
        element. See the alt attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.checked">
      <summary>
        Describes whether a radio or check box is checked, when<code>type</code>
        has the value "Radio" or "Checkbox".  The value isTRUE if explicitly
        set. Represents the current state of the checkboxor radio button. See
        the checked attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.disabled">
      <summary>
        The control is unavailable in this context. See the disabled attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.maxLength">
      <summary>
        Maximum number of characters for text fields, when <code>type</code>has
        the value "Text" or "Password". See the maxlength attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.name">
      <summary>
        Form control or object name when submitted with a form. See the name
        attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.readOnly">
      <summary>
        This control is read-only. When <code>type</code> has the value "text"or
        "password" only. See the readonly attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.size">
      <summary>
        Size information. The precise meaning is specific to each type offield.
        See the size attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.src">
      <summary>
        When the <code>type</code> attribute has the value "Image", thisattribute
        specifies the location of the image to be used to decoratethe graphical
        submit button. See the src attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.tabIndex">
      <summary>
        Index that represents the element's position in the tabbing order. See
        the tabindex attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.type">
      <summary>
        The type of control created. See the type attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.useMap">
      <summary>
        Use client-side image map. See the usemap attribute definition in HTML
        4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLInputElement.value">
      <summary>
        The current form control value. Used for radio buttons and check boxes.
        See the value attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLDivElement">
      <summary>
        Generic block container. See the DIV element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLDivElement.align">
      <summary>
        Horizontal text alignment. See the align attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSStyleRule" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSSStyleRule.selectorText" -->
    <member name="P:org.w3c.dom.css.CSSStyleRule.style">
      <summary>
        The declaration-block of this rule set.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.ranges.RangeException" -->
    <member name="F:org.w3c.dom.ranges.RangeException.BAD_BOUNDARYPOINTS_ERR">
      <summary>
        If the boundary-points of a Range do not meet specific requirements.
      </summary>
    </member>
    <member name="F:org.w3c.dom.ranges.RangeException.INVALID_NODE_TYPE_ERR">
      <summary>
        If the container of an boundary-point of a Range is being set to either
        a node of an invalid type or a node with an ancestor of an invalid
        type.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.NamedNodeMap" -->
    <member name="M:org.w3c.dom.NamedNodeMap.getNamedItem(System.String)">
      <summary>
        Retrieves a node specified by name.
      </summary>
      <param name="nameThe">
        <code>nodeName</code> of a node to retrieve.
      </param>
      <returns>
        A <code>Node</code> (of any type) with the specified
        <code>nodeName</code>, or <code>null</code> if it does not identify
        any node in this map.
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.NamedNodeMap.setNamedItem(org.w3c.dom.Node)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.NamedNodeMap.removeNamedItem(System.String)" -->
    <member name="M:org.w3c.dom.NamedNodeMap.item(System.Int32)">
      <summary>
        Returns the <code>index</code>th item in the map. If <code>index</code>
        is greater than or equal to the number of nodes in this map, this
        returns <code>null</code>.
      </summary>
      <param name="indexIndex"> into this map. </param>
      <returns>
        The node at the <code>index</code>th position in the map, or
        <code>null</code> if that is not a valid index.
      </returns>
    </member>
    <member name="M:org.w3c.dom.NamedNodeMap.getNamedItemNS(System.String,System.String)">
      <summary>
        Retrieves a node specified by local name and namespace URI. HTML-only
        DOM implementations do not need to implement this method.
      </summary>
      <param name="namespaceURIThe"> namespace URI of the node to retrieve. </param>
      <param name="localNameThe"> local name of the node to retrieve. </param>
      <returns>
        A <code>Node</code> (of any type) with the specified local
        name and namespace URI, or <code>null</code> if they do not
        identify any node in this map.
        @since DOM Level 2
      </returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.NamedNodeMap.setNamedItemNS(org.w3c.dom.Node)" -->
    <!-- Badly formed XML comment ignored for member "M:org.w3c.dom.NamedNodeMap.removeNamedItemNS(System.String,System.String)" -->
    <member name="P:org.w3c.dom.NamedNodeMap.length">
      <summary>
        The number of nodes in this map. The range of valid child node indices
        is <code>0</code> to <code>length-1</code> inclusive.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLTableSectionElement">
      <summary>
        The <code>THEAD</code>, <code>TFOOT</code>, and <code>TBODY</code>elements.
      </summary>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableSectionElement.insertRow(System.Int32)">
      <summary>
        Insert a row into this section.
      </summary>
      <param name="index"> The row number where to insert a new row. </param>
      <returns> The newly created row. </returns>
    </member>
    <member name="M:org.w3c.dom.html.HTMLTableSectionElement.deleteRow(System.Int32)">
      <summary>
        Delete a row from this section.
      </summary>
      <param name="index"> The index of the row to be deleted. </param>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableSectionElement.align">
      <summary>
        Horizontal alignment of data in cells. See the <code>align</code>
        attribute for HTMLTheadElement for details.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableSectionElement.ch">
      <summary>
        Alignment character for cells in a column. See the char attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableSectionElement.chOff">
      <summary>
        Offset of alignment character. See the charoff attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableSectionElement.vAlign">
      <summary>
        Vertical alignment of data in cells.See the <code>valign</code>attribute
        for HTMLTheadElement for details.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLTableSectionElement.rows">
      <summary>
        The collection of rows in this table section.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLPreElement">
      <summary>
        Preformatted text. See the PRE element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLPreElement.width">
      <summary>
        Fixed width for content. See the width attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLOptGroupElement">
      <summary>
        Group options together in logical subdivisions. See the OPTGROUP element
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptGroupElement.disabled">
      <summary>
        The control is unavailable in this context. See the disabled attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLOptGroupElement.label">
      <summary>
        Assigns a label to this option group. See the label attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLIsIndexElement">
      <summary>
        This element is usedfor single-line text input. See the ISINDEX element
        definition in HTML 4.0. This element is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIsIndexElement.form">
      <summary>
        Returns the <code>FORM</code> element containing this control.Returns
        null if this control is not within the context of a form.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLIsIndexElement.prompt">
      <summary>
        The prompt message. See the prompt attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLHeadElement">
      <summary>
        Document head information. See the HEAD element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHeadElement.profile">
      <summary>
        URI designating a metadata profile. See the profile attribute definition
        in HTML 4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.Attr" -->
    <member name="P:org.w3c.dom.Attr.name">
      <summary>
        Returns the name of this attribute.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.Attr.specified" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.Attr.value" -->
    <member name="P:org.w3c.dom.Attr.ownerElement">
      <summary>
        The <code>Element</code> node this attribute is attached to or
        <code>null</code> if this attribute is not in use.
        @since DOM Level 2
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLParamElement">
      <summary>
        Parameters fed to the <code>OBJECT</code> element. See the PARAM element
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLParamElement.name">
      <summary>
        The name of a run-time parameter. See the name attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLParamElement.type">
      <summary>
        Content type for the <code>value</code> attribute when
        <code>valuetype</code> has the value "ref". See the type attribute
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLParamElement.value">
      <summary>
        The value of a run-time parameter. See the value attribute definition in
        HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLParamElement.valueType">
      <summary>
        Information about the meaning of the <code>value</code> attributevalue.
        See the valuetype attribute definition in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLHRElement">
      <summary>
        Create a horizontal rule. See the HR element definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHRElement.align">
      <summary>
        Align the rule on the page. See the align attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHRElement.noShade">
      <summary>
        Indicates to the user agent that there should be no shading in the
        rendering of this element. See the noshade attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHRElement.size">
      <summary>
        The height of the rule. See the size attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLHRElement.width">
      <summary>
        The width of the rule. See the width attribute definition in HTML 4.0.
        This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="T:org.w3c.dom.html.HTMLBodyElement">
      <summary>
        The HTML document body. This element is always present in the DOM API,even
        if the tags are not present in the source document. See the BODY element
        definition in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBodyElement.aLink">
      <summary>
        Color of active links (after mouse-button down, but beforemouse-button
        up). See the alink attribute definition in HTML 4.0. This attribute is
        deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBodyElement.background">
      <summary>
        URI of the background texture tile image. See the background attribute
        definition in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBodyElement.bgColor">
      <summary>
        Document background color. See the bgcolor attribute definition in HTML
        4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBodyElement.link">
      <summary>
        Color of links that are not active and unvisited. See the link attribute
        definition in HTML 4.0. This attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBodyElement.text">
      <summary>
        Document text color. See the text attribute definition in HTML 4.0. This
        attribute is deprecated in HTML 4.0.
      </summary>
    </member>
    <member name="P:org.w3c.dom.html.HTMLBodyElement.vLink">
      <summary>
        Color of links that have been visited by the user. See the vlink
        attribute definition in HTML 4.0. This attribute is deprecated in HTML
        4.0.
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:org.w3c.dom.css.CSSPageRule" -->
    <!-- Badly formed XML comment ignored for member "P:org.w3c.dom.css.CSSPageRule.selectorText" -->
    <member name="P:org.w3c.dom.css.CSSPageRule.style">
      <summary>
        The declaration-block of this rule.
      </summary>
    </member>
  </members>
</doc>

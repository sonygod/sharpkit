//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace YUI_
{
    /// <summary>
    /// A class for constructing animation instances.
    /// </summary>
    public partial class Anim : YUI_.Base
    {
        /// <summary>
        /// Get the current position of the animated element based on t.
        /// Each point is an array of "x" and "y" values (0 = x, 1 = y)
        /// At least 2 points are required (start and end).
        /// First point is start. Last point is end.
        /// Additional control points are optional.
        /// </summary>
        public YUI_.Array getBezier(YUI_.Array points, YUI_.DataType_.Number t){return null;}
        /// <summary>
        /// Pauses all animation instances.
        /// </summary>
        public void pause(){}
        /// <summary>
        /// Runs all animation instances.
        /// </summary>
        public void run(){}
        /// <summary>
        /// Stops all animation instances.
        /// </summary>
        public void stop(){}
        /// <summary>
        /// Stops the animation and resets its time.
        /// </summary>
        public void stop(object finish){}
        /// <summary>
        /// The method that will provide values to the attribute(s) during the animation.
        /// Defaults to "Easing.easeNone".
        /// </summary>
        public JsAction easing{get;set;}
        /// <summary>
        /// The starting values for the animated properties.
        /// Fields may be strings, numbers, or functions.
        /// If a function is used, the return value becomes the from value.
        /// If no from value is specified, the DEFAULT_GETTER will be used.
        /// Supports any unit, provided it matches the "to" (or default)
        /// unit (e.g. `{width: '10em', color: 'rgb(0, 0 0)', borderColor: '#ccc'}`).
        /// If using the default ('px' for length-based units), the unit may be omitted
        /// (e.g. `{width: 100}, borderColor: 'ccc'}`, which defaults to pixels
        /// and hex, respectively).
        /// </summary>
        public object from{get;set;}
        /// <summary>
        /// The object to be animated.
        /// </summary>
        public Node node{get;set;}
        /// <summary>
        /// The ending values for the animated properties.
        /// Fields may be strings, numbers, or functions.
        /// Supports any unit, provided it matches the "from" (or default)
        /// unit (e.g. `{width: '50%', color: 'red', borderColor: '#ccc'}`).
        /// If using the default ('px' for length-based units), the unit may be omitted
        /// (e.g. `{width: 100, borderColor: 'ccc'}`, which defaults to pixels
        /// and hex, respectively).
        /// </summary>
        public object to{get;set;}
    }
}

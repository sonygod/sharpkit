/*Generated by SharpKit 5 v5.00.0000*/
"use strict";
var log = log4javascript.getDefaultLogger();
log.removeAllAppenders();
log.setLevel(log4javascript.Level.INFO);
function InitSampleInPageAppender(elementId)
{
    var container = window.document.getElementById(elementId);
    var appender = new log4javascript.InPageAppender(elementId, false, false, true, container.clientWidth, container.clientHeight);
    var log = log4javascript.getDefaultLogger();
    log.addAppender(appender);
};
function InitSampleSelectAppender(elementId)
{
    var select = window.document.getElementById(elementId);
    var appender = new log4javascriptSample.Code.SelectAppender(select);
    var log = log4javascript.getDefaultLogger();
    log.addAppender(appender);
};
function AddSampleAll()
{
    var log = log4javascript.getDefaultLogger();
    log.trace("Trace activated");
    log.debug("Debug activated");
    log.info("Info activated");
    log.warn("Warn activated");
    log.error("Error activated");
    log.fatal("Fatal activated");
};
function AddSampleText()
{
    log4javascript.getDefaultLogger().warn("Hello logger !");
};
if (typeof(log4javascriptSample) == "undefined")
    var log4javascriptSample = {};
if (typeof(log4javascriptSample.Code) == "undefined")
    log4javascriptSample.Code = {};
log4javascriptSample.Code.SelectAppender = function (select)
{
    this._el = null;
    this._el = select;
    this.setLayout(new log4javascript.SimpleLayout());
};
log4javascriptSample.Code.SelectAppender.prototype = new log4javascript.Appender();
log4javascriptSample.Code.SelectAppender.prototype.append = function (loggingEvent)
{
    var messag = this.getFormatedMessage(loggingEvent);
    var opt = new Option(messag, "", false, true);
    this._el.options.add(opt);
};
log4javascriptSample.Code.SelectAppender.prototype.getFormatedMessage = function (loggingEvent)
{
    var layout = this.getLayout();
    var formattedMessage = layout.format(loggingEvent);
    if (layout.ignoresThrowable() && loggingEvent.exception != null)
    {
        formattedMessage += loggingEvent.getThrowableStrRep();
    }
    return formattedMessage;
};
log4javascriptSample.Code.SelectAppender.prototype.toString = function ()
{
    return "SelectAppender[" + this._el.id + "]";
};
